{
	"id": "0ca771a8c4704a27cd1c2dcf8485b433",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC20Reward.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@hyperlane-xyz/core/contracts/interfaces/IMessageRecipient.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\n\r\ncontract ERC20Reward is ERC20Pausable, IMessageRecipient, Ownable, ERC20Burnable {\r\n    address public hyperlaneMailbox;\r\n    mapping(uint32 => bytes32) public trustedRemotes;\r\n\r\n    uint256 public constant MAX_SUPPLY = 1000000 * 10**18; // 1 million tokens\r\n    uint256 public constant DAILY_REWARD_LIMIT = 1000 * 10**18; // 1000 tokens\r\n\r\n    mapping(address => bool) public gameMasters;\r\n    mapping(address => uint256) public lastRewardTime;\r\n    uint256 private _tokenIdCounter;\r\n\r\n    event RewardMinted(address indexed player, uint256 amount);\r\n    event GameMasterAdded(address indexed gameMaster);\r\n    event GameMasterRemoved(address indexed gameMaster);\r\n\r\n    constructor(address _hyperlaneMailbox) ERC20(\"Bilis\", \"BLS\") Ownable(msg.sender) {\r\n        hyperlaneMailbox = _hyperlaneMailbox;\r\n        gameMasters[msg.sender] = true;\r\n    }\r\n\r\n    modifier onlyGameMaster() {\r\n        require(gameMasters[msg.sender], \"Caller is not a game master\");\r\n        _;\r\n    }\r\n\r\n    function handle(\r\n        uint32 _origin,\r\n        bytes32 _sender,\r\n        bytes calldata _body\r\n    ) external payable override whenNotPaused {\r\n        require(msg.sender == hyperlaneMailbox, \"Caller must be the mailbox\");\r\n        require(_sender == trustedRemotes[_origin], \"Sender must be trusted remote\");\r\n\r\n        (address player, uint256 amount) = abi.decode(_body, (address, uint256));\r\n        _mintReward(player, amount);\r\n    }\r\n\r\n    function setTrustedRemote(uint32 _domain, bytes32 _trustedRemote) external onlyOwner {\r\n        trustedRemotes[_domain] = _trustedRemote;\r\n    }\r\n\r\n    function setMailbox(address _mailbox) external onlyOwner {\r\n        hyperlaneMailbox = _mailbox;\r\n    }\r\n\r\n    function addGameMaster(address _gameMaster) external onlyOwner {\r\n        gameMasters[_gameMaster] = true;\r\n        emit GameMasterAdded(_gameMaster);\r\n    }\r\n\r\n    function removeGameMaster(address _gameMaster) external onlyOwner {\r\n        gameMasters[_gameMaster] = false;\r\n        emit GameMasterRemoved(_gameMaster);\r\n    }\r\n\r\n    function mintReward(address _player, uint256 _amount) external onlyGameMaster whenNotPaused {\r\n        _mintReward(_player, _amount);\r\n    }\r\n\r\n    function _mintReward(address _player, uint256 _amount) internal {\r\n        require(totalSupply() + _amount <= MAX_SUPPLY, \"Max supply reached\");\r\n        require(block.timestamp - lastRewardTime[_player] >= 1 days, \"Daily reward limit reached\");\r\n        require(_amount <= DAILY_REWARD_LIMIT, \"Reward exceeds daily limit\");\r\n\r\n        _mint(_player, _amount);\r\n        lastRewardTime[_player] = block.timestamp;\r\n        emit RewardMinted(_player, _amount);\r\n    }\r\n\r\n    function getTokenId() external returns (uint256) {\r\n        _tokenIdCounter += 1;\r\n        return _tokenIdCounter;\r\n    }\r\n\r\n    // Override _update to resolve the inheritance conflict\r\n    function _update(address from, address to, uint256 value) internal virtual override(ERC20, ERC20Pausable) {\r\n        super._update(from, to, value);\r\n    }\r\n\r\n    // Override required functions\r\n    function pause() public onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() public onlyOwner {\r\n        _unpause();\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@hyperlane-xyz/core/contracts/interfaces/IMessageRecipient.sol": {
				"content": "// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity >=0.6.11;\n\ninterface IMessageRecipient {\n    function handle(\n        uint32 _origin,\n        bytes32 _sender,\n        bytes calldata _message\n    ) external payable;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@hyperlane-xyz/core/contracts/interfaces/IMessageRecipient.sol": {
				"IMessageRecipient": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_origin",
									"type": "uint32"
								},
								{
									"internalType": "bytes32",
									"name": "_sender",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_message",
									"type": "bytes"
								}
							],
							"name": "handle",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"handle(uint32,bytes32,bytes)": "56d5d475"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_origin\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"handle\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@hyperlane-xyz/core/contracts/interfaces/IMessageRecipient.sol\":\"IMessageRecipient\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@hyperlane-xyz/core/contracts/interfaces/IMessageRecipient.sol\":{\"keccak256\":\"0x145e8332a91295a710deb3cb1ab689144262ef6ec66d9570c600b778e9dd964d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://a22ad97b1d8d3a37e8b4ad1519b893ac7cdf718c3a340999ffef4fb04060f119\",\"dweb:/ipfs/QmXp3w8yPm1vHyNrrSLr4YtRMP44eLadHnXSAjSecqB7H6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 20,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 325,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 327,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 329,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 331,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 325,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 327,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 329,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 331,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"ERC20Pausable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"paused()": "5c975abb",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99\",\"dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 325,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 327,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 329,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 331,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1034,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1034,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC20Reward.sol": {
				"ERC20Reward": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_hyperlaneMailbox",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "gameMaster",
									"type": "address"
								}
							],
							"name": "GameMasterAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "gameMaster",
									"type": "address"
								}
							],
							"name": "GameMasterRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DAILY_REWARD_LIMIT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_gameMaster",
									"type": "address"
								}
							],
							"name": "addGameMaster",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "gameMasters",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_origin",
									"type": "uint32"
								},
								{
									"internalType": "bytes32",
									"name": "_sender",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_body",
									"type": "bytes"
								}
							],
							"name": "handle",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hyperlaneMailbox",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastRewardTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_player",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mintReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_gameMaster",
									"type": "address"
								}
							],
							"name": "removeGameMaster",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_mailbox",
									"type": "address"
								}
							],
							"name": "setMailbox",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_domain",
									"type": "uint32"
								},
								{
									"internalType": "bytes32",
									"name": "_trustedRemote",
									"type": "bytes32"
								}
							],
							"name": "setTrustedRemote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"name": "trustedRemotes",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20Reward.sol\":400:3582  contract ERC20Reward is ERC20Pausable, IMessageRecipient, Ownable, ERC20Burnable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC20Reward.sol\":1072:1249  constructor(address _hyperlaneMailbox) ERC20(\"Bilis\", \"BLS\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ERC20Reward.sol\":1141:1151  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x42696c6973000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x424c530000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1241:1246  false */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1238  _paused */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1246  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_14\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_17\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/ERC20Reward.sol\":1183:1200  _hyperlaneMailbox */\n  dup1\n    /* \"contracts/ERC20Reward.sol\":1164:1180  hyperlaneMailbox */\n  0x06\n  0x00\n    /* \"contracts/ERC20Reward.sol\":1164:1200  hyperlaneMailbox = _hyperlaneMailbox */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC20Reward.sol\":1237:1241  true */\n  0x01\n    /* \"contracts/ERC20Reward.sol\":1211:1222  gameMasters */\n  0x08\n    /* \"contracts/ERC20Reward.sol\":1211:1234  gameMasters[msg.sender] */\n  0x00\n    /* \"contracts/ERC20Reward.sol\":1223:1233  msg.sender */\n  caller\n    /* \"contracts/ERC20Reward.sol\":1211:1234  gameMasters[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/ERC20Reward.sol\":1211:1241  gameMasters[msg.sender] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC20Reward.sol\":1072:1249  constructor(address _hyperlaneMailbox) ERC20(\"Bilis\", \"BLS\") Ownable(msg.sender) {... */\n  pop\n    /* \"contracts/ERC20Reward.sol\":400:3582  contract ERC20Reward is ERC20Pausable, IMessageRecipient, Ownable, ERC20Burnable {... */\n  jump(tag_20)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x01\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_23:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_25:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_26:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_56\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_25\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_27:\n    /* \"#utility.yul\":641:665   */\n  tag_58\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_26\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_59:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_28:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_61\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_27\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_64\n  tag_23\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":932:1051   */\ntag_63:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_65\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_28\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_29:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_30:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_31:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_32:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_70\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_70:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_71\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_72\n  tag_31\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1909:1993   */\ntag_71:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_33:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_34:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_35:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_36:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_77\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_35\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2624:2663   */\n  tag_78\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_35\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_37:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_38:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_39:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_82\n    /* \"#utility.yul\":3013:3047   */\n  tag_83\n    /* \"#utility.yul\":3022:3046   */\n  tag_84\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_37\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3013:3047   */\n  tag_38\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2995:3048   */\n  tag_37\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_40:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_41:\n    /* \"#utility.yul\":3251:3290   */\n  tag_87\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_39\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3312:3403   */\n  tag_88\n    /* \"#utility.yul\":3361:3402   */\n  tag_89\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_40\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_36\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_42:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3482:3483   */\n  0x00\n    /* \"#utility.yul\":3475:3483   */\n  swap1\n  pop\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_43:\n    /* \"#utility.yul\":3572:3604   */\n  tag_92\n  tag_42\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3613:3678   */\n  tag_93\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_41\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_44:\n    /* \"#utility.yul\":3750:3870   */\ntag_95:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_98\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_43\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_95)\ntag_97:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_45:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_101\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_33\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":4101:4130   */\n  tag_102\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_34\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_103:\n    /* \"#utility.yul\":4328:4408   */\n  tag_104\n    /* \"#utility.yul\":4384:4406   */\n  tag_105\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_34\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_44\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_100:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_46:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_47:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_108\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_46\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_48:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_110\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_47\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_10:\n    /* \"#utility.yul\":5145:5182   */\n  tag_112\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_29\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_114\n  tag_30\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5233:5289   */\ntag_113:\n    /* \"#utility.yul\":5313:5351   */\n  tag_115\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_32\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5398:5465   */\n  tag_116\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_45\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_118\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_119:\n    /* \"#utility.yul\":6339:6406   */\n  tag_120\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_48\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_117)\n    /* \"#utility.yul\":5560:6178   */\ntag_118:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_121\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_33\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_122:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_122)\ntag_124:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_126\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_47\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_125:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_117:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_49:\n    /* \"#utility.yul\":6516:6540   */\n  tag_128\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_26\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_16:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_130\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_49\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ERC20Reward.sol\":400:3582  contract ERC20Reward is ERC20Pausable, IMessageRecipient, Ownable, ERC20Burnable {... */\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20Reward.sol\":400:3582  contract ERC20Reward is ERC20Pausable, IMessageRecipient, Ownable, ERC20Burnable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5c975abb\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xdfca5ce3\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf3c61d6b\n      eq\n      tag_31\n      jumpi\n      jump(tag_1)\n    tag_34:\n      dup1\n      0x95d89b41\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x9a49090e\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xbca12299\n      eq\n      tag_27\n      jumpi\n      jump(tag_1)\n    tag_33:\n      dup1\n      0x79cc6790\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8b1c7b10\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_23\n      jumpi\n      jump(tag_1)\n    tag_35:\n      dup1\n      0x5c975abb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_19\n      jumpi\n      jump(tag_1)\n    tag_32:\n      dup1\n      0x2bda3e0b\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x3f4ba83a\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x4080d640\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x56d5d475\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_37:\n      dup1\n      0x2bda3e0b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x32cb6b0c\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3b5d441e\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_36:\n      dup1\n      0x18160ddd\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1a6e4db4\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1d187c50\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_38:\n      dup1\n      0x010a38f5\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"contracts/ERC20Reward.sol\":3056:3177  function getTokenId() external returns (uint256) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      revert(0x00, 0x00)\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      revert(0x00, 0x00)\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      revert(0x00, 0x00)\n    tag_49:\n      pop\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      revert(0x00, 0x00)\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20Reward.sol\":488:519  address public hyperlaneMailbox */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      revert(0x00, 0x00)\n    tag_60:\n      pop\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20Reward.sol\":526:574  mapping(uint32 => bytes32) public trustedRemotes */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      revert(0x00, 0x00)\n    tag_65:\n      pop\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      revert(0x00, 0x00)\n    tag_72:\n      pop\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20Reward.sol\":1836:1980  function setTrustedRemote(uint32 _domain, bytes32 _trustedRemote) external onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      revert(0x00, 0x00)\n    tag_78:\n      pop\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      revert(0x00, 0x00)\n    tag_83:\n      pop\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20Reward.sol\":583:636  uint256 public constant MAX_SUPPLY = 1000000 * 10**18 */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      revert(0x00, 0x00)\n    tag_88:\n      pop\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20Reward.sol\":795:844  mapping(address => uint256) public lastRewardTime */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      revert(0x00, 0x00)\n    tag_92:\n      pop\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20Reward.sol\":3514:3579  function unpause() public onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      revert(0x00, 0x00)\n    tag_98:\n      pop\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      stop\n        /* \"contracts/ERC20Reward.sol\":745:788  mapping(address => bool) public gameMasters */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      revert(0x00, 0x00)\n    tag_101:\n      pop\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      revert(0x00, 0x00)\n    tag_106:\n      pop\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      tag_110\n      jump\t// in\n    tag_107:\n      stop\n        /* \"contracts/ERC20Reward.sol\":1385:1828  function handle(... */\n    tag_16:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      tag_114\n      jump\t// in\n    tag_111:\n      stop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      revert(0x00, 0x00)\n    tag_115:\n      pop\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      revert(0x00, 0x00)\n    tag_119:\n      pop\n      tag_120\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_121:\n      tag_122\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_124\n      jumpi\n      revert(0x00, 0x00)\n    tag_124:\n      pop\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      revert(0x00, 0x00)\n    tag_127:\n      pop\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n    tag_128:\n      stop\n        /* \"contracts/ERC20Reward.sol\":3445:3506  function pause() public onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_131\n      jumpi\n      revert(0x00, 0x00)\n    tag_131:\n      pop\n      tag_132\n      tag_133\n      jump\t// in\n    tag_132:\n      stop\n        /* \"contracts/ERC20Reward.sol\":2099:2256  function addGameMaster(address _gameMaster) external onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_134\n      jumpi\n      revert(0x00, 0x00)\n    tag_134:\n      pop\n      tag_135\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_136:\n      tag_137\n      jump\t// in\n    tag_135:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_138\n      jumpi\n      revert(0x00, 0x00)\n    tag_138:\n      pop\n      tag_139\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      tag_141\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_142\n      jumpi\n      revert(0x00, 0x00)\n    tag_142:\n      pop\n      tag_143\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      tag_145\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20Reward.sol\":2435:2575  function mintReward(address _player, uint256 _amount) external onlyGameMaster whenNotPaused {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_146\n      jumpi\n      revert(0x00, 0x00)\n    tag_146:\n      pop\n      tag_147\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_148:\n      tag_149\n      jump\t// in\n    tag_147:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_150\n      jumpi\n      revert(0x00, 0x00)\n    tag_150:\n      pop\n      tag_151\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_152\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_152:\n      tag_153\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      tag_154\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20Reward.sol\":663:721  uint256 public constant DAILY_REWARD_LIMIT = 1000 * 10**18 */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      revert(0x00, 0x00)\n    tag_155:\n      pop\n      tag_156\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      tag_158\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_159\n      jumpi\n      revert(0x00, 0x00)\n    tag_159:\n      pop\n      tag_160\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      tag_163\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      tag_164\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20Reward.sol\":2264:2427  function removeGameMaster(address _gameMaster) external onlyOwner {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_165\n      jumpi\n      revert(0x00, 0x00)\n    tag_165:\n      pop\n      tag_166\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_167\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_167:\n      tag_168\n      jump\t// in\n    tag_166:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_169\n      jumpi\n      revert(0x00, 0x00)\n    tag_169:\n      pop\n      tag_170\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_171:\n      tag_172\n      jump\t// in\n    tag_170:\n      stop\n        /* \"contracts/ERC20Reward.sol\":1988:2091  function setMailbox(address _mailbox) external onlyOwner {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_173\n      jumpi\n      revert(0x00, 0x00)\n    tag_173:\n      pop\n      tag_174\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_175\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_175:\n      tag_176\n      jump\t// in\n    tag_174:\n      stop\n        /* \"contracts/ERC20Reward.sol\":3056:3177  function getTokenId() external returns (uint256) {... */\n    tag_41:\n        /* \"contracts/ERC20Reward.sol\":3096:3103  uint256 */\n      0x00\n        /* \"contracts/ERC20Reward.sol\":3135:3136  1 */\n      0x01\n        /* \"contracts/ERC20Reward.sol\":3116:3131  _tokenIdCounter */\n      0x0a\n      0x00\n        /* \"contracts/ERC20Reward.sol\":3116:3136  _tokenIdCounter += 1 */\n      dup3\n      dup3\n      sload\n      tag_178\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20Reward.sol\":3154:3169  _tokenIdCounter */\n      sload(0x0a)\n        /* \"contracts/ERC20Reward.sol\":3147:3169  return _tokenIdCounter */\n      swap1\n      pop\n        /* \"contracts/ERC20Reward.sol\":3056:3177  function getTokenId() external returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_183\n      swap1\n      tag_182\n      jump\t// in\n    tag_183:\n      dup1\n      iszero\n      tag_184\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_185\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_184)\n    tag_185:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_186:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_186\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_184:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20Reward.sol\":488:519  address public hyperlaneMailbox */\n    tag_62:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20Reward.sol\":526:574  mapping(uint32 => bytes32) public trustedRemotes */\n    tag_69:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20Reward.sol\":1836:1980  function setTrustedRemote(uint32 _domain, bytes32 _trustedRemote) external onlyOwner {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_200:\n        /* \"contracts/ERC20Reward.sol\":1958:1972  _trustedRemote */\n      dup1\n        /* \"contracts/ERC20Reward.sol\":1932:1946  trustedRemotes */\n      0x07\n        /* \"contracts/ERC20Reward.sol\":1932:1955  trustedRemotes[_domain] */\n      0x00\n        /* \"contracts/ERC20Reward.sol\":1947:1954  _domain */\n      dup5\n        /* \"contracts/ERC20Reward.sol\":1932:1955  trustedRemotes[_domain] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20Reward.sol\":1932:1972  trustedRemotes[_domain] = _trustedRemote */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20Reward.sol\":1836:1980  function setTrustedRemote(uint32 _domain, bytes32 _trustedRemote) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20Reward.sol\":583:636  uint256 public constant MAX_SUPPLY = 1000000 * 10**18 */\n    tag_90:\n        /* \"contracts/ERC20Reward.sol\":620:636  1000000 * 10**18 */\n      0xd3c21bcecceda1000000\n        /* \"contracts/ERC20Reward.sol\":583:636  uint256 public constant MAX_SUPPLY = 1000000 * 10**18 */\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20Reward.sol\":795:844  mapping(address => uint256) public lastRewardTime */\n    tag_96:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20Reward.sol\":3514:3579  function unpause() public onlyOwner {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_205:\n        /* \"contracts/ERC20Reward.sol\":3561:3571  _unpause() */\n      tag_207\n        /* \"contracts/ERC20Reward.sol\":3561:3569  _unpause */\n      tag_208\n        /* \"contracts/ERC20Reward.sol\":3561:3571  _unpause() */\n      jump\t// in\n    tag_207:\n        /* \"contracts/ERC20Reward.sol\":3514:3579  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ERC20Reward.sol\":745:788  mapping(address => bool) public gameMasters */\n    tag_104:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:688  _msgSender */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC20Reward.sol\":1385:1828  function handle(... */\n    tag_114:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_214\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_215\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_214:\n        /* \"contracts/ERC20Reward.sol\":1563:1579  hyperlaneMailbox */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20Reward.sol\":1549:1579  msg.sender == hyperlaneMailbox */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20Reward.sol\":1549:1559  msg.sender */\n      caller\n        /* \"contracts/ERC20Reward.sol\":1549:1579  msg.sender == hyperlaneMailbox */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC20Reward.sol\":1541:1610  require(msg.sender == hyperlaneMailbox, \"Caller must be the mailbox\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"contracts/ERC20Reward.sol\":1640:1654  trustedRemotes */\n      0x07\n        /* \"contracts/ERC20Reward.sol\":1640:1663  trustedRemotes[_origin] */\n      0x00\n        /* \"contracts/ERC20Reward.sol\":1655:1662  _origin */\n      dup6\n        /* \"contracts/ERC20Reward.sol\":1640:1663  trustedRemotes[_origin] */\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20Reward.sol\":1629:1636  _sender */\n      dup4\n        /* \"contracts/ERC20Reward.sol\":1629:1663  _sender == trustedRemotes[_origin] */\n      eq\n        /* \"contracts/ERC20Reward.sol\":1621:1697  require(_sender == trustedRemotes[_origin], \"Sender must be trusted remote\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"contracts/ERC20Reward.sol\":1711:1725  address player */\n      0x00\n        /* \"contracts/ERC20Reward.sol\":1727:1741  uint256 amount */\n      0x00\n        /* \"contracts/ERC20Reward.sol\":1756:1761  _body */\n      dup4\n      dup4\n        /* \"contracts/ERC20Reward.sol\":1745:1782  abi.decode(_body, (address, uint256)) */\n      dup2\n      add\n      swap1\n      tag_223\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n        /* \"contracts/ERC20Reward.sol\":1710:1782  (address player, uint256 amount) = abi.decode(_body, (address, uint256)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/ERC20Reward.sol\":1793:1820  _mintReward(player, amount) */\n      tag_225\n        /* \"contracts/ERC20Reward.sol\":1805:1811  player */\n      dup3\n        /* \"contracts/ERC20Reward.sol\":1813:1819  amount */\n      dup3\n        /* \"contracts/ERC20Reward.sol\":1793:1804  _mintReward */\n      tag_226\n        /* \"contracts/ERC20Reward.sol\":1793:1820  _mintReward(player, amount) */\n      jump\t// in\n    tag_225:\n        /* \"contracts/ERC20Reward.sol\":1530:1828  {... */\n      pop\n      pop\n        /* \"contracts/ERC20Reward.sol\":1385:1828  function handle(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1897:1901  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1913:1927  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_230\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_232\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_233\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1131  _msgSender */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20Reward.sol\":3445:3506  function pause() public onlyOwner {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_239:\n        /* \"contracts/ERC20Reward.sol\":3490:3498  _pause() */\n      tag_241\n        /* \"contracts/ERC20Reward.sol\":3490:3496  _pause */\n      tag_242\n        /* \"contracts/ERC20Reward.sol\":3490:3498  _pause() */\n      jump\t// in\n    tag_241:\n        /* \"contracts/ERC20Reward.sol\":3445:3506  function pause() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ERC20Reward.sol\":2099:2256  function addGameMaster(address _gameMaster) external onlyOwner {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_244\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_244:\n        /* \"contracts/ERC20Reward.sol\":2200:2204  true */\n      0x01\n        /* \"contracts/ERC20Reward.sol\":2173:2184  gameMasters */\n      0x08\n        /* \"contracts/ERC20Reward.sol\":2173:2197  gameMasters[_gameMaster] */\n      0x00\n        /* \"contracts/ERC20Reward.sol\":2185:2196  _gameMaster */\n      dup4\n        /* \"contracts/ERC20Reward.sol\":2173:2197  gameMasters[_gameMaster] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC20Reward.sol\":2173:2204  gameMasters[_gameMaster] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20Reward.sol\":2236:2247  _gameMaster */\n      dup1\n        /* \"contracts/ERC20Reward.sol\":2220:2248  GameMasterAdded(_gameMaster) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90e5d96e2f61f1fa8b5c535ec11045a07288f1ee285325f85caf8379789e24\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ERC20Reward.sol\":2099:2256  function addGameMaster(address _gameMaster) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_248\n      swap1\n      tag_182\n      jump\t// in\n    tag_248:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_249\n      swap1\n      tag_182\n      jump\t// in\n    tag_249:\n      dup1\n      iszero\n      tag_250\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_251\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_250)\n    tag_251:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_252:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_252\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_250:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20Reward.sol\":2435:2575  function mintReward(address _player, uint256 _amount) external onlyGameMaster whenNotPaused {... */\n    tag_149:\n        /* \"contracts/ERC20Reward.sol\":1302:1313  gameMasters */\n      0x08\n        /* \"contracts/ERC20Reward.sol\":1302:1325  gameMasters[msg.sender] */\n      0x00\n        /* \"contracts/ERC20Reward.sol\":1314:1324  msg.sender */\n      caller\n        /* \"contracts/ERC20Reward.sol\":1302:1325  gameMasters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ERC20Reward.sol\":1294:1357  require(gameMasters[msg.sender], \"Caller is not a game master\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap1\n      tag_256\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_254:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_258\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_215\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_258:\n        /* \"contracts/ERC20Reward.sol\":2538:2567  _mintReward(_player, _amount) */\n      tag_260\n        /* \"contracts/ERC20Reward.sol\":2550:2557  _player */\n      dup3\n        /* \"contracts/ERC20Reward.sol\":2559:2566  _amount */\n      dup3\n        /* \"contracts/ERC20Reward.sol\":2538:2549  _mintReward */\n      tag_226\n        /* \"contracts/ERC20Reward.sol\":2538:2567  _mintReward(_player, _amount) */\n      jump\t// in\n    tag_260:\n        /* \"contracts/ERC20Reward.sol\":2435:2575  function mintReward(address _player, uint256 _amount) external onlyGameMaster whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_262\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20Reward.sol\":663:721  uint256 public constant DAILY_REWARD_LIMIT = 1000 * 10**18 */\n    tag_157:\n        /* \"contracts/ERC20Reward.sol\":708:721  1000 * 10**18 */\n      0x3635c9adc5dea00000\n        /* \"contracts/ERC20Reward.sol\":663:721  uint256 public constant DAILY_REWARD_LIMIT = 1000 * 10**18 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20Reward.sol\":2264:2427  function removeGameMaster(address _gameMaster) external onlyOwner {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_266\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_266:\n        /* \"contracts/ERC20Reward.sol\":2368:2373  false */\n      0x00\n        /* \"contracts/ERC20Reward.sol\":2341:2352  gameMasters */\n      0x08\n        /* \"contracts/ERC20Reward.sol\":2341:2365  gameMasters[_gameMaster] */\n      0x00\n        /* \"contracts/ERC20Reward.sol\":2353:2364  _gameMaster */\n      dup4\n        /* \"contracts/ERC20Reward.sol\":2341:2365  gameMasters[_gameMaster] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC20Reward.sol\":2341:2373  gameMasters[_gameMaster] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20Reward.sol\":2407:2418  _gameMaster */\n      dup1\n        /* \"contracts/ERC20Reward.sol\":2389:2419  GameMasterRemoved(_gameMaster) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x22c7af3157a517d9d910083d0cd16646c9204f9d52824a23558c7d97d796d638\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ERC20Reward.sol\":2264:2427  function removeGameMaster(address _gameMaster) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_269\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_271\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_273\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_233\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC20Reward.sol\":1988:2091  function setMailbox(address _mailbox) external onlyOwner {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_275\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_275:\n        /* \"contracts/ERC20Reward.sol\":2075:2083  _mailbox */\n      dup1\n        /* \"contracts/ERC20Reward.sol\":2056:2072  hyperlaneMailbox */\n      0x06\n      0x00\n        /* \"contracts/ERC20Reward.sol\":2056:2083  hyperlaneMailbox = _mailbox */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20Reward.sol\":1988:2091  function setMailbox(address _mailbox) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_279\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_280\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_282\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_283\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_284\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_286\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_287\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_280\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_289\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_290\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_290:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_292\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_292:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_293\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_294\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_296\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_296:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_297\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_298\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_299\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_300\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_300:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_298:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      tag_302\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1735  _requirePaused */\n      tag_303\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      jump\t// in\n    tag_302:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2778:2783  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2775  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2783  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n      tag_305\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2817  _msgSender */\n      tag_189\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n      jump\t// in\n    tag_305:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_306\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_306:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_308\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_309\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_310\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_294\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_310:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n      tag_312\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2073  paused */\n      tag_117\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n      jump\t// in\n    tag_312:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n      iszero\n      tag_313\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2098:2113  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n    tag_313:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/ERC20Reward.sol\":2583:3048  function _mintReward(address _player, uint256 _amount) internal {... */\n    tag_226:\n        /* \"contracts/ERC20Reward.sol\":620:636  1000000 * 10**18 */\n      0xd3c21bcecceda1000000\n        /* \"contracts/ERC20Reward.sol\":2682:2689  _amount */\n      dup2\n        /* \"contracts/ERC20Reward.sol\":2666:2679  totalSupply() */\n      tag_315\n        /* \"contracts/ERC20Reward.sol\":2666:2677  totalSupply */\n      tag_58\n        /* \"contracts/ERC20Reward.sol\":2666:2679  totalSupply() */\n      jump\t// in\n    tag_315:\n        /* \"contracts/ERC20Reward.sol\":2666:2689  totalSupply() + _amount */\n      tag_316\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_316:\n        /* \"contracts/ERC20Reward.sol\":2666:2703  totalSupply() + _amount <= MAX_SUPPLY */\n      gt\n      iszero\n        /* \"contracts/ERC20Reward.sol\":2658:2726  require(totalSupply() + _amount <= MAX_SUPPLY, \"Max supply reached\") */\n      tag_317\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_318\n      swap1\n      tag_319\n      jump\t// in\n    tag_318:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_317:\n        /* \"contracts/ERC20Reward.sol\":2790:2796  1 days */\n      0x015180\n        /* \"contracts/ERC20Reward.sol\":2763:2777  lastRewardTime */\n      0x09\n        /* \"contracts/ERC20Reward.sol\":2763:2786  lastRewardTime[_player] */\n      0x00\n        /* \"contracts/ERC20Reward.sol\":2778:2785  _player */\n      dup5\n        /* \"contracts/ERC20Reward.sol\":2763:2786  lastRewardTime[_player] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20Reward.sol\":2745:2760  block.timestamp */\n      timestamp\n        /* \"contracts/ERC20Reward.sol\":2745:2786  block.timestamp - lastRewardTime[_player] */\n      tag_320\n      swap2\n      swap1\n      tag_321\n      jump\t// in\n    tag_320:\n        /* \"contracts/ERC20Reward.sol\":2745:2796  block.timestamp - lastRewardTime[_player] >= 1 days */\n      lt\n      iszero\n        /* \"contracts/ERC20Reward.sol\":2737:2827  require(block.timestamp - lastRewardTime[_player] >= 1 days, \"Daily reward limit reached\") */\n      tag_322\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_323\n      swap1\n      tag_324\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_322:\n        /* \"contracts/ERC20Reward.sol\":708:721  1000 * 10**18 */\n      0x3635c9adc5dea00000\n        /* \"contracts/ERC20Reward.sol\":2846:2853  _amount */\n      dup2\n        /* \"contracts/ERC20Reward.sol\":2846:2875  _amount <= DAILY_REWARD_LIMIT */\n      gt\n      iszero\n        /* \"contracts/ERC20Reward.sol\":2838:2906  require(_amount <= DAILY_REWARD_LIMIT, \"Reward exceeds daily limit\") */\n      tag_325\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_326\n      swap1\n      tag_327\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_325:\n        /* \"contracts/ERC20Reward.sol\":2919:2942  _mint(_player, _amount) */\n      tag_328\n        /* \"contracts/ERC20Reward.sol\":2925:2932  _player */\n      dup3\n        /* \"contracts/ERC20Reward.sol\":2934:2941  _amount */\n      dup3\n        /* \"contracts/ERC20Reward.sol\":2919:2924  _mint */\n      tag_329\n        /* \"contracts/ERC20Reward.sol\":2919:2942  _mint(_player, _amount) */\n      jump\t// in\n    tag_328:\n        /* \"contracts/ERC20Reward.sol\":2979:2994  block.timestamp */\n      timestamp\n        /* \"contracts/ERC20Reward.sol\":2953:2967  lastRewardTime */\n      0x09\n        /* \"contracts/ERC20Reward.sol\":2953:2976  lastRewardTime[_player] */\n      0x00\n        /* \"contracts/ERC20Reward.sol\":2968:2975  _player */\n      dup5\n        /* \"contracts/ERC20Reward.sol\":2953:2976  lastRewardTime[_player] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20Reward.sol\":2953:2994  lastRewardTime[_player] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20Reward.sol\":3023:3030  _player */\n      dup2\n        /* \"contracts/ERC20Reward.sol\":3010:3040  RewardMinted(_player, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe8ea3d4dd0a2eaaf3f7532ad391255544f8a4bcf78f850bbff61d5bac9f77552\n        /* \"contracts/ERC20Reward.sol\":3032:3039  _amount */\n      dup3\n        /* \"contracts/ERC20Reward.sol\":3010:3040  RewardMinted(_player, _amount) */\n      mload(0x40)\n      tag_330\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_330:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ERC20Reward.sol\":2583:3048  function _mintReward(address _player, uint256 _amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x01\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_333\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_215\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_333:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2532:2536  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2529  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2536  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      tag_335\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2568  _msgSender */\n      tag_189\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      mload(0x40)\n      tag_336\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_336:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_338\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_339\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_339:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_338:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_340\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_341\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_341:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_342\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_343\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_343:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_342:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20Reward.sol\":3246:3401  function _update(address from, address to, uint256 value) internal virtual override(ERC20, ERC20Pausable) {... */\n    tag_294:\n        /* \"contracts/ERC20Reward.sol\":3363:3393  super._update(from, to, value) */\n      tag_345\n        /* \"contracts/ERC20Reward.sol\":3377:3381  from */\n      dup4\n        /* \"contracts/ERC20Reward.sol\":3383:3385  to */\n      dup4\n        /* \"contracts/ERC20Reward.sol\":3387:3392  value */\n      dup4\n        /* \"contracts/ERC20Reward.sol\":3363:3376  super._update */\n      tag_346\n        /* \"contracts/ERC20Reward.sol\":3363:3393  super._update(from, to, value) */\n      jump\t// in\n    tag_345:\n        /* \"contracts/ERC20Reward.sol\":3246:3401  function _update(address from, address to, uint256 value) internal virtual override(ERC20, ERC20Pausable) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n    tag_303:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2273  paused() */\n      tag_348\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2271  paused */\n      tag_117\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2273  paused() */\n      jump\t// in\n    tag_348:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n      tag_349\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2296:2311  ExpectedPause() */\n      mload(0x40)\n      0x8dfc202b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_329:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_351\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_352\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_352:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_351:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_353\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_294\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_353:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1112:1257  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n    tag_346:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_355\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_215\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_355:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1250  super._update(from, to, value) */\n      tag_357\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1234:1238  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1240:1242  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1244:1249  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1233  super._update */\n      tag_358\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1250  super._update(from, to, value) */\n      jump\t// in\n    tag_357:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1112:1257  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_358:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_360\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_361\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_361:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_362)\n    tag_360:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_363\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_364\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_286\n      jump\t// in\n    tag_364:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_363:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_362:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_365\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_366)\n    tag_365:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_366:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_367\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_367:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_368:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_369:\n        /* \"#utility.yul\":177:201   */\n      tag_420\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_368\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_43:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_422\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_369\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:541   */\n    tag_370:\n        /* \"#utility.yul\":494:500   */\n      0x00\n        /* \"#utility.yul\":528:533   */\n      dup2\n        /* \"#utility.yul\":522:534   */\n      mload\n        /* \"#utility.yul\":512:534   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":547:716   */\n    tag_371:\n        /* \"#utility.yul\":631:642   */\n      0x00\n        /* \"#utility.yul\":665:671   */\n      dup3\n        /* \"#utility.yul\":660:663   */\n      dup3\n        /* \"#utility.yul\":653:672   */\n      mstore\n        /* \"#utility.yul\":705:709   */\n      0x20\n        /* \"#utility.yul\":700:703   */\n      dup3\n        /* \"#utility.yul\":696:710   */\n      add\n        /* \"#utility.yul\":681:710   */\n      swap1\n      pop\n        /* \"#utility.yul\":547:716   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":722:861   */\n    tag_372:\n        /* \"#utility.yul\":811:817   */\n      dup3\n        /* \"#utility.yul\":806:809   */\n      dup2\n        /* \"#utility.yul\":801:804   */\n      dup4\n        /* \"#utility.yul\":795:818   */\n      mcopy\n        /* \"#utility.yul\":852:853   */\n      0x00\n        /* \"#utility.yul\":843:849   */\n      dup4\n        /* \"#utility.yul\":838:841   */\n      dup4\n        /* \"#utility.yul\":834:850   */\n      add\n        /* \"#utility.yul\":827:854   */\n      mstore\n        /* \"#utility.yul\":722:861   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":867:969   */\n    tag_373:\n        /* \"#utility.yul\":908:914   */\n      0x00\n        /* \"#utility.yul\":959:961   */\n      0x1f\n        /* \"#utility.yul\":955:962   */\n      not\n        /* \"#utility.yul\":950:952   */\n      0x1f\n        /* \"#utility.yul\":943:948   */\n      dup4\n        /* \"#utility.yul\":939:953   */\n      add\n        /* \"#utility.yul\":935:963   */\n      and\n        /* \"#utility.yul\":925:963   */\n      swap1\n      pop\n        /* \"#utility.yul\":867:969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":975:1352   */\n    tag_374:\n        /* \"#utility.yul\":1063:1066   */\n      0x00\n        /* \"#utility.yul\":1091:1130   */\n      tag_428\n        /* \"#utility.yul\":1124:1129   */\n      dup3\n        /* \"#utility.yul\":1091:1130   */\n      tag_370\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":1146:1217   */\n      tag_429\n        /* \"#utility.yul\":1210:1216   */\n      dup2\n        /* \"#utility.yul\":1205:1208   */\n      dup6\n        /* \"#utility.yul\":1146:1217   */\n      tag_371\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":1139:1217   */\n      swap4\n      pop\n        /* \"#utility.yul\":1226:1291   */\n      tag_430\n        /* \"#utility.yul\":1284:1290   */\n      dup2\n        /* \"#utility.yul\":1279:1282   */\n      dup6\n        /* \"#utility.yul\":1272:1276   */\n      0x20\n        /* \"#utility.yul\":1265:1270   */\n      dup7\n        /* \"#utility.yul\":1261:1277   */\n      add\n        /* \"#utility.yul\":1226:1291   */\n      tag_372\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":1316:1345   */\n      tag_431\n        /* \"#utility.yul\":1338:1344   */\n      dup2\n        /* \"#utility.yul\":1316:1345   */\n      tag_373\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":1311:1314   */\n      dup5\n        /* \"#utility.yul\":1307:1346   */\n      add\n        /* \"#utility.yul\":1300:1346   */\n      swap2\n      pop\n        /* \"#utility.yul\":1067:1352   */\n      pop\n        /* \"#utility.yul\":975:1352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1358:1671   */\n    tag_48:\n        /* \"#utility.yul\":1471:1475   */\n      0x00\n        /* \"#utility.yul\":1509:1511   */\n      0x20\n        /* \"#utility.yul\":1498:1507   */\n      dup3\n        /* \"#utility.yul\":1494:1512   */\n      add\n        /* \"#utility.yul\":1486:1512   */\n      swap1\n      pop\n        /* \"#utility.yul\":1558:1567   */\n      dup2\n        /* \"#utility.yul\":1552:1556   */\n      dup2\n        /* \"#utility.yul\":1548:1568   */\n      sub\n        /* \"#utility.yul\":1544:1545   */\n      0x00\n        /* \"#utility.yul\":1533:1542   */\n      dup4\n        /* \"#utility.yul\":1529:1546   */\n      add\n        /* \"#utility.yul\":1522:1569   */\n      mstore\n        /* \"#utility.yul\":1586:1664   */\n      tag_433\n        /* \"#utility.yul\":1659:1663   */\n      dup2\n        /* \"#utility.yul\":1650:1656   */\n      dup5\n        /* \"#utility.yul\":1586:1664   */\n      tag_374\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":1578:1664   */\n      swap1\n      pop\n        /* \"#utility.yul\":1358:1671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1758:1875   */\n    tag_376:\n        /* \"#utility.yul\":1867:1868   */\n      0x00\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1857:1869   */\n      revert\n        /* \"#utility.yul\":1881:1998   */\n    tag_377:\n        /* \"#utility.yul\":1990:1991   */\n      0x00\n        /* \"#utility.yul\":1987:1988   */\n      0x00\n        /* \"#utility.yul\":1980:1992   */\n      revert\n        /* \"#utility.yul\":2004:2130   */\n    tag_378:\n        /* \"#utility.yul\":2041:2048   */\n      0x00\n        /* \"#utility.yul\":2081:2123   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2074:2079   */\n      dup3\n        /* \"#utility.yul\":2070:2124   */\n      and\n        /* \"#utility.yul\":2059:2124   */\n      swap1\n      pop\n        /* \"#utility.yul\":2004:2130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2136:2232   */\n    tag_379:\n        /* \"#utility.yul\":2173:2180   */\n      0x00\n        /* \"#utility.yul\":2202:2226   */\n      tag_439\n        /* \"#utility.yul\":2220:2225   */\n      dup3\n        /* \"#utility.yul\":2202:2226   */\n      tag_378\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":2191:2226   */\n      swap1\n      pop\n        /* \"#utility.yul\":2136:2232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2238:2360   */\n    tag_380:\n        /* \"#utility.yul\":2311:2335   */\n      tag_441\n        /* \"#utility.yul\":2329:2334   */\n      dup2\n        /* \"#utility.yul\":2311:2335   */\n      tag_379\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":2304:2309   */\n      dup2\n        /* \"#utility.yul\":2301:2336   */\n      eq\n        /* \"#utility.yul\":2291:2354   */\n      tag_442\n      jumpi\n        /* \"#utility.yul\":2350:2351   */\n      0x00\n        /* \"#utility.yul\":2347:2348   */\n      0x00\n        /* \"#utility.yul\":2340:2352   */\n      revert\n        /* \"#utility.yul\":2291:2354   */\n    tag_442:\n        /* \"#utility.yul\":2238:2360   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2366:2505   */\n    tag_381:\n        /* \"#utility.yul\":2412:2417   */\n      0x00\n        /* \"#utility.yul\":2450:2456   */\n      dup2\n        /* \"#utility.yul\":2437:2457   */\n      calldataload\n        /* \"#utility.yul\":2428:2457   */\n      swap1\n      pop\n        /* \"#utility.yul\":2466:2499   */\n      tag_444\n        /* \"#utility.yul\":2493:2498   */\n      dup2\n        /* \"#utility.yul\":2466:2499   */\n      tag_380\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":2366:2505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2511:2633   */\n    tag_382:\n        /* \"#utility.yul\":2584:2608   */\n      tag_446\n        /* \"#utility.yul\":2602:2607   */\n      dup2\n        /* \"#utility.yul\":2584:2608   */\n      tag_368\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":2577:2582   */\n      dup2\n        /* \"#utility.yul\":2574:2609   */\n      eq\n        /* \"#utility.yul\":2564:2627   */\n      tag_447\n      jumpi\n        /* \"#utility.yul\":2623:2624   */\n      0x00\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2613:2625   */\n      revert\n        /* \"#utility.yul\":2564:2627   */\n    tag_447:\n        /* \"#utility.yul\":2511:2633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2639:2778   */\n    tag_383:\n        /* \"#utility.yul\":2685:2690   */\n      0x00\n        /* \"#utility.yul\":2723:2729   */\n      dup2\n        /* \"#utility.yul\":2710:2730   */\n      calldataload\n        /* \"#utility.yul\":2701:2730   */\n      swap1\n      pop\n        /* \"#utility.yul\":2739:2772   */\n      tag_449\n        /* \"#utility.yul\":2766:2771   */\n      dup2\n        /* \"#utility.yul\":2739:2772   */\n      tag_382\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":2639:2778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2784:3258   */\n    tag_52:\n        /* \"#utility.yul\":2852:2858   */\n      0x00\n        /* \"#utility.yul\":2860:2866   */\n      0x00\n        /* \"#utility.yul\":2909:2911   */\n      0x40\n        /* \"#utility.yul\":2897:2906   */\n      dup4\n        /* \"#utility.yul\":2888:2895   */\n      dup6\n        /* \"#utility.yul\":2884:2907   */\n      sub\n        /* \"#utility.yul\":2880:2912   */\n      slt\n        /* \"#utility.yul\":2877:2996   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":2915:2994   */\n      tag_452\n      tag_376\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":2877:2996   */\n    tag_451:\n        /* \"#utility.yul\":3035:3036   */\n      0x00\n        /* \"#utility.yul\":3060:3113   */\n      tag_453\n        /* \"#utility.yul\":3105:3112   */\n      dup6\n        /* \"#utility.yul\":3096:3102   */\n      dup3\n        /* \"#utility.yul\":3085:3094   */\n      dup7\n        /* \"#utility.yul\":3081:3103   */\n      add\n        /* \"#utility.yul\":3060:3113   */\n      tag_381\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":3050:3113   */\n      swap3\n      pop\n        /* \"#utility.yul\":3006:3123   */\n      pop\n        /* \"#utility.yul\":3162:3164   */\n      0x20\n        /* \"#utility.yul\":3188:3241   */\n      tag_454\n        /* \"#utility.yul\":3233:3240   */\n      dup6\n        /* \"#utility.yul\":3224:3230   */\n      dup3\n        /* \"#utility.yul\":3213:3222   */\n      dup7\n        /* \"#utility.yul\":3209:3231   */\n      add\n        /* \"#utility.yul\":3188:3241   */\n      tag_383\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":3178:3241   */\n      swap2\n      pop\n        /* \"#utility.yul\":3133:3251   */\n      pop\n        /* \"#utility.yul\":2784:3258   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3354   */\n    tag_384:\n        /* \"#utility.yul\":3298:3305   */\n      0x00\n        /* \"#utility.yul\":3341:3346   */\n      dup2\n        /* \"#utility.yul\":3334:3347   */\n      iszero\n        /* \"#utility.yul\":3327:3348   */\n      iszero\n        /* \"#utility.yul\":3316:3348   */\n      swap1\n      pop\n        /* \"#utility.yul\":3264:3354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3360:3469   */\n    tag_385:\n        /* \"#utility.yul\":3441:3462   */\n      tag_457\n        /* \"#utility.yul\":3456:3461   */\n      dup2\n        /* \"#utility.yul\":3441:3462   */\n      tag_384\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":3436:3439   */\n      dup3\n        /* \"#utility.yul\":3429:3463   */\n      mstore\n        /* \"#utility.yul\":3360:3469   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3475:3685   */\n    tag_55:\n        /* \"#utility.yul\":3562:3566   */\n      0x00\n        /* \"#utility.yul\":3600:3602   */\n      0x20\n        /* \"#utility.yul\":3589:3598   */\n      dup3\n        /* \"#utility.yul\":3585:3603   */\n      add\n        /* \"#utility.yul\":3577:3603   */\n      swap1\n      pop\n        /* \"#utility.yul\":3613:3678   */\n      tag_459\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3613:3678   */\n      tag_385\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":3475:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:3809   */\n    tag_386:\n        /* \"#utility.yul\":3778:3802   */\n      tag_461\n        /* \"#utility.yul\":3796:3801   */\n      dup2\n        /* \"#utility.yul\":3778:3802   */\n      tag_379\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":3773:3776   */\n      dup3\n        /* \"#utility.yul\":3766:3803   */\n      mstore\n        /* \"#utility.yul\":3691:3809   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3815:4037   */\n    tag_64:\n        /* \"#utility.yul\":3908:3912   */\n      0x00\n        /* \"#utility.yul\":3946:3948   */\n      0x20\n        /* \"#utility.yul\":3935:3944   */\n      dup3\n        /* \"#utility.yul\":3931:3949   */\n      add\n        /* \"#utility.yul\":3923:3949   */\n      swap1\n      pop\n        /* \"#utility.yul\":3959:4030   */\n      tag_463\n        /* \"#utility.yul\":4027:4028   */\n      0x00\n        /* \"#utility.yul\":4016:4025   */\n      dup4\n        /* \"#utility.yul\":4012:4029   */\n      add\n        /* \"#utility.yul\":4003:4009   */\n      dup5\n        /* \"#utility.yul\":3959:4030   */\n      tag_386\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":3815:4037   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4043:4136   */\n    tag_387:\n        /* \"#utility.yul\":4079:4086   */\n      0x00\n        /* \"#utility.yul\":4119:4129   */\n      0xffffffff\n        /* \"#utility.yul\":4112:4117   */\n      dup3\n        /* \"#utility.yul\":4108:4130   */\n      and\n        /* \"#utility.yul\":4097:4130   */\n      swap1\n      pop\n        /* \"#utility.yul\":4043:4136   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4142:4262   */\n    tag_388:\n        /* \"#utility.yul\":4214:4237   */\n      tag_466\n        /* \"#utility.yul\":4231:4236   */\n      dup2\n        /* \"#utility.yul\":4214:4237   */\n      tag_387\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":4207:4212   */\n      dup2\n        /* \"#utility.yul\":4204:4238   */\n      eq\n        /* \"#utility.yul\":4194:4256   */\n      tag_467\n      jumpi\n        /* \"#utility.yul\":4252:4253   */\n      0x00\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4242:4254   */\n      revert\n        /* \"#utility.yul\":4194:4256   */\n    tag_467:\n        /* \"#utility.yul\":4142:4262   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4268:4405   */\n    tag_389:\n        /* \"#utility.yul\":4313:4318   */\n      0x00\n        /* \"#utility.yul\":4351:4357   */\n      dup2\n        /* \"#utility.yul\":4338:4358   */\n      calldataload\n        /* \"#utility.yul\":4329:4358   */\n      swap1\n      pop\n        /* \"#utility.yul\":4367:4399   */\n      tag_469\n        /* \"#utility.yul\":4393:4398   */\n      dup2\n        /* \"#utility.yul\":4367:4399   */\n      tag_388\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":4268:4405   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4411:4738   */\n    tag_68:\n        /* \"#utility.yul\":4469:4475   */\n      0x00\n        /* \"#utility.yul\":4518:4520   */\n      0x20\n        /* \"#utility.yul\":4506:4515   */\n      dup3\n        /* \"#utility.yul\":4497:4504   */\n      dup5\n        /* \"#utility.yul\":4493:4516   */\n      sub\n        /* \"#utility.yul\":4489:4521   */\n      slt\n        /* \"#utility.yul\":4486:4605   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":4524:4603   */\n      tag_472\n      tag_376\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":4486:4605   */\n    tag_471:\n        /* \"#utility.yul\":4644:4645   */\n      0x00\n        /* \"#utility.yul\":4669:4721   */\n      tag_473\n        /* \"#utility.yul\":4713:4720   */\n      dup5\n        /* \"#utility.yul\":4704:4710   */\n      dup3\n        /* \"#utility.yul\":4693:4702   */\n      dup6\n        /* \"#utility.yul\":4689:4711   */\n      add\n        /* \"#utility.yul\":4669:4721   */\n      tag_389\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":4659:4721   */\n      swap2\n      pop\n        /* \"#utility.yul\":4615:4731   */\n      pop\n        /* \"#utility.yul\":4411:4738   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4744:4821   */\n    tag_390:\n        /* \"#utility.yul\":4781:4788   */\n      0x00\n        /* \"#utility.yul\":4810:4815   */\n      dup2\n        /* \"#utility.yul\":4799:4815   */\n      swap1\n      pop\n        /* \"#utility.yul\":4744:4821   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4827:4945   */\n    tag_391:\n        /* \"#utility.yul\":4914:4938   */\n      tag_476\n        /* \"#utility.yul\":4932:4937   */\n      dup2\n        /* \"#utility.yul\":4914:4938   */\n      tag_390\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":4909:4912   */\n      dup3\n        /* \"#utility.yul\":4902:4939   */\n      mstore\n        /* \"#utility.yul\":4827:4945   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4951:5173   */\n    tag_71:\n        /* \"#utility.yul\":5044:5048   */\n      0x00\n        /* \"#utility.yul\":5082:5084   */\n      0x20\n        /* \"#utility.yul\":5071:5080   */\n      dup3\n        /* \"#utility.yul\":5067:5085   */\n      add\n        /* \"#utility.yul\":5059:5085   */\n      swap1\n      pop\n        /* \"#utility.yul\":5095:5166   */\n      tag_478\n        /* \"#utility.yul\":5163:5164   */\n      0x00\n        /* \"#utility.yul\":5152:5161   */\n      dup4\n        /* \"#utility.yul\":5148:5165   */\n      add\n        /* \"#utility.yul\":5139:5145   */\n      dup5\n        /* \"#utility.yul\":5095:5166   */\n      tag_391\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":4951:5173   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5179:5798   */\n    tag_75:\n        /* \"#utility.yul\":5256:5262   */\n      0x00\n        /* \"#utility.yul\":5264:5270   */\n      0x00\n        /* \"#utility.yul\":5272:5278   */\n      0x00\n        /* \"#utility.yul\":5321:5323   */\n      0x60\n        /* \"#utility.yul\":5309:5318   */\n      dup5\n        /* \"#utility.yul\":5300:5307   */\n      dup7\n        /* \"#utility.yul\":5296:5319   */\n      sub\n        /* \"#utility.yul\":5292:5324   */\n      slt\n        /* \"#utility.yul\":5289:5408   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":5327:5406   */\n      tag_481\n      tag_376\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":5289:5408   */\n    tag_480:\n        /* \"#utility.yul\":5447:5448   */\n      0x00\n        /* \"#utility.yul\":5472:5525   */\n      tag_482\n        /* \"#utility.yul\":5517:5524   */\n      dup7\n        /* \"#utility.yul\":5508:5514   */\n      dup3\n        /* \"#utility.yul\":5497:5506   */\n      dup8\n        /* \"#utility.yul\":5493:5515   */\n      add\n        /* \"#utility.yul\":5472:5525   */\n      tag_381\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":5462:5525   */\n      swap4\n      pop\n        /* \"#utility.yul\":5418:5535   */\n      pop\n        /* \"#utility.yul\":5574:5576   */\n      0x20\n        /* \"#utility.yul\":5600:5653   */\n      tag_483\n        /* \"#utility.yul\":5645:5652   */\n      dup7\n        /* \"#utility.yul\":5636:5642   */\n      dup3\n        /* \"#utility.yul\":5625:5634   */\n      dup8\n        /* \"#utility.yul\":5621:5643   */\n      add\n        /* \"#utility.yul\":5600:5653   */\n      tag_381\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":5590:5653   */\n      swap3\n      pop\n        /* \"#utility.yul\":5545:5663   */\n      pop\n        /* \"#utility.yul\":5702:5704   */\n      0x40\n        /* \"#utility.yul\":5728:5781   */\n      tag_484\n        /* \"#utility.yul\":5773:5780   */\n      dup7\n        /* \"#utility.yul\":5764:5770   */\n      dup3\n        /* \"#utility.yul\":5753:5762   */\n      dup8\n        /* \"#utility.yul\":5749:5771   */\n      add\n        /* \"#utility.yul\":5728:5781   */\n      tag_383\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":5718:5781   */\n      swap2\n      pop\n        /* \"#utility.yul\":5673:5791   */\n      pop\n        /* \"#utility.yul\":5179:5798   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5804:5926   */\n    tag_392:\n        /* \"#utility.yul\":5877:5901   */\n      tag_486\n        /* \"#utility.yul\":5895:5900   */\n      dup2\n        /* \"#utility.yul\":5877:5901   */\n      tag_390\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":5870:5875   */\n      dup2\n        /* \"#utility.yul\":5867:5902   */\n      eq\n        /* \"#utility.yul\":5857:5920   */\n      tag_487\n      jumpi\n        /* \"#utility.yul\":5916:5917   */\n      0x00\n        /* \"#utility.yul\":5913:5914   */\n      0x00\n        /* \"#utility.yul\":5906:5918   */\n      revert\n        /* \"#utility.yul\":5857:5920   */\n    tag_487:\n        /* \"#utility.yul\":5804:5926   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5932:6071   */\n    tag_393:\n        /* \"#utility.yul\":5978:5983   */\n      0x00\n        /* \"#utility.yul\":6016:6022   */\n      dup2\n        /* \"#utility.yul\":6003:6023   */\n      calldataload\n        /* \"#utility.yul\":5994:6023   */\n      swap1\n      pop\n        /* \"#utility.yul\":6032:6065   */\n      tag_489\n        /* \"#utility.yul\":6059:6064   */\n      dup2\n        /* \"#utility.yul\":6032:6065   */\n      tag_392\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":5932:6071   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6077:6549   */\n    tag_81:\n        /* \"#utility.yul\":6144:6150   */\n      0x00\n        /* \"#utility.yul\":6152:6158   */\n      0x00\n        /* \"#utility.yul\":6201:6203   */\n      0x40\n        /* \"#utility.yul\":6189:6198   */\n      dup4\n        /* \"#utility.yul\":6180:6187   */\n      dup6\n        /* \"#utility.yul\":6176:6199   */\n      sub\n        /* \"#utility.yul\":6172:6204   */\n      slt\n        /* \"#utility.yul\":6169:6288   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":6207:6286   */\n      tag_492\n      tag_376\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":6169:6288   */\n    tag_491:\n        /* \"#utility.yul\":6327:6328   */\n      0x00\n        /* \"#utility.yul\":6352:6404   */\n      tag_493\n        /* \"#utility.yul\":6396:6403   */\n      dup6\n        /* \"#utility.yul\":6387:6393   */\n      dup3\n        /* \"#utility.yul\":6376:6385   */\n      dup7\n        /* \"#utility.yul\":6372:6394   */\n      add\n        /* \"#utility.yul\":6352:6404   */\n      tag_389\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":6342:6404   */\n      swap3\n      pop\n        /* \"#utility.yul\":6298:6414   */\n      pop\n        /* \"#utility.yul\":6453:6455   */\n      0x20\n        /* \"#utility.yul\":6479:6532   */\n      tag_494\n        /* \"#utility.yul\":6524:6531   */\n      dup6\n        /* \"#utility.yul\":6515:6521   */\n      dup3\n        /* \"#utility.yul\":6504:6513   */\n      dup7\n        /* \"#utility.yul\":6500:6522   */\n      add\n        /* \"#utility.yul\":6479:6532   */\n      tag_393\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":6469:6532   */\n      swap2\n      pop\n        /* \"#utility.yul\":6424:6542   */\n      pop\n        /* \"#utility.yul\":6077:6549   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6555:6641   */\n    tag_394:\n        /* \"#utility.yul\":6590:6597   */\n      0x00\n        /* \"#utility.yul\":6630:6634   */\n      0xff\n        /* \"#utility.yul\":6623:6628   */\n      dup3\n        /* \"#utility.yul\":6619:6635   */\n      and\n        /* \"#utility.yul\":6608:6635   */\n      swap1\n      pop\n        /* \"#utility.yul\":6555:6641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6647:6759   */\n    tag_395:\n        /* \"#utility.yul\":6730:6752   */\n      tag_497\n        /* \"#utility.yul\":6746:6751   */\n      dup2\n        /* \"#utility.yul\":6730:6752   */\n      tag_394\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":6725:6728   */\n      dup3\n        /* \"#utility.yul\":6718:6753   */\n      mstore\n        /* \"#utility.yul\":6647:6759   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6765:6979   */\n    tag_87:\n        /* \"#utility.yul\":6854:6858   */\n      0x00\n        /* \"#utility.yul\":6892:6894   */\n      0x20\n        /* \"#utility.yul\":6881:6890   */\n      dup3\n        /* \"#utility.yul\":6877:6895   */\n      add\n        /* \"#utility.yul\":6869:6895   */\n      swap1\n      pop\n        /* \"#utility.yul\":6905:6972   */\n      tag_499\n        /* \"#utility.yul\":6969:6970   */\n      0x00\n        /* \"#utility.yul\":6958:6967   */\n      dup4\n        /* \"#utility.yul\":6954:6971   */\n      add\n        /* \"#utility.yul\":6945:6951   */\n      dup5\n        /* \"#utility.yul\":6905:6972   */\n      tag_395\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":6765:6979   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6985:7314   */\n    tag_95:\n        /* \"#utility.yul\":7044:7050   */\n      0x00\n        /* \"#utility.yul\":7093:7095   */\n      0x20\n        /* \"#utility.yul\":7081:7090   */\n      dup3\n        /* \"#utility.yul\":7072:7079   */\n      dup5\n        /* \"#utility.yul\":7068:7091   */\n      sub\n        /* \"#utility.yul\":7064:7096   */\n      slt\n        /* \"#utility.yul\":7061:7180   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":7099:7178   */\n      tag_502\n      tag_376\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":7061:7180   */\n    tag_501:\n        /* \"#utility.yul\":7219:7220   */\n      0x00\n        /* \"#utility.yul\":7244:7297   */\n      tag_503\n        /* \"#utility.yul\":7289:7296   */\n      dup5\n        /* \"#utility.yul\":7280:7286   */\n      dup3\n        /* \"#utility.yul\":7269:7278   */\n      dup6\n        /* \"#utility.yul\":7265:7287   */\n      add\n        /* \"#utility.yul\":7244:7297   */\n      tag_381\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":7234:7297   */\n      swap2\n      pop\n        /* \"#utility.yul\":7190:7307   */\n      pop\n        /* \"#utility.yul\":6985:7314   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7320:7649   */\n    tag_109:\n        /* \"#utility.yul\":7379:7385   */\n      0x00\n        /* \"#utility.yul\":7428:7430   */\n      0x20\n        /* \"#utility.yul\":7416:7425   */\n      dup3\n        /* \"#utility.yul\":7407:7414   */\n      dup5\n        /* \"#utility.yul\":7403:7426   */\n      sub\n        /* \"#utility.yul\":7399:7431   */\n      slt\n        /* \"#utility.yul\":7396:7515   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":7434:7513   */\n      tag_506\n      tag_376\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":7396:7515   */\n    tag_505:\n        /* \"#utility.yul\":7554:7555   */\n      0x00\n        /* \"#utility.yul\":7579:7632   */\n      tag_507\n        /* \"#utility.yul\":7624:7631   */\n      dup5\n        /* \"#utility.yul\":7615:7621   */\n      dup3\n        /* \"#utility.yul\":7604:7613   */\n      dup6\n        /* \"#utility.yul\":7600:7622   */\n      add\n        /* \"#utility.yul\":7579:7632   */\n      tag_383\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":7569:7632   */\n      swap2\n      pop\n        /* \"#utility.yul\":7525:7642   */\n      pop\n        /* \"#utility.yul\":7320:7649   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7655:7772   */\n    tag_396:\n        /* \"#utility.yul\":7764:7765   */\n      0x00\n        /* \"#utility.yul\":7761:7762   */\n      0x00\n        /* \"#utility.yul\":7754:7766   */\n      revert\n        /* \"#utility.yul\":7778:7895   */\n    tag_397:\n        /* \"#utility.yul\":7887:7888   */\n      0x00\n        /* \"#utility.yul\":7884:7885   */\n      0x00\n        /* \"#utility.yul\":7877:7889   */\n      revert\n        /* \"#utility.yul\":7901:8018   */\n    tag_398:\n        /* \"#utility.yul\":8010:8011   */\n      0x00\n        /* \"#utility.yul\":8007:8008   */\n      0x00\n        /* \"#utility.yul\":8000:8012   */\n      revert\n        /* \"#utility.yul\":8037:8589   */\n    tag_399:\n        /* \"#utility.yul\":8094:8102   */\n      0x00\n        /* \"#utility.yul\":8104:8110   */\n      0x00\n        /* \"#utility.yul\":8154:8157   */\n      dup4\n        /* \"#utility.yul\":8147:8151   */\n      0x1f\n        /* \"#utility.yul\":8139:8145   */\n      dup5\n        /* \"#utility.yul\":8135:8152   */\n      add\n        /* \"#utility.yul\":8131:8158   */\n      slt\n        /* \"#utility.yul\":8121:8243   */\n      tag_512\n      jumpi\n        /* \"#utility.yul\":8162:8241   */\n      tag_513\n      tag_396\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":8121:8243   */\n    tag_512:\n        /* \"#utility.yul\":8275:8281   */\n      dup3\n        /* \"#utility.yul\":8262:8282   */\n      calldataload\n        /* \"#utility.yul\":8252:8282   */\n      swap1\n      pop\n        /* \"#utility.yul\":8305:8323   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8297:8303   */\n      dup2\n        /* \"#utility.yul\":8294:8324   */\n      gt\n        /* \"#utility.yul\":8291:8408   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":8327:8406   */\n      tag_515\n      tag_397\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":8291:8408   */\n    tag_514:\n        /* \"#utility.yul\":8441:8445   */\n      0x20\n        /* \"#utility.yul\":8433:8439   */\n      dup4\n        /* \"#utility.yul\":8429:8446   */\n      add\n        /* \"#utility.yul\":8417:8446   */\n      swap2\n      pop\n        /* \"#utility.yul\":8495:8498   */\n      dup4\n        /* \"#utility.yul\":8487:8491   */\n      0x01\n        /* \"#utility.yul\":8479:8485   */\n      dup3\n        /* \"#utility.yul\":8475:8492   */\n      mul\n        /* \"#utility.yul\":8465:8473   */\n      dup4\n        /* \"#utility.yul\":8461:8493   */\n      add\n        /* \"#utility.yul\":8458:8499   */\n      gt\n        /* \"#utility.yul\":8455:8583   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":8502:8581   */\n      tag_517\n      tag_398\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":8455:8583   */\n    tag_516:\n        /* \"#utility.yul\":8037:8589   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8595:9410   */\n    tag_113:\n        /* \"#utility.yul\":8682:8688   */\n      0x00\n        /* \"#utility.yul\":8690:8696   */\n      0x00\n        /* \"#utility.yul\":8698:8704   */\n      0x00\n        /* \"#utility.yul\":8706:8712   */\n      0x00\n        /* \"#utility.yul\":8755:8757   */\n      0x60\n        /* \"#utility.yul\":8743:8752   */\n      dup6\n        /* \"#utility.yul\":8734:8741   */\n      dup8\n        /* \"#utility.yul\":8730:8753   */\n      sub\n        /* \"#utility.yul\":8726:8758   */\n      slt\n        /* \"#utility.yul\":8723:8842   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":8761:8840   */\n      tag_520\n      tag_376\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":8723:8842   */\n    tag_519:\n        /* \"#utility.yul\":8881:8882   */\n      0x00\n        /* \"#utility.yul\":8906:8958   */\n      tag_521\n        /* \"#utility.yul\":8950:8957   */\n      dup8\n        /* \"#utility.yul\":8941:8947   */\n      dup3\n        /* \"#utility.yul\":8930:8939   */\n      dup9\n        /* \"#utility.yul\":8926:8948   */\n      add\n        /* \"#utility.yul\":8906:8958   */\n      tag_389\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":8896:8958   */\n      swap5\n      pop\n        /* \"#utility.yul\":8852:8968   */\n      pop\n        /* \"#utility.yul\":9007:9009   */\n      0x20\n        /* \"#utility.yul\":9033:9086   */\n      tag_522\n        /* \"#utility.yul\":9078:9085   */\n      dup8\n        /* \"#utility.yul\":9069:9075   */\n      dup3\n        /* \"#utility.yul\":9058:9067   */\n      dup9\n        /* \"#utility.yul\":9054:9076   */\n      add\n        /* \"#utility.yul\":9033:9086   */\n      tag_393\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":9023:9086   */\n      swap4\n      pop\n        /* \"#utility.yul\":8978:9096   */\n      pop\n        /* \"#utility.yul\":9163:9165   */\n      0x40\n        /* \"#utility.yul\":9152:9161   */\n      dup6\n        /* \"#utility.yul\":9148:9166   */\n      add\n        /* \"#utility.yul\":9135:9167   */\n      calldataload\n        /* \"#utility.yul\":9194:9212   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9186:9192   */\n      dup2\n        /* \"#utility.yul\":9183:9213   */\n      gt\n        /* \"#utility.yul\":9180:9297   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":9216:9295   */\n      tag_524\n      tag_377\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":9180:9297   */\n    tag_523:\n        /* \"#utility.yul\":9329:9393   */\n      tag_525\n        /* \"#utility.yul\":9385:9392   */\n      dup8\n        /* \"#utility.yul\":9376:9382   */\n      dup3\n        /* \"#utility.yul\":9365:9374   */\n      dup9\n        /* \"#utility.yul\":9361:9383   */\n      add\n        /* \"#utility.yul\":9329:9393   */\n      tag_399\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":9311:9393   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":9106:9403   */\n      pop\n        /* \"#utility.yul\":8595:9410   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9416:9890   */\n    tag_162:\n        /* \"#utility.yul\":9484:9490   */\n      0x00\n        /* \"#utility.yul\":9492:9498   */\n      0x00\n        /* \"#utility.yul\":9541:9543   */\n      0x40\n        /* \"#utility.yul\":9529:9538   */\n      dup4\n        /* \"#utility.yul\":9520:9527   */\n      dup6\n        /* \"#utility.yul\":9516:9539   */\n      sub\n        /* \"#utility.yul\":9512:9544   */\n      slt\n        /* \"#utility.yul\":9509:9628   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":9547:9626   */\n      tag_528\n      tag_376\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":9509:9628   */\n    tag_527:\n        /* \"#utility.yul\":9667:9668   */\n      0x00\n        /* \"#utility.yul\":9692:9745   */\n      tag_529\n        /* \"#utility.yul\":9737:9744   */\n      dup6\n        /* \"#utility.yul\":9728:9734   */\n      dup3\n        /* \"#utility.yul\":9717:9726   */\n      dup7\n        /* \"#utility.yul\":9713:9735   */\n      add\n        /* \"#utility.yul\":9692:9745   */\n      tag_381\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":9682:9745   */\n      swap3\n      pop\n        /* \"#utility.yul\":9638:9755   */\n      pop\n        /* \"#utility.yul\":9794:9796   */\n      0x20\n        /* \"#utility.yul\":9820:9873   */\n      tag_530\n        /* \"#utility.yul\":9865:9872   */\n      dup6\n        /* \"#utility.yul\":9856:9862   */\n      dup3\n        /* \"#utility.yul\":9845:9854   */\n      dup7\n        /* \"#utility.yul\":9841:9863   */\n      add\n        /* \"#utility.yul\":9820:9873   */\n      tag_381\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":9810:9873   */\n      swap2\n      pop\n        /* \"#utility.yul\":9765:9883   */\n      pop\n        /* \"#utility.yul\":9416:9890   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9896:10076   */\n    tag_400:\n        /* \"#utility.yul\":9944:10021   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9941:9942   */\n      0x00\n        /* \"#utility.yul\":9934:10022   */\n      mstore\n        /* \"#utility.yul\":10041:10045   */\n      0x11\n        /* \"#utility.yul\":10038:10039   */\n      0x04\n        /* \"#utility.yul\":10031:10046   */\n      mstore\n        /* \"#utility.yul\":10065:10069   */\n      0x24\n        /* \"#utility.yul\":10062:10063   */\n      0x00\n        /* \"#utility.yul\":10055:10070   */\n      revert\n        /* \"#utility.yul\":10082:10273   */\n    tag_179:\n        /* \"#utility.yul\":10122:10125   */\n      0x00\n        /* \"#utility.yul\":10141:10161   */\n      tag_533\n        /* \"#utility.yul\":10159:10160   */\n      dup3\n        /* \"#utility.yul\":10141:10161   */\n      tag_368\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":10136:10161   */\n      swap2\n      pop\n        /* \"#utility.yul\":10175:10195   */\n      tag_534\n        /* \"#utility.yul\":10193:10194   */\n      dup4\n        /* \"#utility.yul\":10175:10195   */\n      tag_368\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":10170:10195   */\n      swap3\n      pop\n        /* \"#utility.yul\":10218:10219   */\n      dup3\n        /* \"#utility.yul\":10215:10216   */\n      dup3\n        /* \"#utility.yul\":10211:10220   */\n      add\n        /* \"#utility.yul\":10204:10220   */\n      swap1\n      pop\n        /* \"#utility.yul\":10239:10242   */\n      dup1\n        /* \"#utility.yul\":10236:10237   */\n      dup3\n        /* \"#utility.yul\":10233:10243   */\n      gt\n        /* \"#utility.yul\":10230:10266   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":10246:10264   */\n      tag_536\n      tag_400\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":10230:10266   */\n    tag_535:\n        /* \"#utility.yul\":10082:10273   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10279:10459   */\n    tag_401:\n        /* \"#utility.yul\":10327:10404   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10324:10325   */\n      0x00\n        /* \"#utility.yul\":10317:10405   */\n      mstore\n        /* \"#utility.yul\":10424:10428   */\n      0x22\n        /* \"#utility.yul\":10421:10422   */\n      0x04\n        /* \"#utility.yul\":10414:10429   */\n      mstore\n        /* \"#utility.yul\":10448:10452   */\n      0x24\n        /* \"#utility.yul\":10445:10446   */\n      0x00\n        /* \"#utility.yul\":10438:10453   */\n      revert\n        /* \"#utility.yul\":10465:10785   */\n    tag_182:\n        /* \"#utility.yul\":10509:10515   */\n      0x00\n        /* \"#utility.yul\":10546:10547   */\n      0x02\n        /* \"#utility.yul\":10540:10544   */\n      dup3\n        /* \"#utility.yul\":10536:10548   */\n      div\n        /* \"#utility.yul\":10526:10548   */\n      swap1\n      pop\n        /* \"#utility.yul\":10593:10594   */\n      0x01\n        /* \"#utility.yul\":10587:10591   */\n      dup3\n        /* \"#utility.yul\":10583:10595   */\n      and\n        /* \"#utility.yul\":10614:10632   */\n      dup1\n        /* \"#utility.yul\":10604:10685   */\n      tag_539\n      jumpi\n        /* \"#utility.yul\":10670:10674   */\n      0x7f\n        /* \"#utility.yul\":10662:10668   */\n      dup3\n        /* \"#utility.yul\":10658:10675   */\n      and\n        /* \"#utility.yul\":10648:10675   */\n      swap2\n      pop\n        /* \"#utility.yul\":10604:10685   */\n    tag_539:\n        /* \"#utility.yul\":10732:10734   */\n      0x20\n        /* \"#utility.yul\":10724:10730   */\n      dup3\n        /* \"#utility.yul\":10721:10735   */\n      lt\n        /* \"#utility.yul\":10701:10719   */\n      dup2\n        /* \"#utility.yul\":10698:10736   */\n      sub\n        /* \"#utility.yul\":10695:10779   */\n      tag_540\n      jumpi\n        /* \"#utility.yul\":10751:10769   */\n      tag_541\n      tag_401\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":10695:10779   */\n    tag_540:\n        /* \"#utility.yul\":10516:10785   */\n      pop\n        /* \"#utility.yul\":10465:10785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10791:10967   */\n    tag_402:\n        /* \"#utility.yul\":10931:10959   */\n      0x43616c6c6572206d75737420626520746865206d61696c626f78000000000000\n        /* \"#utility.yul\":10927:10928   */\n      0x00\n        /* \"#utility.yul\":10919:10925   */\n      dup3\n        /* \"#utility.yul\":10915:10929   */\n      add\n        /* \"#utility.yul\":10908:10960   */\n      mstore\n        /* \"#utility.yul\":10791:10967   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10973:11339   */\n    tag_403:\n        /* \"#utility.yul\":11115:11118   */\n      0x00\n        /* \"#utility.yul\":11136:11203   */\n      tag_544\n        /* \"#utility.yul\":11200:11202   */\n      0x1a\n        /* \"#utility.yul\":11195:11198   */\n      dup4\n        /* \"#utility.yul\":11136:11203   */\n      tag_371\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":11129:11203   */\n      swap2\n      pop\n        /* \"#utility.yul\":11212:11305   */\n      tag_545\n        /* \"#utility.yul\":11301:11304   */\n      dup3\n        /* \"#utility.yul\":11212:11305   */\n      tag_402\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":11330:11332   */\n      0x20\n        /* \"#utility.yul\":11325:11328   */\n      dup3\n        /* \"#utility.yul\":11321:11333   */\n      add\n        /* \"#utility.yul\":11314:11333   */\n      swap1\n      pop\n        /* \"#utility.yul\":10973:11339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11345:11764   */\n    tag_219:\n        /* \"#utility.yul\":11511:11515   */\n      0x00\n        /* \"#utility.yul\":11549:11551   */\n      0x20\n        /* \"#utility.yul\":11538:11547   */\n      dup3\n        /* \"#utility.yul\":11534:11552   */\n      add\n        /* \"#utility.yul\":11526:11552   */\n      swap1\n      pop\n        /* \"#utility.yul\":11598:11607   */\n      dup2\n        /* \"#utility.yul\":11592:11596   */\n      dup2\n        /* \"#utility.yul\":11588:11608   */\n      sub\n        /* \"#utility.yul\":11584:11585   */\n      0x00\n        /* \"#utility.yul\":11573:11582   */\n      dup4\n        /* \"#utility.yul\":11569:11586   */\n      add\n        /* \"#utility.yul\":11562:11609   */\n      mstore\n        /* \"#utility.yul\":11626:11757   */\n      tag_547\n        /* \"#utility.yul\":11752:11756   */\n      dup2\n        /* \"#utility.yul\":11626:11757   */\n      tag_403\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":11618:11757   */\n      swap1\n      pop\n        /* \"#utility.yul\":11345:11764   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11770:11949   */\n    tag_404:\n        /* \"#utility.yul\":11910:11941   */\n      0x53656e646572206d75737420626520747275737465642072656d6f7465000000\n        /* \"#utility.yul\":11906:11907   */\n      0x00\n        /* \"#utility.yul\":11898:11904   */\n      dup3\n        /* \"#utility.yul\":11894:11908   */\n      add\n        /* \"#utility.yul\":11887:11942   */\n      mstore\n        /* \"#utility.yul\":11770:11949   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11955:12321   */\n    tag_405:\n        /* \"#utility.yul\":12097:12100   */\n      0x00\n        /* \"#utility.yul\":12118:12185   */\n      tag_550\n        /* \"#utility.yul\":12182:12184   */\n      0x1d\n        /* \"#utility.yul\":12177:12180   */\n      dup4\n        /* \"#utility.yul\":12118:12185   */\n      tag_371\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":12111:12185   */\n      swap2\n      pop\n        /* \"#utility.yul\":12194:12287   */\n      tag_551\n        /* \"#utility.yul\":12283:12286   */\n      dup3\n        /* \"#utility.yul\":12194:12287   */\n      tag_404\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":12312:12314   */\n      0x20\n        /* \"#utility.yul\":12307:12310   */\n      dup3\n        /* \"#utility.yul\":12303:12315   */\n      add\n        /* \"#utility.yul\":12296:12315   */\n      swap1\n      pop\n        /* \"#utility.yul\":11955:12321   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12327:12746   */\n    tag_222:\n        /* \"#utility.yul\":12493:12497   */\n      0x00\n        /* \"#utility.yul\":12531:12533   */\n      0x20\n        /* \"#utility.yul\":12520:12529   */\n      dup3\n        /* \"#utility.yul\":12516:12534   */\n      add\n        /* \"#utility.yul\":12508:12534   */\n      swap1\n      pop\n        /* \"#utility.yul\":12580:12589   */\n      dup2\n        /* \"#utility.yul\":12574:12578   */\n      dup2\n        /* \"#utility.yul\":12570:12590   */\n      sub\n        /* \"#utility.yul\":12566:12567   */\n      0x00\n        /* \"#utility.yul\":12555:12564   */\n      dup4\n        /* \"#utility.yul\":12551:12568   */\n      add\n        /* \"#utility.yul\":12544:12591   */\n      mstore\n        /* \"#utility.yul\":12608:12739   */\n      tag_553\n        /* \"#utility.yul\":12734:12738   */\n      dup2\n        /* \"#utility.yul\":12608:12739   */\n      tag_405\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":12600:12739   */\n      swap1\n      pop\n        /* \"#utility.yul\":12327:12746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12752:12856   */\n    tag_406:\n        /* \"#utility.yul\":12797:12804   */\n      0x00\n        /* \"#utility.yul\":12826:12850   */\n      tag_555\n        /* \"#utility.yul\":12844:12849   */\n      dup3\n        /* \"#utility.yul\":12826:12850   */\n      tag_378\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":12815:12850   */\n      swap1\n      pop\n        /* \"#utility.yul\":12752:12856   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12862:13000   */\n    tag_407:\n        /* \"#utility.yul\":12943:12975   */\n      tag_557\n        /* \"#utility.yul\":12969:12974   */\n      dup2\n        /* \"#utility.yul\":12943:12975   */\n      tag_406\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":12936:12941   */\n      dup2\n        /* \"#utility.yul\":12933:12976   */\n      eq\n        /* \"#utility.yul\":12923:12994   */\n      tag_558\n      jumpi\n        /* \"#utility.yul\":12990:12991   */\n      0x00\n        /* \"#utility.yul\":12987:12988   */\n      0x00\n        /* \"#utility.yul\":12980:12992   */\n      revert\n        /* \"#utility.yul\":12923:12994   */\n    tag_558:\n        /* \"#utility.yul\":12862:13000   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13006:13161   */\n    tag_408:\n        /* \"#utility.yul\":13060:13065   */\n      0x00\n        /* \"#utility.yul\":13098:13104   */\n      dup2\n        /* \"#utility.yul\":13085:13105   */\n      calldataload\n        /* \"#utility.yul\":13076:13105   */\n      swap1\n      pop\n        /* \"#utility.yul\":13114:13155   */\n      tag_560\n        /* \"#utility.yul\":13149:13154   */\n      dup2\n        /* \"#utility.yul\":13114:13155   */\n      tag_407\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":13006:13161   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13167:13657   */\n    tag_224:\n        /* \"#utility.yul\":13243:13249   */\n      0x00\n        /* \"#utility.yul\":13251:13257   */\n      0x00\n        /* \"#utility.yul\":13300:13302   */\n      0x40\n        /* \"#utility.yul\":13288:13297   */\n      dup4\n        /* \"#utility.yul\":13279:13286   */\n      dup6\n        /* \"#utility.yul\":13275:13298   */\n      sub\n        /* \"#utility.yul\":13271:13303   */\n      slt\n        /* \"#utility.yul\":13268:13387   */\n      iszero\n      tag_562\n      jumpi\n        /* \"#utility.yul\":13306:13385   */\n      tag_563\n      tag_376\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":13268:13387   */\n    tag_562:\n        /* \"#utility.yul\":13426:13427   */\n      0x00\n        /* \"#utility.yul\":13451:13512   */\n      tag_564\n        /* \"#utility.yul\":13504:13511   */\n      dup6\n        /* \"#utility.yul\":13495:13501   */\n      dup3\n        /* \"#utility.yul\":13484:13493   */\n      dup7\n        /* \"#utility.yul\":13480:13502   */\n      add\n        /* \"#utility.yul\":13451:13512   */\n      tag_408\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":13441:13512   */\n      swap3\n      pop\n        /* \"#utility.yul\":13397:13522   */\n      pop\n        /* \"#utility.yul\":13561:13563   */\n      0x20\n        /* \"#utility.yul\":13587:13640   */\n      tag_565\n        /* \"#utility.yul\":13632:13639   */\n      dup6\n        /* \"#utility.yul\":13623:13629   */\n      dup3\n        /* \"#utility.yul\":13612:13621   */\n      dup7\n        /* \"#utility.yul\":13608:13630   */\n      add\n        /* \"#utility.yul\":13587:13640   */\n      tag_383\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":13577:13640   */\n      swap2\n      pop\n        /* \"#utility.yul\":13532:13650   */\n      pop\n        /* \"#utility.yul\":13167:13657   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13663:13840   */\n    tag_409:\n        /* \"#utility.yul\":13803:13832   */\n      0x43616c6c6572206973206e6f7420612067616d65206d61737465720000000000\n        /* \"#utility.yul\":13799:13800   */\n      0x00\n        /* \"#utility.yul\":13791:13797   */\n      dup3\n        /* \"#utility.yul\":13787:13801   */\n      add\n        /* \"#utility.yul\":13780:13833   */\n      mstore\n        /* \"#utility.yul\":13663:13840   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13846:14212   */\n    tag_410:\n        /* \"#utility.yul\":13988:13991   */\n      0x00\n        /* \"#utility.yul\":14009:14076   */\n      tag_568\n        /* \"#utility.yul\":14073:14075   */\n      0x1b\n        /* \"#utility.yul\":14068:14071   */\n      dup4\n        /* \"#utility.yul\":14009:14076   */\n      tag_371\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":14002:14076   */\n      swap2\n      pop\n        /* \"#utility.yul\":14085:14178   */\n      tag_569\n        /* \"#utility.yul\":14174:14177   */\n      dup3\n        /* \"#utility.yul\":14085:14178   */\n      tag_409\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":14203:14205   */\n      0x20\n        /* \"#utility.yul\":14198:14201   */\n      dup3\n        /* \"#utility.yul\":14194:14206   */\n      add\n        /* \"#utility.yul\":14187:14206   */\n      swap1\n      pop\n        /* \"#utility.yul\":13846:14212   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14218:14637   */\n    tag_256:\n        /* \"#utility.yul\":14384:14388   */\n      0x00\n        /* \"#utility.yul\":14422:14424   */\n      0x20\n        /* \"#utility.yul\":14411:14420   */\n      dup3\n        /* \"#utility.yul\":14407:14425   */\n      add\n        /* \"#utility.yul\":14399:14425   */\n      swap1\n      pop\n        /* \"#utility.yul\":14471:14480   */\n      dup2\n        /* \"#utility.yul\":14465:14469   */\n      dup2\n        /* \"#utility.yul\":14461:14481   */\n      sub\n        /* \"#utility.yul\":14457:14458   */\n      0x00\n        /* \"#utility.yul\":14446:14455   */\n      dup4\n        /* \"#utility.yul\":14442:14459   */\n      add\n        /* \"#utility.yul\":14435:14482   */\n      mstore\n        /* \"#utility.yul\":14499:14630   */\n      tag_571\n        /* \"#utility.yul\":14625:14629   */\n      dup2\n        /* \"#utility.yul\":14499:14630   */\n      tag_410\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":14491:14630   */\n      swap1\n      pop\n        /* \"#utility.yul\":14218:14637   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14643:15085   */\n    tag_286:\n        /* \"#utility.yul\":14792:14796   */\n      0x00\n        /* \"#utility.yul\":14830:14832   */\n      0x60\n        /* \"#utility.yul\":14819:14828   */\n      dup3\n        /* \"#utility.yul\":14815:14833   */\n      add\n        /* \"#utility.yul\":14807:14833   */\n      swap1\n      pop\n        /* \"#utility.yul\":14843:14914   */\n      tag_573\n        /* \"#utility.yul\":14911:14912   */\n      0x00\n        /* \"#utility.yul\":14900:14909   */\n      dup4\n        /* \"#utility.yul\":14896:14913   */\n      add\n        /* \"#utility.yul\":14887:14893   */\n      dup7\n        /* \"#utility.yul\":14843:14914   */\n      tag_386\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":14924:14996   */\n      tag_574\n        /* \"#utility.yul\":14992:14994   */\n      0x20\n        /* \"#utility.yul\":14981:14990   */\n      dup4\n        /* \"#utility.yul\":14977:14995   */\n      add\n        /* \"#utility.yul\":14968:14974   */\n      dup6\n        /* \"#utility.yul\":14924:14996   */\n      tag_369\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":15006:15078   */\n      tag_575\n        /* \"#utility.yul\":15074:15076   */\n      0x40\n        /* \"#utility.yul\":15063:15072   */\n      dup4\n        /* \"#utility.yul\":15059:15077   */\n      add\n        /* \"#utility.yul\":15050:15056   */\n      dup5\n        /* \"#utility.yul\":15006:15078   */\n      tag_369\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":14643:15085   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15091:15259   */\n    tag_411:\n        /* \"#utility.yul\":15231:15251   */\n      0x4d617820737570706c7920726561636865640000000000000000000000000000\n        /* \"#utility.yul\":15227:15228   */\n      0x00\n        /* \"#utility.yul\":15219:15225   */\n      dup3\n        /* \"#utility.yul\":15215:15229   */\n      add\n        /* \"#utility.yul\":15208:15252   */\n      mstore\n        /* \"#utility.yul\":15091:15259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15265:15631   */\n    tag_412:\n        /* \"#utility.yul\":15407:15410   */\n      0x00\n        /* \"#utility.yul\":15428:15495   */\n      tag_578\n        /* \"#utility.yul\":15492:15494   */\n      0x12\n        /* \"#utility.yul\":15487:15490   */\n      dup4\n        /* \"#utility.yul\":15428:15495   */\n      tag_371\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":15421:15495   */\n      swap2\n      pop\n        /* \"#utility.yul\":15504:15597   */\n      tag_579\n        /* \"#utility.yul\":15593:15596   */\n      dup3\n        /* \"#utility.yul\":15504:15597   */\n      tag_411\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":15622:15624   */\n      0x20\n        /* \"#utility.yul\":15617:15620   */\n      dup3\n        /* \"#utility.yul\":15613:15625   */\n      add\n        /* \"#utility.yul\":15606:15625   */\n      swap1\n      pop\n        /* \"#utility.yul\":15265:15631   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15637:16056   */\n    tag_319:\n        /* \"#utility.yul\":15803:15807   */\n      0x00\n        /* \"#utility.yul\":15841:15843   */\n      0x20\n        /* \"#utility.yul\":15830:15839   */\n      dup3\n        /* \"#utility.yul\":15826:15844   */\n      add\n        /* \"#utility.yul\":15818:15844   */\n      swap1\n      pop\n        /* \"#utility.yul\":15890:15899   */\n      dup2\n        /* \"#utility.yul\":15884:15888   */\n      dup2\n        /* \"#utility.yul\":15880:15900   */\n      sub\n        /* \"#utility.yul\":15876:15877   */\n      0x00\n        /* \"#utility.yul\":15865:15874   */\n      dup4\n        /* \"#utility.yul\":15861:15878   */\n      add\n        /* \"#utility.yul\":15854:15901   */\n      mstore\n        /* \"#utility.yul\":15918:16049   */\n      tag_581\n        /* \"#utility.yul\":16044:16048   */\n      dup2\n        /* \"#utility.yul\":15918:16049   */\n      tag_412\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":15910:16049   */\n      swap1\n      pop\n        /* \"#utility.yul\":15637:16056   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16062:16256   */\n    tag_321:\n        /* \"#utility.yul\":16102:16106   */\n      0x00\n        /* \"#utility.yul\":16122:16142   */\n      tag_583\n        /* \"#utility.yul\":16140:16141   */\n      dup3\n        /* \"#utility.yul\":16122:16142   */\n      tag_368\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":16117:16142   */\n      swap2\n      pop\n        /* \"#utility.yul\":16156:16176   */\n      tag_584\n        /* \"#utility.yul\":16174:16175   */\n      dup4\n        /* \"#utility.yul\":16156:16176   */\n      tag_368\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":16151:16176   */\n      swap3\n      pop\n        /* \"#utility.yul\":16200:16201   */\n      dup3\n        /* \"#utility.yul\":16197:16198   */\n      dup3\n        /* \"#utility.yul\":16193:16202   */\n      sub\n        /* \"#utility.yul\":16185:16202   */\n      swap1\n      pop\n        /* \"#utility.yul\":16224:16225   */\n      dup2\n        /* \"#utility.yul\":16218:16222   */\n      dup2\n        /* \"#utility.yul\":16215:16226   */\n      gt\n        /* \"#utility.yul\":16212:16249   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":16229:16247   */\n      tag_586\n      tag_400\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":16212:16249   */\n    tag_585:\n        /* \"#utility.yul\":16062:16256   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16262:16438   */\n    tag_413:\n        /* \"#utility.yul\":16402:16430   */\n      0x4461696c7920726577617264206c696d69742072656163686564000000000000\n        /* \"#utility.yul\":16398:16399   */\n      0x00\n        /* \"#utility.yul\":16390:16396   */\n      dup3\n        /* \"#utility.yul\":16386:16400   */\n      add\n        /* \"#utility.yul\":16379:16431   */\n      mstore\n        /* \"#utility.yul\":16262:16438   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16444:16810   */\n    tag_414:\n        /* \"#utility.yul\":16586:16589   */\n      0x00\n        /* \"#utility.yul\":16607:16674   */\n      tag_589\n        /* \"#utility.yul\":16671:16673   */\n      0x1a\n        /* \"#utility.yul\":16666:16669   */\n      dup4\n        /* \"#utility.yul\":16607:16674   */\n      tag_371\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":16600:16674   */\n      swap2\n      pop\n        /* \"#utility.yul\":16683:16776   */\n      tag_590\n        /* \"#utility.yul\":16772:16775   */\n      dup3\n        /* \"#utility.yul\":16683:16776   */\n      tag_413\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":16801:16803   */\n      0x20\n        /* \"#utility.yul\":16796:16799   */\n      dup3\n        /* \"#utility.yul\":16792:16804   */\n      add\n        /* \"#utility.yul\":16785:16804   */\n      swap1\n      pop\n        /* \"#utility.yul\":16444:16810   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16816:17235   */\n    tag_324:\n        /* \"#utility.yul\":16982:16986   */\n      0x00\n        /* \"#utility.yul\":17020:17022   */\n      0x20\n        /* \"#utility.yul\":17009:17018   */\n      dup3\n        /* \"#utility.yul\":17005:17023   */\n      add\n        /* \"#utility.yul\":16997:17023   */\n      swap1\n      pop\n        /* \"#utility.yul\":17069:17078   */\n      dup2\n        /* \"#utility.yul\":17063:17067   */\n      dup2\n        /* \"#utility.yul\":17059:17079   */\n      sub\n        /* \"#utility.yul\":17055:17056   */\n      0x00\n        /* \"#utility.yul\":17044:17053   */\n      dup4\n        /* \"#utility.yul\":17040:17057   */\n      add\n        /* \"#utility.yul\":17033:17080   */\n      mstore\n        /* \"#utility.yul\":17097:17228   */\n      tag_592\n        /* \"#utility.yul\":17223:17227   */\n      dup2\n        /* \"#utility.yul\":17097:17228   */\n      tag_414\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":17089:17228   */\n      swap1\n      pop\n        /* \"#utility.yul\":16816:17235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17241:17417   */\n    tag_415:\n        /* \"#utility.yul\":17381:17409   */\n      0x5265776172642065786365656473206461696c79206c696d6974000000000000\n        /* \"#utility.yul\":17377:17378   */\n      0x00\n        /* \"#utility.yul\":17369:17375   */\n      dup3\n        /* \"#utility.yul\":17365:17379   */\n      add\n        /* \"#utility.yul\":17358:17410   */\n      mstore\n        /* \"#utility.yul\":17241:17417   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17423:17789   */\n    tag_416:\n        /* \"#utility.yul\":17565:17568   */\n      0x00\n        /* \"#utility.yul\":17586:17653   */\n      tag_595\n        /* \"#utility.yul\":17650:17652   */\n      0x1a\n        /* \"#utility.yul\":17645:17648   */\n      dup4\n        /* \"#utility.yul\":17586:17653   */\n      tag_371\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":17579:17653   */\n      swap2\n      pop\n        /* \"#utility.yul\":17662:17755   */\n      tag_596\n        /* \"#utility.yul\":17751:17754   */\n      dup3\n        /* \"#utility.yul\":17662:17755   */\n      tag_415\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":17780:17782   */\n      0x20\n        /* \"#utility.yul\":17775:17778   */\n      dup3\n        /* \"#utility.yul\":17771:17783   */\n      add\n        /* \"#utility.yul\":17764:17783   */\n      swap1\n      pop\n        /* \"#utility.yul\":17423:17789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17795:18214   */\n    tag_327:\n        /* \"#utility.yul\":17961:17965   */\n      0x00\n        /* \"#utility.yul\":17999:18001   */\n      0x20\n        /* \"#utility.yul\":17988:17997   */\n      dup3\n        /* \"#utility.yul\":17984:18002   */\n      add\n        /* \"#utility.yul\":17976:18002   */\n      swap1\n      pop\n        /* \"#utility.yul\":18048:18057   */\n      dup2\n        /* \"#utility.yul\":18042:18046   */\n      dup2\n        /* \"#utility.yul\":18038:18058   */\n      sub\n        /* \"#utility.yul\":18034:18035   */\n      0x00\n        /* \"#utility.yul\":18023:18032   */\n      dup4\n        /* \"#utility.yul\":18019:18036   */\n      add\n        /* \"#utility.yul\":18012:18059   */\n      mstore\n        /* \"#utility.yul\":18076:18207   */\n      tag_598\n        /* \"#utility.yul\":18202:18206   */\n      dup2\n        /* \"#utility.yul\":18076:18207   */\n      tag_416\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":18068:18207   */\n      swap1\n      pop\n        /* \"#utility.yul\":17795:18214   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122001156dc1935cbc6599f4f93a5c4cfc20a49d85ed5252836d5b59b6a6e9463c3464736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1059": {
									"entryPoint": null,
									"id": 1059,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1226": {
									"entryPoint": null,
									"id": 1226,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_348": {
									"entryPoint": null,
									"id": 348,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_62": {
									"entryPoint": null,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_158": {
									"entryPoint": 500,
									"id": 158,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1270,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 889,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 844,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1027,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1168,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1205,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6778:11",
										"nodeType": "YulBlock",
										"src": "0:6778:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "379:81:11",
													"nodeType": "YulBlock",
													"src": "379:81:11",
													"statements": [
														{
															"nativeSrc": "389:65:11",
															"nodeType": "YulAssignment",
															"src": "389:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:11",
																		"nodeType": "YulLiteral",
																		"src": "411:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:11"
																},
																"nativeSrc": "400:54:11",
																"nodeType": "YulFunctionCall",
																"src": "400:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:11",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:11",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:126:11"
											},
											{
												"body": {
													"nativeSrc": "511:51:11",
													"nodeType": "YulBlock",
													"src": "511:51:11",
													"statements": [
														{
															"nativeSrc": "521:35:11",
															"nodeType": "YulAssignment",
															"src": "521:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:11"
																},
																"nativeSrc": "532:24:11",
																"nodeType": "YulFunctionCall",
																"src": "532:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:11",
														"nodeType": "YulTypedName",
														"src": "493:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:11",
														"nodeType": "YulTypedName",
														"src": "503:7:11",
														"type": ""
													}
												],
												"src": "466:96:11"
											},
											{
												"body": {
													"nativeSrc": "611:79:11",
													"nodeType": "YulBlock",
													"src": "611:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:11",
																"nodeType": "YulBlock",
																"src": "668:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:11",
																					"nodeType": "YulLiteral",
																					"src": "677:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:11",
																					"nodeType": "YulLiteral",
																					"src": "680:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:11"
																			},
																			"nativeSrc": "670:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:11"
																		},
																		"nativeSrc": "670:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:11"
																				},
																				"nativeSrc": "641:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:11"
																		},
																		"nativeSrc": "631:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:11"
																},
																"nativeSrc": "624:43:11",
																"nodeType": "YulFunctionCall",
																"src": "624:43:11"
															},
															"nativeSrc": "621:63:11",
															"nodeType": "YulIf",
															"src": "621:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:11",
														"nodeType": "YulTypedName",
														"src": "604:5:11",
														"type": ""
													}
												],
												"src": "568:122:11"
											},
											{
												"body": {
													"nativeSrc": "759:80:11",
													"nodeType": "YulBlock",
													"src": "759:80:11",
													"statements": [
														{
															"nativeSrc": "769:22:11",
															"nodeType": "YulAssignment",
															"src": "769:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:11"
																},
																"nativeSrc": "778:13:11",
																"nodeType": "YulFunctionCall",
																"src": "778:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:11"
																},
																"nativeSrc": "800:33:11",
																"nodeType": "YulFunctionCall",
																"src": "800:33:11"
															},
															"nativeSrc": "800:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:11"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:11",
														"nodeType": "YulTypedName",
														"src": "737:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:11",
														"nodeType": "YulTypedName",
														"src": "745:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:11",
														"nodeType": "YulTypedName",
														"src": "753:5:11",
														"type": ""
													}
												],
												"src": "696:143:11"
											},
											{
												"body": {
													"nativeSrc": "922:274:11",
													"nodeType": "YulBlock",
													"src": "922:274:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:11",
																"nodeType": "YulBlock",
																"src": "968:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:11"
																			},
																			"nativeSrc": "970:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:11"
																		},
																		"nativeSrc": "970:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:11"
																		},
																		"nativeSrc": "939:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:11",
																		"nodeType": "YulLiteral",
																		"src": "964:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:11"
																},
																"nativeSrc": "935:32:11",
																"nodeType": "YulFunctionCall",
																"src": "935:32:11"
															},
															"nativeSrc": "932:119:11",
															"nodeType": "YulIf",
															"src": "932:119:11"
														},
														{
															"nativeSrc": "1061:128:11",
															"nodeType": "YulBlock",
															"src": "1061:128:11",
															"statements": [
																{
																	"nativeSrc": "1076:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:11"
																				},
																				"nativeSrc": "1147:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:11"
																		},
																		"nativeSrc": "1115:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:11",
														"nodeType": "YulTypedName",
														"src": "892:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:11",
														"nodeType": "YulTypedName",
														"src": "903:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:11",
														"nodeType": "YulTypedName",
														"src": "915:6:11",
														"type": ""
													}
												],
												"src": "845:351:11"
											},
											{
												"body": {
													"nativeSrc": "1261:40:11",
													"nodeType": "YulBlock",
													"src": "1261:40:11",
													"statements": [
														{
															"nativeSrc": "1272:22:11",
															"nodeType": "YulAssignment",
															"src": "1272:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:11"
																},
																"nativeSrc": "1282:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:11",
														"nodeType": "YulTypedName",
														"src": "1244:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:11",
														"nodeType": "YulTypedName",
														"src": "1254:6:11",
														"type": ""
													}
												],
												"src": "1202:99:11"
											},
											{
												"body": {
													"nativeSrc": "1335:152:11",
													"nodeType": "YulBlock",
													"src": "1335:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:11",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:11"
																},
																"nativeSrc": "1345:88:11",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:11"
															},
															"nativeSrc": "1345:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:11"
																},
																"nativeSrc": "1442:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:11"
															},
															"nativeSrc": "1442:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:11"
																},
																"nativeSrc": "1466:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:11"
															},
															"nativeSrc": "1466:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:11"
											},
											{
												"body": {
													"nativeSrc": "1521:152:11",
													"nodeType": "YulBlock",
													"src": "1521:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:11",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:11"
																},
																"nativeSrc": "1531:88:11",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:11"
															},
															"nativeSrc": "1531:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:11"
																},
																"nativeSrc": "1628:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:11"
															},
															"nativeSrc": "1628:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:11"
																},
																"nativeSrc": "1652:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:11"
															},
															"nativeSrc": "1652:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:11"
											},
											{
												"body": {
													"nativeSrc": "1730:269:11",
													"nodeType": "YulBlock",
													"src": "1730:269:11",
													"statements": [
														{
															"nativeSrc": "1740:22:11",
															"nodeType": "YulAssignment",
															"src": "1740:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:11"
																},
																"nativeSrc": "1750:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:11"
																}
															]
														},
														{
															"nativeSrc": "1771:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:11"
																},
																"nativeSrc": "1797:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:11",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:11",
																"nodeType": "YulBlock",
																"src": "1848:51:11",
																"statements": [
																	{
																		"nativeSrc": "1862:27:11",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:11",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:11"
																			},
																			"nativeSrc": "1872:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:11"
																},
																"nativeSrc": "1821:26:11",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:11"
															},
															"nativeSrc": "1818:81:11",
															"nodeType": "YulIf",
															"src": "1818:81:11"
														},
														{
															"body": {
																"nativeSrc": "1951:42:11",
																"nodeType": "YulBlock",
																"src": "1951:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:11"
																			},
																			"nativeSrc": "1965:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:11"
																		},
																		"nativeSrc": "1965:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:11"
																		},
																		"nativeSrc": "1935:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:11"
																},
																"nativeSrc": "1912:38:11",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:11"
															},
															"nativeSrc": "1909:84:11",
															"nodeType": "YulIf",
															"src": "1909:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:11",
														"nodeType": "YulTypedName",
														"src": "1714:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:11",
														"nodeType": "YulTypedName",
														"src": "1723:6:11",
														"type": ""
													}
												],
												"src": "1679:320:11"
											},
											{
												"body": {
													"nativeSrc": "2059:87:11",
													"nodeType": "YulBlock",
													"src": "2059:87:11",
													"statements": [
														{
															"nativeSrc": "2069:11:11",
															"nodeType": "YulAssignment",
															"src": "2069:11:11",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:11",
																"nodeType": "YulIdentifier",
																"src": "2077:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:11"
																},
																"nativeSrc": "2090:14:11",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:11"
															},
															"nativeSrc": "2090:14:11",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:11"
														},
														{
															"nativeSrc": "2113:26:11",
															"nodeType": "YulAssignment",
															"src": "2113:26:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:11",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:11"
																},
																"nativeSrc": "2121:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:11",
														"nodeType": "YulTypedName",
														"src": "2046:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:11",
														"nodeType": "YulTypedName",
														"src": "2054:4:11",
														"type": ""
													}
												],
												"src": "2005:141:11"
											},
											{
												"body": {
													"nativeSrc": "2196:49:11",
													"nodeType": "YulBlock",
													"src": "2196:49:11",
													"statements": [
														{
															"nativeSrc": "2206:33:11",
															"nodeType": "YulAssignment",
															"src": "2206:33:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:11"
																		},
																		"nativeSrc": "2220:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:11"
																},
																"nativeSrc": "2216:23:11",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:11"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:11",
														"nodeType": "YulTypedName",
														"src": "2179:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:11",
														"nodeType": "YulTypedName",
														"src": "2189:6:11",
														"type": ""
													}
												],
												"src": "2152:93:11"
											},
											{
												"body": {
													"nativeSrc": "2304:54:11",
													"nodeType": "YulBlock",
													"src": "2304:54:11",
													"statements": [
														{
															"nativeSrc": "2314:37:11",
															"nodeType": "YulAssignment",
															"src": "2314:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:11"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:11"
																},
																"nativeSrc": "2335:16:11",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:11"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:11",
														"nodeType": "YulTypedName",
														"src": "2279:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:11",
														"nodeType": "YulTypedName",
														"src": "2285:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:11",
														"nodeType": "YulTypedName",
														"src": "2295:8:11",
														"type": ""
													}
												],
												"src": "2251:107:11"
											},
											{
												"body": {
													"nativeSrc": "2440:317:11",
													"nodeType": "YulBlock",
													"src": "2440:317:11",
													"statements": [
														{
															"nativeSrc": "2450:35:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:11",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:11"
																},
																"nativeSrc": "2467:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:11"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:11",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:11",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:11"
																},
																"nativeSrc": "2506:97:11",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:11",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:11",
															"nodeType": "YulAssignment",
															"src": "2612:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:11"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:11"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:11"
																},
																"nativeSrc": "2624:39:11",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:11"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:11"
																}
															]
														},
														{
															"nativeSrc": "2672:30:11",
															"nodeType": "YulAssignment",
															"src": "2672:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:11"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:11"
																		},
																		"nativeSrc": "2692:9:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:11"
																},
																"nativeSrc": "2681:21:11",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:11"
																}
															]
														},
														{
															"nativeSrc": "2711:40:11",
															"nodeType": "YulAssignment",
															"src": "2711:40:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:11"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:11"
																		},
																		"nativeSrc": "2731:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:11"
																},
																"nativeSrc": "2721:30:11",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:11"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:11",
														"nodeType": "YulTypedName",
														"src": "2401:5:11",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:11",
														"nodeType": "YulTypedName",
														"src": "2408:10:11",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:11",
														"nodeType": "YulTypedName",
														"src": "2420:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:11",
														"nodeType": "YulTypedName",
														"src": "2433:6:11",
														"type": ""
													}
												],
												"src": "2364:393:11"
											},
											{
												"body": {
													"nativeSrc": "2808:32:11",
													"nodeType": "YulBlock",
													"src": "2808:32:11",
													"statements": [
														{
															"nativeSrc": "2818:16:11",
															"nodeType": "YulAssignment",
															"src": "2818:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:11",
																"nodeType": "YulIdentifier",
																"src": "2829:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:11",
														"nodeType": "YulTypedName",
														"src": "2790:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:11",
														"nodeType": "YulTypedName",
														"src": "2800:7:11",
														"type": ""
													}
												],
												"src": "2763:77:11"
											},
											{
												"body": {
													"nativeSrc": "2878:28:11",
													"nodeType": "YulBlock",
													"src": "2878:28:11",
													"statements": [
														{
															"nativeSrc": "2888:12:11",
															"nodeType": "YulAssignment",
															"src": "2888:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:11",
																"nodeType": "YulIdentifier",
																"src": "2895:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:11",
														"nodeType": "YulTypedName",
														"src": "2864:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:11",
														"nodeType": "YulTypedName",
														"src": "2874:3:11",
														"type": ""
													}
												],
												"src": "2846:60:11"
											},
											{
												"body": {
													"nativeSrc": "2972:82:11",
													"nodeType": "YulBlock",
													"src": "2972:82:11",
													"statements": [
														{
															"nativeSrc": "2982:66:11",
															"nodeType": "YulAssignment",
															"src": "2982:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:11"
																				},
																				"nativeSrc": "3022:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:11"
																		},
																		"nativeSrc": "3013:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:11"
																},
																"nativeSrc": "2995:53:11",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:11",
														"nodeType": "YulTypedName",
														"src": "2952:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:11",
														"nodeType": "YulTypedName",
														"src": "2962:9:11",
														"type": ""
													}
												],
												"src": "2912:142:11"
											},
											{
												"body": {
													"nativeSrc": "3107:28:11",
													"nodeType": "YulBlock",
													"src": "3107:28:11",
													"statements": [
														{
															"nativeSrc": "3117:12:11",
															"nodeType": "YulAssignment",
															"src": "3117:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:11",
																"nodeType": "YulIdentifier",
																"src": "3124:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:11"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:11",
														"nodeType": "YulTypedName",
														"src": "3093:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:11",
														"nodeType": "YulTypedName",
														"src": "3103:3:11",
														"type": ""
													}
												],
												"src": "3060:75:11"
											},
											{
												"body": {
													"nativeSrc": "3217:193:11",
													"nodeType": "YulBlock",
													"src": "3217:193:11",
													"statements": [
														{
															"nativeSrc": "3227:63:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:11",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:11"
																},
																"nativeSrc": "3251:39:11",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:11"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:11",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:11"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:11"
																				},
																				"nativeSrc": "3340:11:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:11"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:11",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:11"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:11",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:11"
																				},
																				"nativeSrc": "3361:41:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:11"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:11",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:11"
																		},
																		"nativeSrc": "3312:91:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:11"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:11"
																},
																"nativeSrc": "3299:105:11",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:11"
															},
															"nativeSrc": "3299:105:11",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:11"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:11",
														"nodeType": "YulTypedName",
														"src": "3194:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:11",
														"nodeType": "YulTypedName",
														"src": "3200:6:11",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:11",
														"nodeType": "YulTypedName",
														"src": "3208:7:11",
														"type": ""
													}
												],
												"src": "3141:269:11"
											},
											{
												"body": {
													"nativeSrc": "3465:24:11",
													"nodeType": "YulBlock",
													"src": "3465:24:11",
													"statements": [
														{
															"nativeSrc": "3475:8:11",
															"nodeType": "YulAssignment",
															"src": "3475:8:11",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:11",
																"nodeType": "YulLiteral",
																"src": "3482:1:11",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:11"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:11",
														"nodeType": "YulTypedName",
														"src": "3461:3:11",
														"type": ""
													}
												],
												"src": "3416:73:11"
											},
											{
												"body": {
													"nativeSrc": "3548:136:11",
													"nodeType": "YulBlock",
													"src": "3548:136:11",
													"statements": [
														{
															"nativeSrc": "3558:46:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:11"
																},
																"nativeSrc": "3572:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:11"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:11",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:11"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:11"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:11"
																},
																"nativeSrc": "3613:65:11",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:11"
															},
															"nativeSrc": "3613:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:11"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:11",
														"nodeType": "YulTypedName",
														"src": "3534:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:11",
														"nodeType": "YulTypedName",
														"src": "3540:6:11",
														"type": ""
													}
												],
												"src": "3495:189:11"
											},
											{
												"body": {
													"nativeSrc": "3740:136:11",
													"nodeType": "YulBlock",
													"src": "3740:136:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:11",
																"nodeType": "YulBlock",
																"src": "3807:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:11",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:11"
																			},
																			"nativeSrc": "3821:39:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:11"
																		},
																		"nativeSrc": "3821:39:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:11"
																},
																"nativeSrc": "3757:14:11",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:11"
															},
															"nativeSrc": "3750:120:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:11",
																"nodeType": "YulBlock",
																"src": "3772:26:11",
																"statements": [
																	{
																		"nativeSrc": "3774:22:11",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:11"
																			},
																			"nativeSrc": "3783:13:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:11"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:11",
																"nodeType": "YulBlock",
																"src": "3754:2:11",
																"statements": []
															},
															"src": "3750:120:11"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:11",
														"nodeType": "YulTypedName",
														"src": "3728:5:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:11",
														"nodeType": "YulTypedName",
														"src": "3735:3:11",
														"type": ""
													}
												],
												"src": "3690:186:11"
											},
											{
												"body": {
													"nativeSrc": "3961:464:11",
													"nodeType": "YulBlock",
													"src": "3961:464:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:11",
																"nodeType": "YulBlock",
																"src": "3987:431:11",
																"statements": [
																	{
																		"nativeSrc": "4001:54:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:11"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:11",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:11"
																			},
																			"nativeSrc": "4017:38:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:11"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:11",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:11",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:11"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:11",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:11"
																					},
																					"nativeSrc": "4101:29:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:11"
																			},
																			"nativeSrc": "4087:44:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:11"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:11",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:11",
																			"nodeType": "YulBlock",
																			"src": "4288:27:11",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:11",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:11",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:11"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:11",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:11",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:11"
																			},
																			"nativeSrc": "4269:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:11"
																		},
																		"nativeSrc": "4266:49:11",
																		"nodeType": "YulIf",
																		"src": "4266:49:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:11",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:11",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:11"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:11",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:11"
																							},
																							"nativeSrc": "4384:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:11"
																					},
																					"nativeSrc": "4370:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:11"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:11",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:11"
																			},
																			"nativeSrc": "4328:80:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:11"
																		},
																		"nativeSrc": "4328:80:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:11"
																},
																"nativeSrc": "3975:11:11",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:11"
															},
															"nativeSrc": "3972:446:11",
															"nodeType": "YulIf",
															"src": "3972:446:11"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:11",
														"nodeType": "YulTypedName",
														"src": "3937:5:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:11",
														"nodeType": "YulTypedName",
														"src": "3944:3:11",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:11",
														"nodeType": "YulTypedName",
														"src": "3949:10:11",
														"type": ""
													}
												],
												"src": "3882:543:11"
											},
											{
												"body": {
													"nativeSrc": "4494:54:11",
													"nodeType": "YulBlock",
													"src": "4494:54:11",
													"statements": [
														{
															"nativeSrc": "4504:37:11",
															"nodeType": "YulAssignment",
															"src": "4504:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:11"
																},
																"nativeSrc": "4525:16:11",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:11",
														"nodeType": "YulTypedName",
														"src": "4469:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:11",
														"nodeType": "YulTypedName",
														"src": "4475:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:11",
														"nodeType": "YulTypedName",
														"src": "4485:8:11",
														"type": ""
													}
												],
												"src": "4431:117:11"
											},
											{
												"body": {
													"nativeSrc": "4605:118:11",
													"nodeType": "YulBlock",
													"src": "4605:118:11",
													"statements": [
														{
															"nativeSrc": "4615:68:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:11",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:11",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:11"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:11"
																				},
																				"nativeSrc": "4660:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:11",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:11"
																				},
																				"nativeSrc": "4675:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:11"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:11",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:11"
																		},
																		"nativeSrc": "4631:51:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:11"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:11"
																},
																"nativeSrc": "4627:56:11",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:11",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:11",
															"nodeType": "YulAssignment",
															"src": "4692:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:11"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:11"
																},
																"nativeSrc": "4702:15:11",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:11"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:11",
														"nodeType": "YulTypedName",
														"src": "4582:4:11",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:11",
														"nodeType": "YulTypedName",
														"src": "4588:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:11",
														"nodeType": "YulTypedName",
														"src": "4598:6:11",
														"type": ""
													}
												],
												"src": "4554:169:11"
											},
											{
												"body": {
													"nativeSrc": "4809:214:11",
													"nodeType": "YulBlock",
													"src": "4809:214:11",
													"statements": [
														{
															"nativeSrc": "4942:37:11",
															"nodeType": "YulAssignment",
															"src": "4942:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:11"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:11"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:11"
																},
																"nativeSrc": "4950:29:11",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:11"
																}
															]
														},
														{
															"nativeSrc": "4988:29:11",
															"nodeType": "YulAssignment",
															"src": "4988:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:11",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:11"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:11"
																		},
																		"nativeSrc": "5005:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:11"
																},
																"nativeSrc": "4996:21:11",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:11"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:11"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:11",
														"nodeType": "YulTypedName",
														"src": "4790:4:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:11",
														"nodeType": "YulTypedName",
														"src": "4796:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:11",
														"nodeType": "YulTypedName",
														"src": "4804:4:11",
														"type": ""
													}
												],
												"src": "4728:295:11"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:11",
													"nodeType": "YulBlock",
													"src": "5120:1303:11",
													"statements": [
														{
															"nativeSrc": "5131:51:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:11"
																},
																"nativeSrc": "5145:37:11",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:11"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:11",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:11",
																"nodeType": "YulBlock",
																"src": "5267:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:11"
																			},
																			"nativeSrc": "5269:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:11"
																		},
																		"nativeSrc": "5269:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:11",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:11"
																},
																"nativeSrc": "5236:30:11",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:11"
															},
															"nativeSrc": "5233:56:11",
															"nodeType": "YulIf",
															"src": "5233:56:11"
														},
														{
															"nativeSrc": "5299:52:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:11"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:11"
																		},
																		"nativeSrc": "5339:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:11"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:11"
																},
																"nativeSrc": "5313:38:11",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:11"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:11",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:11"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:11"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:11"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:11",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:11"
																},
																"nativeSrc": "5398:67:11",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:11"
															},
															"nativeSrc": "5398:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:11"
														},
														{
															"nativeSrc": "5475:18:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:11",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:11",
																"nodeType": "YulLiteral",
																"src": "5492:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:11",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:11",
															"nodeType": "YulAssignment",
															"src": "5503:17:11",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:11",
																"nodeType": "YulLiteral",
																"src": "5516:4:11",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:11"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:11",
																		"nodeType": "YulBlock",
																		"src": "5567:611:11",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:11"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:11",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:11",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:11"
																							},
																							"nativeSrc": "5608:9:11",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:11"
																					},
																					"nativeSrc": "5596:22:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:11"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:11",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:11"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:11",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:11"
																					},
																					"nativeSrc": "5646:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:11"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:11",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:11",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:11",
																					"nodeType": "YulBlock",
																					"src": "5764:163:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:11",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:11"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:11",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:11"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:11"
																												},
																												"nativeSrc": "5803:19:11",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:11"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:11"
																										},
																										"nativeSrc": "5797:26:11",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:11"
																								},
																								"nativeSrc": "5782:42:11",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:11"
																							},
																							"nativeSrc": "5782:42:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:11"
																						},
																						{
																							"nativeSrc": "5841:24:11",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:11",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:11"
																								},
																								"nativeSrc": "5851:14:11",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:11"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:11"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:11",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:11",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:11",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:11",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:11"
																								},
																								"nativeSrc": "5895:18:11",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:11"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:11",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:11"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:11"
																					},
																					"nativeSrc": "5727:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:11"
																				},
																				"nativeSrc": "5719:208:11",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:11",
																					"nodeType": "YulBlock",
																					"src": "5742:21:11",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:11",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:11",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:11",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:11"
																								},
																								"nativeSrc": "5749:12:11",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:11"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:11"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:11",
																					"nodeType": "YulBlock",
																					"src": "5723:3:11",
																					"statements": []
																				},
																				"src": "5719:208:11"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:11",
																					"nodeType": "YulBlock",
																					"src": "5963:156:11",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:11",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:11"
																										},
																										"nativeSrc": "6004:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:11"
																								},
																								"nativeSrc": "5998:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:11"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:11",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:11",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:11"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:11",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:11"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:11",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:11",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:11"
																												},
																												"nativeSrc": "6086:17:11",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:11"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:11",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:11"
																										},
																										"nativeSrc": "6056:48:11",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:11"
																								},
																								"nativeSrc": "6041:64:11",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:11"
																							},
																							"nativeSrc": "6041:64:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:11"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:11"
																					},
																					"nativeSrc": "5943:19:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:11"
																				},
																				"nativeSrc": "5940:179:11",
																				"nodeType": "YulIf",
																				"src": "5940:179:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:11",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:11"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:11",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:11",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:11"
																									},
																									"nativeSrc": "6149:14:11",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:11",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:11"
																							},
																							"nativeSrc": "6145:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:11"
																					},
																					"nativeSrc": "6132:36:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:11"
																				},
																				"nativeSrc": "6132:36:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:11"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:11",
																	"nodeType": "YulCase",
																	"src": "5560:618:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:11",
																		"nodeType": "YulBlock",
																		"src": "6195:222:11",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:11",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:11",
																					"nodeType": "YulBlock",
																					"src": "6246:67:11",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:11",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:11"
																										},
																										"nativeSrc": "6279:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:11"
																								},
																								"nativeSrc": "6273:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:11"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:11"
																				},
																				"nativeSrc": "6236:77:11",
																				"nodeType": "YulIf",
																				"src": "6236:77:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:11"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:11"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:11",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:11"
																							},
																							"nativeSrc": "6339:67:11",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:11"
																					},
																					"nativeSrc": "6326:81:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:11"
																				},
																				"nativeSrc": "6326:81:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:11"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:11",
																	"nodeType": "YulCase",
																	"src": "6187:230:11",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:11"
																},
																"nativeSrc": "5537:14:11",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:11"
															},
															"nativeSrc": "5530:887:11",
															"nodeType": "YulSwitch",
															"src": "5530:887:11"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:11",
														"nodeType": "YulTypedName",
														"src": "5109:4:11",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:11",
														"nodeType": "YulTypedName",
														"src": "5115:3:11",
														"type": ""
													}
												],
												"src": "5028:1395:11"
											},
											{
												"body": {
													"nativeSrc": "6494:53:11",
													"nodeType": "YulBlock",
													"src": "6494:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:11"
																		},
																		"nativeSrc": "6516:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:11"
																},
																"nativeSrc": "6504:37:11",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:11"
															},
															"nativeSrc": "6504:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:11",
														"nodeType": "YulTypedName",
														"src": "6482:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:11",
														"nodeType": "YulTypedName",
														"src": "6489:3:11",
														"type": ""
													}
												],
												"src": "6429:118:11"
											},
											{
												"body": {
													"nativeSrc": "6651:124:11",
													"nodeType": "YulBlock",
													"src": "6651:124:11",
													"statements": [
														{
															"nativeSrc": "6661:26:11",
															"nodeType": "YulAssignment",
															"src": "6661:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:11"
																},
																"nativeSrc": "6669:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:11"
																		},
																		"nativeSrc": "6750:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:11"
																},
																"nativeSrc": "6697:71:11",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:11"
															},
															"nativeSrc": "6697:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:11",
														"nodeType": "YulTypedName",
														"src": "6623:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:11",
														"nodeType": "YulTypedName",
														"src": "6635:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:11",
														"nodeType": "YulTypedName",
														"src": "6646:4:11",
														"type": ""
													}
												],
												"src": "6553:222:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060405161294f38038061294f83398181016040528101906100319190610317565b336040518060400160405280600581526020017f42696c69730000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f424c53000000000000000000000000000000000000000000000000000000000081525081600390816100ad919061057f565b5080600490816100bd919061057f565b5050505f60055f6101000a81548160ff0219169083151502179055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610149575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610140919061065d565b60405180910390fd5b610158816101f460201b60201c565b508060065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050610676565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102e6826102bd565b9050919050565b6102f6816102dc565b8114610300575f5ffd5b50565b5f81519050610311816102ed565b92915050565b5f6020828403121561032c5761032b6102b9565b5b5f61033984828501610303565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806103bd57607f821691505b6020821081036103d0576103cf610379565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026104327fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826103f7565b61043c86836103f7565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61048061047b61047684610454565b61045d565b610454565b9050919050565b5f819050919050565b61049983610466565b6104ad6104a582610487565b848454610403565b825550505050565b5f5f905090565b6104c46104b5565b6104cf818484610490565b505050565b5b818110156104f2576104e75f826104bc565b6001810190506104d5565b5050565b601f82111561053757610508816103d6565b610511846103e8565b81016020851015610520578190505b61053461052c856103e8565b8301826104d4565b50505b505050565b5f82821c905092915050565b5f6105575f198460080261053c565b1980831691505092915050565b5f61056f8383610548565b9150826002028217905092915050565b61058882610342565b67ffffffffffffffff8111156105a1576105a061034c565b5b6105ab82546103a6565b6105b68282856104f6565b5f60209050601f8311600181146105e7575f84156105d5578287015190505b6105df8582610564565b865550610646565b601f1984166105f5866103d6565b5f5b8281101561061c578489015182556001820191506020850194506020810190506105f7565b868310156106395784890151610635601f891682610548565b8355505b6001600288020188555050505b505050505050565b610657816102dc565b82525050565b5f6020820190506106705f83018461064e565b92915050565b6122cc806106835f395ff3fe6080604052600436106101cc575f3560e01c80635c975abb116100f657806395d89b4111610094578063dd62ed3e11610063578063dd62ed3e1461063e578063dfca5ce31461067a578063f2fde38b146106a2578063f3c61d6b146106ca576101cc565b806395d89b41146105865780639a49090e146105b0578063a9059cbb146105d8578063bca1229914610614576101cc565b806379cc6790116100d057806379cc6790146104f65780638456cb591461051e5780638b1c7b10146105345780638da5cb5b1461055c576101cc565b80635c975abb1461047a57806370a08231146104a4578063715018a6146104e0576101cc565b80632bda3e0b1161016e5780633f4ba83a1161013d5780633f4ba83a146103e45780634080d640146103fa57806342966c681461043657806356d5d4751461045e576101cc565b80632bda3e0b1461032c578063313ce5671461035457806332cb6b0c1461037e5780633b5d441e146103a8576101cc565b806318160ddd116101aa57806318160ddd146102605780631a6e4db41461028a5780631d187c50146102b457806323b872dd146102f0576101cc565b8063010a38f5146101d057806306fdde03146101fa578063095ea7b314610224575b5f5ffd5b3480156101db575f5ffd5b506101e46106f2565b6040516101f191906119d3565b60405180910390f35b348015610205575f5ffd5b5061020e610714565b60405161021b9190611a5c565b60405180910390f35b34801561022f575f5ffd5b5061024a60048036038101906102459190611b08565b6107a4565b6040516102579190611b60565b60405180910390f35b34801561026b575f5ffd5b506102746107c6565b60405161028191906119d3565b60405180910390f35b348015610295575f5ffd5b5061029e6107cf565b6040516102ab9190611b88565b60405180910390f35b3480156102bf575f5ffd5b506102da60048036038101906102d59190611bda565b6107f4565b6040516102e79190611c1d565b60405180910390f35b3480156102fb575f5ffd5b5061031660048036038101906103119190611c36565b610809565b6040516103239190611b60565b60405180910390f35b348015610337575f5ffd5b50610352600480360381019061034d9190611cb0565b610837565b005b34801561035f575f5ffd5b50610368610865565b6040516103759190611d09565b60405180910390f35b348015610389575f5ffd5b5061039261086d565b60405161039f91906119d3565b60405180910390f35b3480156103b3575f5ffd5b506103ce60048036038101906103c99190611d22565b61087b565b6040516103db91906119d3565b60405180910390f35b3480156103ef575f5ffd5b506103f8610890565b005b348015610405575f5ffd5b50610420600480360381019061041b9190611d22565b6108a2565b60405161042d9190611b60565b60405180910390f35b348015610441575f5ffd5b5061045c60048036038101906104579190611d4d565b6108bf565b005b61047860048036038101906104739190611dd9565b6108d3565b005b348015610485575f5ffd5b5061048e6109f0565b60405161049b9190611b60565b60405180910390f35b3480156104af575f5ffd5b506104ca60048036038101906104c59190611d22565b610a05565b6040516104d791906119d3565b60405180910390f35b3480156104eb575f5ffd5b506104f4610a4a565b005b348015610501575f5ffd5b5061051c60048036038101906105179190611b08565b610a5d565b005b348015610529575f5ffd5b50610532610a7d565b005b34801561053f575f5ffd5b5061055a60048036038101906105559190611d22565b610a8f565b005b348015610567575f5ffd5b50610570610b31565b60405161057d9190611b88565b60405180910390f35b348015610591575f5ffd5b5061059a610b5a565b6040516105a79190611a5c565b60405180910390f35b3480156105bb575f5ffd5b506105d660048036038101906105d19190611b08565b610bea565b005b3480156105e3575f5ffd5b506105fe60048036038101906105f99190611b08565b610c89565b60405161060b9190611b60565b60405180910390f35b34801561061f575f5ffd5b50610628610cab565b60405161063591906119d3565b60405180910390f35b348015610649575f5ffd5b50610664600480360381019061065f9190611e4a565b610cb8565b60405161067191906119d3565b60405180910390f35b348015610685575f5ffd5b506106a0600480360381019061069b9190611d22565b610d3a565b005b3480156106ad575f5ffd5b506106c860048036038101906106c39190611d22565b610ddc565b005b3480156106d5575f5ffd5b506106f060048036038101906106eb9190611d22565b610e60565b005b5f6001600a5f8282546107059190611eb5565b92505081905550600a54905090565b60606003805461072390611f15565b80601f016020809104026020016040519081016040528092919081815260200182805461074f90611f15565b801561079a5780601f106107715761010080835404028352916020019161079a565b820191905f5260205f20905b81548152906001019060200180831161077d57829003601f168201915b5050505050905090565b5f5f6107ae610eab565b90506107bb818585610eb2565b600191505092915050565b5f600254905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6007602052805f5260405f205f915090505481565b5f5f610813610eab565b9050610820858285610ec4565b61082b858585610f56565b60019150509392505050565b61083f611046565b8060075f8463ffffffff1663ffffffff1681526020019081526020015f20819055505050565b5f6012905090565b69d3c21bcecceda100000081565b6009602052805f5260405f205f915090505481565b610898611046565b6108a06110cd565b565b6008602052805f5260405f205f915054906101000a900460ff1681565b6108d06108ca610eab565b8261112e565b50565b6108db6111ad565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461096a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096190611f8f565b60405180910390fd5b60075f8563ffffffff1663ffffffff1681526020019081526020015f205483146109c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c090611ff7565b60405180910390fd5b5f5f83838101906109da9190612050565b915091506109e882826111ee565b505050505050565b5f60055f9054906101000a900460ff16905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610a52611046565b610a5b5f6113c5565b565b610a6f82610a69610eab565b83610ec4565b610a79828261112e565b5050565b610a85611046565b610a8d61148a565b565b610a97611046565b600160085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167e90e5d96e2f61f1fa8b5c535ec11045a07288f1ee285325f85caf8379789e2460405160405180910390a250565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610b6990611f15565b80601f0160208091040260200160405190810160405280929190818152602001828054610b9590611f15565b8015610be05780601f10610bb757610100808354040283529160200191610be0565b820191905f5260205f20905b815481529060010190602001808311610bc357829003601f168201915b5050505050905090565b60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610c73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6a906120d8565b60405180910390fd5b610c7b6111ad565b610c8582826111ee565b5050565b5f5f610c93610eab565b9050610ca0818585610f56565b600191505092915050565b683635c9adc5dea0000081565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610d42611046565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f22c7af3157a517d9d910083d0cd16646c9204f9d52824a23558c7d97d796d63860405160405180910390a250565b610de4611046565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e54575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e4b9190611b88565b60405180910390fd5b610e5d816113c5565b50565b610e68611046565b8060065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f33905090565b610ebf83838360016114ec565b505050565b5f610ecf8484610cb8565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610f505781811015610f41578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610f38939291906120f6565b60405180910390fd5b610f4f84848484035f6114ec565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fc6575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610fbd9190611b88565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611036575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161102d9190611b88565b60405180910390fd5b6110418383836116bb565b505050565b61104e610eab565b73ffffffffffffffffffffffffffffffffffffffff1661106c610b31565b73ffffffffffffffffffffffffffffffffffffffff16146110cb5761108f610eab565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016110c29190611b88565b60405180910390fd5b565b6110d56116cb565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611117610eab565b6040516111249190611b88565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361119e575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016111959190611b88565b60405180910390fd5b6111a9825f836116bb565b5050565b6111b56109f0565b156111ec576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b69d3c21bcecceda1000000816112026107c6565b61120c9190611eb5565b111561124d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124490612175565b60405180910390fd5b6201518060095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20544261129a9190612193565b10156112db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d290612210565b60405180910390fd5b683635c9adc5dea00000811115611327576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131e90612278565b60405180910390fd5b611331828261170b565b4260095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff167fe8ea3d4dd0a2eaaf3f7532ad391255544f8a4bcf78f850bbff61d5bac9f77552826040516113b991906119d3565b60405180910390a25050565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6114926111ad565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586114d5610eab565b6040516114e29190611b88565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361155c575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016115539190611b88565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115cc575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016115c39190611b88565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156116b5578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516116ac91906119d3565b60405180910390a35b50505050565b6116c683838361178a565b505050565b6116d36109f0565b611709576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361177b575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016117729190611b88565b60405180910390fd5b6117865f83836116bb565b5050565b6117926111ad565b61179d8383836117a2565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117f2578060025f8282546117e69190611eb5565b925050819055506118c0565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561187b578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611872939291906120f6565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611907578060025f8282540392505081905550611951565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516119ae91906119d3565b60405180910390a3505050565b5f819050919050565b6119cd816119bb565b82525050565b5f6020820190506119e65f8301846119c4565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611a2e826119ec565b611a3881856119f6565b9350611a48818560208601611a06565b611a5181611a14565b840191505092915050565b5f6020820190508181035f830152611a748184611a24565b905092915050565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611aad82611a84565b9050919050565b611abd81611aa3565b8114611ac7575f5ffd5b50565b5f81359050611ad881611ab4565b92915050565b611ae7816119bb565b8114611af1575f5ffd5b50565b5f81359050611b0281611ade565b92915050565b5f5f60408385031215611b1e57611b1d611a7c565b5b5f611b2b85828601611aca565b9250506020611b3c85828601611af4565b9150509250929050565b5f8115159050919050565b611b5a81611b46565b82525050565b5f602082019050611b735f830184611b51565b92915050565b611b8281611aa3565b82525050565b5f602082019050611b9b5f830184611b79565b92915050565b5f63ffffffff82169050919050565b611bb981611ba1565b8114611bc3575f5ffd5b50565b5f81359050611bd481611bb0565b92915050565b5f60208284031215611bef57611bee611a7c565b5b5f611bfc84828501611bc6565b91505092915050565b5f819050919050565b611c1781611c05565b82525050565b5f602082019050611c305f830184611c0e565b92915050565b5f5f5f60608486031215611c4d57611c4c611a7c565b5b5f611c5a86828701611aca565b9350506020611c6b86828701611aca565b9250506040611c7c86828701611af4565b9150509250925092565b611c8f81611c05565b8114611c99575f5ffd5b50565b5f81359050611caa81611c86565b92915050565b5f5f60408385031215611cc657611cc5611a7c565b5b5f611cd385828601611bc6565b9250506020611ce485828601611c9c565b9150509250929050565b5f60ff82169050919050565b611d0381611cee565b82525050565b5f602082019050611d1c5f830184611cfa565b92915050565b5f60208284031215611d3757611d36611a7c565b5b5f611d4484828501611aca565b91505092915050565b5f60208284031215611d6257611d61611a7c565b5b5f611d6f84828501611af4565b91505092915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112611d9957611d98611d78565b5b8235905067ffffffffffffffff811115611db657611db5611d7c565b5b602083019150836001820283011115611dd257611dd1611d80565b5b9250929050565b5f5f5f5f60608587031215611df157611df0611a7c565b5b5f611dfe87828801611bc6565b9450506020611e0f87828801611c9c565b935050604085013567ffffffffffffffff811115611e3057611e2f611a80565b5b611e3c87828801611d84565b925092505092959194509250565b5f5f60408385031215611e6057611e5f611a7c565b5b5f611e6d85828601611aca565b9250506020611e7e85828601611aca565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611ebf826119bb565b9150611eca836119bb565b9250828201905080821115611ee257611ee1611e88565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611f2c57607f821691505b602082108103611f3f57611f3e611ee8565b5b50919050565b7f43616c6c6572206d75737420626520746865206d61696c626f780000000000005f82015250565b5f611f79601a836119f6565b9150611f8482611f45565b602082019050919050565b5f6020820190508181035f830152611fa681611f6d565b9050919050565b7f53656e646572206d75737420626520747275737465642072656d6f74650000005f82015250565b5f611fe1601d836119f6565b9150611fec82611fad565b602082019050919050565b5f6020820190508181035f83015261200e81611fd5565b9050919050565b5f61201f82611a84565b9050919050565b61202f81612015565b8114612039575f5ffd5b50565b5f8135905061204a81612026565b92915050565b5f5f6040838503121561206657612065611a7c565b5b5f6120738582860161203c565b925050602061208485828601611af4565b9150509250929050565b7f43616c6c6572206973206e6f7420612067616d65206d617374657200000000005f82015250565b5f6120c2601b836119f6565b91506120cd8261208e565b602082019050919050565b5f6020820190508181035f8301526120ef816120b6565b9050919050565b5f6060820190506121095f830186611b79565b61211660208301856119c4565b61212360408301846119c4565b949350505050565b7f4d617820737570706c79207265616368656400000000000000000000000000005f82015250565b5f61215f6012836119f6565b915061216a8261212b565b602082019050919050565b5f6020820190508181035f83015261218c81612153565b9050919050565b5f61219d826119bb565b91506121a8836119bb565b92508282039050818111156121c0576121bf611e88565b5b92915050565b7f4461696c7920726577617264206c696d697420726561636865640000000000005f82015250565b5f6121fa601a836119f6565b9150612205826121c6565b602082019050919050565b5f6020820190508181035f830152612227816121ee565b9050919050565b7f5265776172642065786365656473206461696c79206c696d69740000000000005f82015250565b5f612262601a836119f6565b915061226d8261222e565b602082019050919050565b5f6020820190508181035f83015261228f81612256565b905091905056fea264697066735822122001156dc1935cbc6599f4f93a5c4cfc20a49d85ed5252836d5b59b6a6e9463c3464736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x294F CODESIZE SUB DUP1 PUSH2 0x294F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x317 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x42696C6973000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x424C530000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x57F JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x57F JUMP JUMPDEST POP POP POP PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x149 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x158 DUP2 PUSH2 0x1F4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP PUSH2 0x676 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2E6 DUP3 PUSH2 0x2BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F6 DUP2 PUSH2 0x2DC JUMP JUMPDEST DUP2 EQ PUSH2 0x300 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x311 DUP2 PUSH2 0x2ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32C JUMPI PUSH2 0x32B PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x339 DUP5 DUP3 DUP6 ADD PUSH2 0x303 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3BD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3D0 JUMPI PUSH2 0x3CF PUSH2 0x379 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x432 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3F7 JUMP JUMPDEST PUSH2 0x43C DUP7 DUP4 PUSH2 0x3F7 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x480 PUSH2 0x47B PUSH2 0x476 DUP5 PUSH2 0x454 JUMP JUMPDEST PUSH2 0x45D JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x499 DUP4 PUSH2 0x466 JUMP JUMPDEST PUSH2 0x4AD PUSH2 0x4A5 DUP3 PUSH2 0x487 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x403 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4C4 PUSH2 0x4B5 JUMP JUMPDEST PUSH2 0x4CF DUP2 DUP5 DUP5 PUSH2 0x490 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4F2 JUMPI PUSH2 0x4E7 PUSH0 DUP3 PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4D5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x537 JUMPI PUSH2 0x508 DUP2 PUSH2 0x3D6 JUMP JUMPDEST PUSH2 0x511 DUP5 PUSH2 0x3E8 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x520 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x534 PUSH2 0x52C DUP6 PUSH2 0x3E8 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4D4 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x557 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x53C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x56F DUP4 DUP4 PUSH2 0x548 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x588 DUP3 PUSH2 0x342 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5A1 JUMPI PUSH2 0x5A0 PUSH2 0x34C JUMP JUMPDEST JUMPDEST PUSH2 0x5AB DUP3 SLOAD PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x5B6 DUP3 DUP3 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5E7 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x5D5 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x5DF DUP6 DUP3 PUSH2 0x564 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x646 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x5F5 DUP7 PUSH2 0x3D6 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x61C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5F7 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x639 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x635 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x548 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x657 DUP2 PUSH2 0x2DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x670 PUSH0 DUP4 ADD DUP5 PUSH2 0x64E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22CC DUP1 PUSH2 0x683 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xF6 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0xDFCA5CE3 EQ PUSH2 0x67A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6A2 JUMPI DUP1 PUSH4 0xF3C61D6B EQ PUSH2 0x6CA JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x586 JUMPI DUP1 PUSH4 0x9A49090E EQ PUSH2 0x5B0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5D8 JUMPI DUP1 PUSH4 0xBCA12299 EQ PUSH2 0x614 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x79CC6790 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0x8B1C7B10 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x55C JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4E0 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x2BDA3E0B GT PUSH2 0x16E JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0x4080D640 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x56D5D475 EQ PUSH2 0x45E JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x2BDA3E0B EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x3B5D441E EQ PUSH2 0x3A8 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1AA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x1A6E4DB4 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x1D187C50 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2F0 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x10A38F5 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x224 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x20E PUSH2 0x714 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1B08 JUMP JUMPDEST PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x274 PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x1C36 JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x1CB0 JUMP JUMPDEST PUSH2 0x837 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x368 PUSH2 0x865 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x1D09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x389 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x392 PUSH2 0x86D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3F8 PUSH2 0x890 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x405 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x420 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41B SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH2 0x8A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x441 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x45C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x1D4D JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x478 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x1DD9 JUMP JUMPDEST PUSH2 0x8D3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x485 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x48E PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49B SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4F4 PUSH2 0xA4A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x501 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x51C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x517 SWAP2 SWAP1 PUSH2 0x1B08 JUMP JUMPDEST PUSH2 0xA5D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x529 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x532 PUSH2 0xA7D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x55A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x555 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH2 0xA8F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x567 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x570 PUSH2 0xB31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57D SWAP2 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x591 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x59A PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A7 SWAP2 SWAP1 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x1B08 JUMP JUMPDEST PUSH2 0xBEA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F9 SWAP2 SWAP1 PUSH2 0x1B08 JUMP JUMPDEST PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x628 PUSH2 0xCAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x635 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x649 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x664 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65F SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST PUSH2 0xCB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x671 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x685 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x6A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69B SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH2 0xD3A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x6C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C3 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH2 0xDDC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x6F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6EB SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH2 0xE60 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0xA PUSH0 DUP3 DUP3 SLOAD PUSH2 0x705 SWAP2 SWAP1 PUSH2 0x1EB5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xA SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x723 SWAP1 PUSH2 0x1F15 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x74F SWAP1 PUSH2 0x1F15 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x79A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x771 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x79A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x77D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7AE PUSH2 0xEAB JUMP JUMPDEST SWAP1 POP PUSH2 0x7BB DUP2 DUP6 DUP6 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x813 PUSH2 0xEAB JUMP JUMPDEST SWAP1 POP PUSH2 0x820 DUP6 DUP3 DUP6 PUSH2 0xEC4 JUMP JUMPDEST PUSH2 0x82B DUP6 DUP6 DUP6 PUSH2 0xF56 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x83F PUSH2 0x1046 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP5 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x898 PUSH2 0x1046 JUMP JUMPDEST PUSH2 0x8A0 PUSH2 0x10CD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x8D0 PUSH2 0x8CA PUSH2 0xEAB JUMP JUMPDEST DUP3 PUSH2 0x112E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x8DB PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x96A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x961 SWAP1 PUSH2 0x1F8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 DUP6 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP4 EQ PUSH2 0x9C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C0 SWAP1 PUSH2 0x1FF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 DUP4 DUP4 DUP2 ADD SWAP1 PUSH2 0x9DA SWAP2 SWAP1 PUSH2 0x2050 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x9E8 DUP3 DUP3 PUSH2 0x11EE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA52 PUSH2 0x1046 JUMP JUMPDEST PUSH2 0xA5B PUSH0 PUSH2 0x13C5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA6F DUP3 PUSH2 0xA69 PUSH2 0xEAB JUMP JUMPDEST DUP4 PUSH2 0xEC4 JUMP JUMPDEST PUSH2 0xA79 DUP3 DUP3 PUSH2 0x112E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA85 PUSH2 0x1046 JUMP JUMPDEST PUSH2 0xA8D PUSH2 0x148A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA97 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH31 0x90E5D96E2F61F1FA8B5C535EC11045A07288F1EE285325F85CAF8379789E24 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xB69 SWAP1 PUSH2 0x1F15 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB95 SWAP1 PUSH2 0x1F15 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBE0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBB7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBE0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBC3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6A SWAP1 PUSH2 0x20D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC7B PUSH2 0x11AD JUMP JUMPDEST PUSH2 0xC85 DUP3 DUP3 PUSH2 0x11EE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xC93 PUSH2 0xEAB JUMP JUMPDEST SWAP1 POP PUSH2 0xCA0 DUP2 DUP6 DUP6 PUSH2 0xF56 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH9 0x3635C9ADC5DEA00000 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD42 PUSH2 0x1046 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x22C7AF3157A517D9D910083D0CD16646C9204F9D52824A23558C7D97D796D638 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xDE4 PUSH2 0x1046 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE54 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4B SWAP2 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE5D DUP2 PUSH2 0x13C5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE68 PUSH2 0x1046 JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEBF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x14EC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xECF DUP5 DUP5 PUSH2 0xCB8 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xF50 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xF41 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF38 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF4F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x14EC JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFC6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBD SWAP2 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1036 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102D SWAP2 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1041 DUP4 DUP4 DUP4 PUSH2 0x16BB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x104E PUSH2 0xEAB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x106C PUSH2 0xB31 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10CB JUMPI PUSH2 0x108F PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C2 SWAP2 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x10D5 PUSH2 0x16CB JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1117 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1124 SWAP2 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x119E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1195 SWAP2 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11A9 DUP3 PUSH0 DUP4 PUSH2 0x16BB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x11B5 PUSH2 0x9F0 JUMP JUMPDEST ISZERO PUSH2 0x11EC JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 PUSH2 0x1202 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x120C SWAP2 SWAP1 PUSH2 0x1EB5 JUMP JUMPDEST GT ISZERO PUSH2 0x124D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1244 SWAP1 PUSH2 0x2175 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x15180 PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x129A SWAP2 SWAP1 PUSH2 0x2193 JUMP JUMPDEST LT ISZERO PUSH2 0x12DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D2 SWAP1 PUSH2 0x2210 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH9 0x3635C9ADC5DEA00000 DUP2 GT ISZERO PUSH2 0x1327 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131E SWAP1 PUSH2 0x2278 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1331 DUP3 DUP3 PUSH2 0x170B JUMP JUMPDEST TIMESTAMP PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE8EA3D4DD0A2EAAF3F7532AD391255544F8A4BCF78F850BBFF61D5BAC9F77552 DUP3 PUSH1 0x40 MLOAD PUSH2 0x13B9 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1492 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x14D5 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E2 SWAP2 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x155C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1553 SWAP2 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15CC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C3 SWAP2 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x16B5 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x16AC SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x16C6 DUP4 DUP4 DUP4 PUSH2 0x178A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x16D3 PUSH2 0x9F0 JUMP JUMPDEST PUSH2 0x1709 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x177B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1772 SWAP2 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1786 PUSH0 DUP4 DUP4 PUSH2 0x16BB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1792 PUSH2 0x11AD JUMP JUMPDEST PUSH2 0x179D DUP4 DUP4 DUP4 PUSH2 0x17A2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17F2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x17E6 SWAP2 SWAP1 PUSH2 0x1EB5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x18C0 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x187B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1872 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1907 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1951 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x19AE SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19CD DUP2 PUSH2 0x19BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19E6 PUSH0 DUP4 ADD DUP5 PUSH2 0x19C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A2E DUP3 PUSH2 0x19EC JUMP JUMPDEST PUSH2 0x1A38 DUP2 DUP6 PUSH2 0x19F6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A48 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A06 JUMP JUMPDEST PUSH2 0x1A51 DUP2 PUSH2 0x1A14 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A74 DUP2 DUP5 PUSH2 0x1A24 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AAD DUP3 PUSH2 0x1A84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ABD DUP2 PUSH2 0x1AA3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AC7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AD8 DUP2 PUSH2 0x1AB4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AE7 DUP2 PUSH2 0x19BB JUMP JUMPDEST DUP2 EQ PUSH2 0x1AF1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B02 DUP2 PUSH2 0x1ADE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B1E JUMPI PUSH2 0x1B1D PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B2B DUP6 DUP3 DUP7 ADD PUSH2 0x1ACA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B3C DUP6 DUP3 DUP7 ADD PUSH2 0x1AF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B5A DUP2 PUSH2 0x1B46 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B73 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B82 DUP2 PUSH2 0x1AA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B9B PUSH0 DUP4 ADD DUP5 PUSH2 0x1B79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB9 DUP2 PUSH2 0x1BA1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BC3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BD4 DUP2 PUSH2 0x1BB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BEF JUMPI PUSH2 0x1BEE PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BFC DUP5 DUP3 DUP6 ADD PUSH2 0x1BC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C17 DUP2 PUSH2 0x1C05 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C30 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C4D JUMPI PUSH2 0x1C4C PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C5A DUP7 DUP3 DUP8 ADD PUSH2 0x1ACA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C6B DUP7 DUP3 DUP8 ADD PUSH2 0x1ACA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C7C DUP7 DUP3 DUP8 ADD PUSH2 0x1AF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1C8F DUP2 PUSH2 0x1C05 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C99 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CAA DUP2 PUSH2 0x1C86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CC6 JUMPI PUSH2 0x1CC5 PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CD3 DUP6 DUP3 DUP7 ADD PUSH2 0x1BC6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CE4 DUP6 DUP3 DUP7 ADD PUSH2 0x1C9C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D03 DUP2 PUSH2 0x1CEE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D1C PUSH0 DUP4 ADD DUP5 PUSH2 0x1CFA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D37 JUMPI PUSH2 0x1D36 PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D44 DUP5 DUP3 DUP6 ADD PUSH2 0x1ACA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D62 JUMPI PUSH2 0x1D61 PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D6F DUP5 DUP3 DUP6 ADD PUSH2 0x1AF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1D99 JUMPI PUSH2 0x1D98 PUSH2 0x1D78 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DB6 JUMPI PUSH2 0x1DB5 PUSH2 0x1D7C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1DD2 JUMPI PUSH2 0x1DD1 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1DF1 JUMPI PUSH2 0x1DF0 PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DFE DUP8 DUP3 DUP9 ADD PUSH2 0x1BC6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1E0F DUP8 DUP3 DUP9 ADD PUSH2 0x1C9C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E30 JUMPI PUSH2 0x1E2F PUSH2 0x1A80 JUMP JUMPDEST JUMPDEST PUSH2 0x1E3C DUP8 DUP3 DUP9 ADD PUSH2 0x1D84 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E60 JUMPI PUSH2 0x1E5F PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E6D DUP6 DUP3 DUP7 ADD PUSH2 0x1ACA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E7E DUP6 DUP3 DUP7 ADD PUSH2 0x1ACA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1EBF DUP3 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP PUSH2 0x1ECA DUP4 PUSH2 0x19BB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EE2 JUMPI PUSH2 0x1EE1 PUSH2 0x1E88 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F2C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F3F JUMPI PUSH2 0x1F3E PUSH2 0x1EE8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206D75737420626520746865206D61696C626F78000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F79 PUSH1 0x1A DUP4 PUSH2 0x19F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F84 DUP3 PUSH2 0x1F45 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FA6 DUP2 PUSH2 0x1F6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E646572206D75737420626520747275737465642072656D6F7465000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FE1 PUSH1 0x1D DUP4 PUSH2 0x19F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FEC DUP3 PUSH2 0x1FAD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x200E DUP2 PUSH2 0x1FD5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x201F DUP3 PUSH2 0x1A84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x202F DUP2 PUSH2 0x2015 JUMP JUMPDEST DUP2 EQ PUSH2 0x2039 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x204A DUP2 PUSH2 0x2026 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2066 JUMPI PUSH2 0x2065 PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2073 DUP6 DUP3 DUP7 ADD PUSH2 0x203C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2084 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420612067616D65206D61737465720000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20C2 PUSH1 0x1B DUP4 PUSH2 0x19F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x20CD DUP3 PUSH2 0x208E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20EF DUP2 PUSH2 0x20B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2109 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B79 JUMP JUMPDEST PUSH2 0x2116 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19C4 JUMP JUMPDEST PUSH2 0x2123 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19C4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4D617820737570706C7920726561636865640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x215F PUSH1 0x12 DUP4 PUSH2 0x19F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x216A DUP3 PUSH2 0x212B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x218C DUP2 PUSH2 0x2153 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x219D DUP3 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP PUSH2 0x21A8 DUP4 PUSH2 0x19BB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x21C0 JUMPI PUSH2 0x21BF PUSH2 0x1E88 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4461696C7920726577617264206C696D69742072656163686564000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21FA PUSH1 0x1A DUP4 PUSH2 0x19F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2205 DUP3 PUSH2 0x21C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2227 DUP2 PUSH2 0x21EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265776172642065786365656473206461696C79206C696D6974000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2262 PUSH1 0x1A DUP4 PUSH2 0x19F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x226D DUP3 PUSH2 0x222E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x228F DUP2 PUSH2 0x2256 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD ISZERO PUSH14 0xC1935CBC6599F4F93A5C4CFC20A4 SWAP14 DUP6 0xED MSTORE MSTORE DUP4 PUSH14 0x5B59B6A6E9463C3464736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "400:3182:10:-:0;;;1072:177;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1141:10;1896:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1241:5:9;1231:7;;:15;;;;;;;;;;;;;;;;;;1297:1:1;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1183:17:10::2;1164:16;;:36;;;;;;;;;;;;;;;;;;1237:4;1211:11;:23;1223:10;1211:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1072:177:::0;400:3182;;2912:187:1;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:11:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3482:1;3475:8;;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;400:3182:10:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DAILY_REWARD_LIMIT_1177": {
									"entryPoint": 3243,
									"id": 1177,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_SUPPLY_1170": {
									"entryPoint": 2157,
									"id": 1170,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_702": {
									"entryPoint": 3762,
									"id": 702,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_762": {
									"entryPoint": 5356,
									"id": 762,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_684": {
									"entryPoint": 4398,
									"id": 684,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_96": {
									"entryPoint": 4166,
									"id": 96,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mintReward_1422": {
									"entryPoint": 4590,
									"id": 1422,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_651": {
									"entryPoint": 5899,
									"id": 651,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1007": {
									"entryPoint": 3755,
									"id": 1007,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_1125": {
									"entryPoint": 5258,
									"id": 1125,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_1096": {
									"entryPoint": 4525,
									"id": 1096,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_1109": {
									"entryPoint": 5835,
									"id": 1109,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_810": {
									"entryPoint": 3780,
									"id": 810,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_158": {
									"entryPoint": 5061,
									"id": 158,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_541": {
									"entryPoint": 3926,
									"id": 541,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_1141": {
									"entryPoint": 4301,
									"id": 1141,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1455": {
									"entryPoint": 5819,
									"id": 1455,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_618": {
									"entryPoint": 6050,
									"id": 618,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_968": {
									"entryPoint": 6026,
									"id": 968,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addGameMaster_1333": {
									"entryPoint": 2703,
									"id": 1333,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_438": {
									"entryPoint": 3256,
									"id": 438,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_462": {
									"entryPoint": 1956,
									"id": 462,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_397": {
									"entryPoint": 2565,
									"id": 397,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_934": {
									"entryPoint": 2653,
									"id": 934,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_913": {
									"entryPoint": 2239,
									"id": 913,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_375": {
									"entryPoint": 2149,
									"id": 375,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@gameMasters_1181": {
									"entryPoint": 2210,
									"id": 1181,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getTokenId_1434": {
									"entryPoint": 1778,
									"id": 1434,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@handle_1287": {
									"entryPoint": 2259,
									"id": 1287,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@hyperlaneMailbox_1159": {
									"entryPoint": 1999,
									"id": 1159,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastRewardTime_1185": {
									"entryPoint": 2171,
									"id": 1185,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintReward_1368": {
									"entryPoint": 3050,
									"id": 1368,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_357": {
									"entryPoint": 1812,
									"id": 357,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_79": {
									"entryPoint": 2865,
									"id": 79,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1464": {
									"entryPoint": 2685,
									"id": 1464,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_1084": {
									"entryPoint": 2544,
									"id": 1084,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeGameMaster_1351": {
									"entryPoint": 3386,
									"id": 1351,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_110": {
									"entryPoint": 2634,
									"id": 110,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setMailbox_1315": {
									"entryPoint": 3680,
									"id": 1315,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTrustedRemote_1303": {
									"entryPoint": 2103,
									"id": 1303,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@symbol_366": {
									"entryPoint": 2906,
									"id": 366,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_384": {
									"entryPoint": 1990,
									"id": 384,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_494": {
									"entryPoint": 2057,
									"id": 494,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_138": {
									"entryPoint": 3548,
									"id": 138,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_421": {
									"entryPoint": 3209,
									"id": 421,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@trustedRemotes_1163": {
									"entryPoint": 2036,
									"id": 1163,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unpause_1473": {
									"entryPoint": 2192,
									"id": 1473,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 8252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 7324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 7556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32": {
									"entryPoint": 7110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 8272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint32": {
									"entryPoint": 7130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint32t_bytes32": {
									"entryPoint": 7344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint32t_bytes32t_bytes_calldata_ptr": {
									"entryPoint": 7641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 7182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3871822cd4b8083b4c0a5f06eed00eca61d1c23f87702b5ec1297ed417c8e2c3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_af9de9f3a8f4f335265b3452d42258fa87673e93a1bbcef78a6041ae4a3c581f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b162163e3887bdbccae301c2aa99edec2d2f38be162ca215e0a43764a9164483_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d779633da7aa6afc4bf7e18b64398c6c4ebdad07e65217aa5101b9af110cfa9b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f2d3e2f33b7c9a9059be28c13248e4268f93c7a3fb0753c46110f33b87a85a64_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8438,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 7197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3871822cd4b8083b4c0a5f06eed00eca61d1c23f87702b5ec1297ed417c8e2c3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_af9de9f3a8f4f335265b3452d42258fa87673e93a1bbcef78a6041ae4a3c581f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b162163e3887bdbccae301c2aa99edec2d2f38be162ca215e0a43764a9164483__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d779633da7aa6afc4bf7e18b64398c6c4ebdad07e65217aa5101b9af110cfa9b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2d3e2f33b7c9a9059be28c13248e4268f93c7a3fb0753c46110f33b87a85a64__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 8213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 7173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 7073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6662,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7816,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7912,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 7548,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7544,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 7552,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6784,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6780,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_3871822cd4b8083b4c0a5f06eed00eca61d1c23f87702b5ec1297ed417c8e2c3": {
									"entryPoint": 8750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_af9de9f3a8f4f335265b3452d42258fa87673e93a1bbcef78a6041ae4a3c581f": {
									"entryPoint": 8334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b162163e3887bdbccae301c2aa99edec2d2f38be162ca215e0a43764a9164483": {
									"entryPoint": 8646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7": {
									"entryPoint": 8491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d779633da7aa6afc4bf7e18b64398c6c4ebdad07e65217aa5101b9af110cfa9b": {
									"entryPoint": 8005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f2d3e2f33b7c9a9059be28c13248e4268f93c7a3fb0753c46110f33b87a85a64": {
									"entryPoint": 8109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 8230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 7302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 7088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:18217:11",
										"nodeType": "YulBlock",
										"src": "0:18217:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:11",
													"nodeType": "YulBlock",
													"src": "52:32:11",
													"statements": [
														{
															"nativeSrc": "62:16:11",
															"nodeType": "YulAssignment",
															"src": "62:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:11",
																"nodeType": "YulIdentifier",
																"src": "73:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:11",
														"nodeType": "YulTypedName",
														"src": "34:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:11",
														"nodeType": "YulTypedName",
														"src": "44:7:11",
														"type": ""
													}
												],
												"src": "7:77:11"
											},
											{
												"body": {
													"nativeSrc": "155:53:11",
													"nodeType": "YulBlock",
													"src": "155:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:11"
																		},
																		"nativeSrc": "177:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:11"
																},
																"nativeSrc": "165:37:11",
																"nodeType": "YulFunctionCall",
																"src": "165:37:11"
															},
															"nativeSrc": "165:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:11",
														"nodeType": "YulTypedName",
														"src": "143:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:11",
														"nodeType": "YulTypedName",
														"src": "150:3:11",
														"type": ""
													}
												],
												"src": "90:118:11"
											},
											{
												"body": {
													"nativeSrc": "312:124:11",
													"nodeType": "YulBlock",
													"src": "312:124:11",
													"statements": [
														{
															"nativeSrc": "322:26:11",
															"nodeType": "YulAssignment",
															"src": "322:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:11",
																		"nodeType": "YulLiteral",
																		"src": "345:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:11"
																},
																"nativeSrc": "330:18:11",
																"nodeType": "YulFunctionCall",
																"src": "330:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:11",
																				"nodeType": "YulLiteral",
																				"src": "426:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:11"
																		},
																		"nativeSrc": "411:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:11"
																},
																"nativeSrc": "358:71:11",
																"nodeType": "YulFunctionCall",
																"src": "358:71:11"
															},
															"nativeSrc": "358:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:11",
														"nodeType": "YulTypedName",
														"src": "284:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:11",
														"nodeType": "YulTypedName",
														"src": "296:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:11",
														"nodeType": "YulTypedName",
														"src": "307:4:11",
														"type": ""
													}
												],
												"src": "214:222:11"
											},
											{
												"body": {
													"nativeSrc": "501:40:11",
													"nodeType": "YulBlock",
													"src": "501:40:11",
													"statements": [
														{
															"nativeSrc": "512:22:11",
															"nodeType": "YulAssignment",
															"src": "512:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "528:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "528:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "522:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:11"
																},
																"nativeSrc": "522:12:11",
																"nodeType": "YulFunctionCall",
																"src": "522:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "512:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "512:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "442:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "484:5:11",
														"nodeType": "YulTypedName",
														"src": "484:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "494:6:11",
														"nodeType": "YulTypedName",
														"src": "494:6:11",
														"type": ""
													}
												],
												"src": "442:99:11"
											},
											{
												"body": {
													"nativeSrc": "643:73:11",
													"nodeType": "YulBlock",
													"src": "643:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "660:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "660:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "665:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "665:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "653:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:11"
																},
																"nativeSrc": "653:19:11",
																"nodeType": "YulFunctionCall",
																"src": "653:19:11"
															},
															"nativeSrc": "653:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "653:19:11"
														},
														{
															"nativeSrc": "681:29:11",
															"nodeType": "YulAssignment",
															"src": "681:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "700:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "700:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "705:4:11",
																		"nodeType": "YulLiteral",
																		"src": "705:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "696:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "696:3:11"
																},
																"nativeSrc": "696:14:11",
																"nodeType": "YulFunctionCall",
																"src": "696:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "681:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "681:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "547:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "615:3:11",
														"nodeType": "YulTypedName",
														"src": "615:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "620:6:11",
														"nodeType": "YulTypedName",
														"src": "620:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "631:11:11",
														"nodeType": "YulTypedName",
														"src": "631:11:11",
														"type": ""
													}
												],
												"src": "547:169:11"
											},
											{
												"body": {
													"nativeSrc": "784:77:11",
													"nodeType": "YulBlock",
													"src": "784:77:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "801:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "801:3:11"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "806:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "806:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "811:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "811:6:11"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "795:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "795:5:11"
																},
																"nativeSrc": "795:23:11",
																"nodeType": "YulFunctionCall",
																"src": "795:23:11"
															},
															"nativeSrc": "795:23:11",
															"nodeType": "YulExpressionStatement",
															"src": "795:23:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "838:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "838:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "843:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "843:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "834:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "834:3:11"
																		},
																		"nativeSrc": "834:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "834:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "852:1:11",
																		"nodeType": "YulLiteral",
																		"src": "852:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "827:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "827:6:11"
																},
																"nativeSrc": "827:27:11",
																"nodeType": "YulFunctionCall",
																"src": "827:27:11"
															},
															"nativeSrc": "827:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "827:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "722:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "766:3:11",
														"nodeType": "YulTypedName",
														"src": "766:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "771:3:11",
														"nodeType": "YulTypedName",
														"src": "771:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "776:6:11",
														"nodeType": "YulTypedName",
														"src": "776:6:11",
														"type": ""
													}
												],
												"src": "722:139:11"
											},
											{
												"body": {
													"nativeSrc": "915:54:11",
													"nodeType": "YulBlock",
													"src": "915:54:11",
													"statements": [
														{
															"nativeSrc": "925:38:11",
															"nodeType": "YulAssignment",
															"src": "925:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "943:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "943:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "950:2:11",
																				"nodeType": "YulLiteral",
																				"src": "950:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "939:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:11"
																		},
																		"nativeSrc": "939:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "939:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "959:2:11",
																				"nodeType": "YulLiteral",
																				"src": "959:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "955:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:11"
																		},
																		"nativeSrc": "955:7:11",
																		"nodeType": "YulFunctionCall",
																		"src": "955:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "935:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:11"
																},
																"nativeSrc": "935:28:11",
																"nodeType": "YulFunctionCall",
																"src": "935:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "925:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "925:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "867:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "898:5:11",
														"nodeType": "YulTypedName",
														"src": "898:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "908:6:11",
														"nodeType": "YulTypedName",
														"src": "908:6:11",
														"type": ""
													}
												],
												"src": "867:102:11"
											},
											{
												"body": {
													"nativeSrc": "1067:285:11",
													"nodeType": "YulBlock",
													"src": "1067:285:11",
													"statements": [
														{
															"nativeSrc": "1077:53:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1077:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1124:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1124:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1091:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "1091:32:11"
																},
																"nativeSrc": "1091:39:11",
																"nodeType": "YulFunctionCall",
																"src": "1091:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1081:6:11",
																	"nodeType": "YulTypedName",
																	"src": "1081:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1139:78:11",
															"nodeType": "YulAssignment",
															"src": "1139:78:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1205:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1205:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1210:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1210:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1146:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "1146:58:11"
																},
																"nativeSrc": "1146:71:11",
																"nodeType": "YulFunctionCall",
																"src": "1146:71:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1139:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1139:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1265:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1265:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1272:4:11",
																				"nodeType": "YulLiteral",
																				"src": "1272:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1261:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1261:3:11"
																		},
																		"nativeSrc": "1261:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1261:16:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1279:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1279:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1284:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1284:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1226:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "1226:34:11"
																},
																"nativeSrc": "1226:65:11",
																"nodeType": "YulFunctionCall",
																"src": "1226:65:11"
															},
															"nativeSrc": "1226:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "1226:65:11"
														},
														{
															"nativeSrc": "1300:46:11",
															"nodeType": "YulAssignment",
															"src": "1300:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1311:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1311:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1338:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1338:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1316:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "1316:21:11"
																		},
																		"nativeSrc": "1316:29:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1316:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1307:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1307:3:11"
																},
																"nativeSrc": "1307:39:11",
																"nodeType": "YulFunctionCall",
																"src": "1307:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1300:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1300:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "975:377:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1048:5:11",
														"nodeType": "YulTypedName",
														"src": "1048:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1055:3:11",
														"nodeType": "YulTypedName",
														"src": "1055:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1063:3:11",
														"nodeType": "YulTypedName",
														"src": "1063:3:11",
														"type": ""
													}
												],
												"src": "975:377:11"
											},
											{
												"body": {
													"nativeSrc": "1476:195:11",
													"nodeType": "YulBlock",
													"src": "1476:195:11",
													"statements": [
														{
															"nativeSrc": "1486:26:11",
															"nodeType": "YulAssignment",
															"src": "1486:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1509:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1509:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1494:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1494:3:11"
																},
																"nativeSrc": "1494:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1494:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1486:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1486:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1533:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1533:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1544:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1544:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1529:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1529:3:11"
																		},
																		"nativeSrc": "1529:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1529:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1552:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "1552:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1558:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1558:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1548:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:11"
																		},
																		"nativeSrc": "1548:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1548:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1522:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1522:6:11"
																},
																"nativeSrc": "1522:47:11",
																"nodeType": "YulFunctionCall",
																"src": "1522:47:11"
															},
															"nativeSrc": "1522:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "1522:47:11"
														},
														{
															"nativeSrc": "1578:86:11",
															"nodeType": "YulAssignment",
															"src": "1578:86:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1650:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1650:6:11"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1659:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1659:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1586:63:11",
																	"nodeType": "YulIdentifier",
																	"src": "1586:63:11"
																},
																"nativeSrc": "1586:78:11",
																"nodeType": "YulFunctionCall",
																"src": "1586:78:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1578:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1578:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1358:313:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1448:9:11",
														"nodeType": "YulTypedName",
														"src": "1448:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1460:6:11",
														"nodeType": "YulTypedName",
														"src": "1460:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1471:4:11",
														"nodeType": "YulTypedName",
														"src": "1471:4:11",
														"type": ""
													}
												],
												"src": "1358:313:11"
											},
											{
												"body": {
													"nativeSrc": "1717:35:11",
													"nodeType": "YulBlock",
													"src": "1717:35:11",
													"statements": [
														{
															"nativeSrc": "1727:19:11",
															"nodeType": "YulAssignment",
															"src": "1727:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1743:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1743:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1737:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1737:5:11"
																},
																"nativeSrc": "1737:9:11",
																"nodeType": "YulFunctionCall",
																"src": "1737:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1727:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1727:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1677:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1710:6:11",
														"nodeType": "YulTypedName",
														"src": "1710:6:11",
														"type": ""
													}
												],
												"src": "1677:75:11"
											},
											{
												"body": {
													"nativeSrc": "1847:28:11",
													"nodeType": "YulBlock",
													"src": "1847:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1864:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1864:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1867:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1867:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1857:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1857:6:11"
																},
																"nativeSrc": "1857:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1857:12:11"
															},
															"nativeSrc": "1857:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "1857:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1758:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1758:117:11"
											},
											{
												"body": {
													"nativeSrc": "1970:28:11",
													"nodeType": "YulBlock",
													"src": "1970:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1987:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1987:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1990:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1990:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1980:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:11"
																},
																"nativeSrc": "1980:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1980:12:11"
															},
															"nativeSrc": "1980:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "1980:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1881:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1881:117:11"
											},
											{
												"body": {
													"nativeSrc": "2049:81:11",
													"nodeType": "YulBlock",
													"src": "2049:81:11",
													"statements": [
														{
															"nativeSrc": "2059:65:11",
															"nodeType": "YulAssignment",
															"src": "2059:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2074:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2074:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2081:42:11",
																		"nodeType": "YulLiteral",
																		"src": "2081:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2070:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2070:3:11"
																},
																"nativeSrc": "2070:54:11",
																"nodeType": "YulFunctionCall",
																"src": "2070:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2059:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2059:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2004:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2031:5:11",
														"nodeType": "YulTypedName",
														"src": "2031:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2041:7:11",
														"nodeType": "YulTypedName",
														"src": "2041:7:11",
														"type": ""
													}
												],
												"src": "2004:126:11"
											},
											{
												"body": {
													"nativeSrc": "2181:51:11",
													"nodeType": "YulBlock",
													"src": "2181:51:11",
													"statements": [
														{
															"nativeSrc": "2191:35:11",
															"nodeType": "YulAssignment",
															"src": "2191:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2220:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2220:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2202:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "2202:17:11"
																},
																"nativeSrc": "2202:24:11",
																"nodeType": "YulFunctionCall",
																"src": "2202:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2191:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2191:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2136:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2163:5:11",
														"nodeType": "YulTypedName",
														"src": "2163:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2173:7:11",
														"nodeType": "YulTypedName",
														"src": "2173:7:11",
														"type": ""
													}
												],
												"src": "2136:96:11"
											},
											{
												"body": {
													"nativeSrc": "2281:79:11",
													"nodeType": "YulBlock",
													"src": "2281:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2338:16:11",
																"nodeType": "YulBlock",
																"src": "2338:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2347:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2347:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2350:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2350:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2340:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2340:6:11"
																			},
																			"nativeSrc": "2340:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2340:12:11"
																		},
																		"nativeSrc": "2340:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2304:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2304:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2329:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2329:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2311:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2311:17:11"
																				},
																				"nativeSrc": "2311:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2311:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2301:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2301:2:11"
																		},
																		"nativeSrc": "2301:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2301:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2294:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:11"
																},
																"nativeSrc": "2294:43:11",
																"nodeType": "YulFunctionCall",
																"src": "2294:43:11"
															},
															"nativeSrc": "2291:63:11",
															"nodeType": "YulIf",
															"src": "2291:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2238:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2274:5:11",
														"nodeType": "YulTypedName",
														"src": "2274:5:11",
														"type": ""
													}
												],
												"src": "2238:122:11"
											},
											{
												"body": {
													"nativeSrc": "2418:87:11",
													"nodeType": "YulBlock",
													"src": "2418:87:11",
													"statements": [
														{
															"nativeSrc": "2428:29:11",
															"nodeType": "YulAssignment",
															"src": "2428:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2450:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2450:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2437:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2437:12:11"
																},
																"nativeSrc": "2437:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2437:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2428:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2428:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2493:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2493:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2466:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "2466:26:11"
																},
																"nativeSrc": "2466:33:11",
																"nodeType": "YulFunctionCall",
																"src": "2466:33:11"
															},
															"nativeSrc": "2466:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "2466:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2366:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2396:6:11",
														"nodeType": "YulTypedName",
														"src": "2396:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2404:3:11",
														"nodeType": "YulTypedName",
														"src": "2404:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2412:5:11",
														"nodeType": "YulTypedName",
														"src": "2412:5:11",
														"type": ""
													}
												],
												"src": "2366:139:11"
											},
											{
												"body": {
													"nativeSrc": "2554:79:11",
													"nodeType": "YulBlock",
													"src": "2554:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2611:16:11",
																"nodeType": "YulBlock",
																"src": "2611:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2620:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2620:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2623:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2623:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2613:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2613:6:11"
																			},
																			"nativeSrc": "2613:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2613:12:11"
																		},
																		"nativeSrc": "2613:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2613:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2577:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2577:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2602:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2602:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2584:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2584:17:11"
																				},
																				"nativeSrc": "2584:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2584:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2574:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2574:2:11"
																		},
																		"nativeSrc": "2574:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2574:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2567:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2567:6:11"
																},
																"nativeSrc": "2567:43:11",
																"nodeType": "YulFunctionCall",
																"src": "2567:43:11"
															},
															"nativeSrc": "2564:63:11",
															"nodeType": "YulIf",
															"src": "2564:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2511:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2547:5:11",
														"nodeType": "YulTypedName",
														"src": "2547:5:11",
														"type": ""
													}
												],
												"src": "2511:122:11"
											},
											{
												"body": {
													"nativeSrc": "2691:87:11",
													"nodeType": "YulBlock",
													"src": "2691:87:11",
													"statements": [
														{
															"nativeSrc": "2701:29:11",
															"nodeType": "YulAssignment",
															"src": "2701:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2723:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2723:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2710:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2710:12:11"
																},
																"nativeSrc": "2710:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2710:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2701:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2701:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2766:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2766:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2739:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "2739:26:11"
																},
																"nativeSrc": "2739:33:11",
																"nodeType": "YulFunctionCall",
																"src": "2739:33:11"
															},
															"nativeSrc": "2739:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "2739:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2639:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2669:6:11",
														"nodeType": "YulTypedName",
														"src": "2669:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2677:3:11",
														"nodeType": "YulTypedName",
														"src": "2677:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2685:5:11",
														"nodeType": "YulTypedName",
														"src": "2685:5:11",
														"type": ""
													}
												],
												"src": "2639:139:11"
											},
											{
												"body": {
													"nativeSrc": "2867:391:11",
													"nodeType": "YulBlock",
													"src": "2867:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2913:83:11",
																"nodeType": "YulBlock",
																"src": "2913:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2915:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2915:77:11"
																			},
																			"nativeSrc": "2915:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2915:79:11"
																		},
																		"nativeSrc": "2915:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2915:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2888:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2888:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2897:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2897:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2884:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2884:3:11"
																		},
																		"nativeSrc": "2884:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2884:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2909:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2909:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2880:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2880:3:11"
																},
																"nativeSrc": "2880:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2880:32:11"
															},
															"nativeSrc": "2877:119:11",
															"nodeType": "YulIf",
															"src": "2877:119:11"
														},
														{
															"nativeSrc": "3006:117:11",
															"nodeType": "YulBlock",
															"src": "3006:117:11",
															"statements": [
																{
																	"nativeSrc": "3021:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3021:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3035:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3035:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3025:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3025:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3050:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3050:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3085:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3085:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3096:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3096:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3081:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3081:3:11"
																				},
																				"nativeSrc": "3081:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3081:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3105:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3105:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3060:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3060:20:11"
																		},
																		"nativeSrc": "3060:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3060:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3050:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3050:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3133:118:11",
															"nodeType": "YulBlock",
															"src": "3133:118:11",
															"statements": [
																{
																	"nativeSrc": "3148:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3148:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3162:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3162:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3152:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3152:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3178:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3178:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3213:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3213:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3224:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3224:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3209:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3209:3:11"
																				},
																				"nativeSrc": "3209:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3209:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3233:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3233:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3188:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3188:20:11"
																		},
																		"nativeSrc": "3188:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3188:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3178:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3178:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2784:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2829:9:11",
														"nodeType": "YulTypedName",
														"src": "2829:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2840:7:11",
														"nodeType": "YulTypedName",
														"src": "2840:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2852:6:11",
														"nodeType": "YulTypedName",
														"src": "2852:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2860:6:11",
														"nodeType": "YulTypedName",
														"src": "2860:6:11",
														"type": ""
													}
												],
												"src": "2784:474:11"
											},
											{
												"body": {
													"nativeSrc": "3306:48:11",
													"nodeType": "YulBlock",
													"src": "3306:48:11",
													"statements": [
														{
															"nativeSrc": "3316:32:11",
															"nodeType": "YulAssignment",
															"src": "3316:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3341:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3341:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3334:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3334:6:11"
																		},
																		"nativeSrc": "3334:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3334:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3327:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3327:6:11"
																},
																"nativeSrc": "3327:21:11",
																"nodeType": "YulFunctionCall",
																"src": "3327:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3316:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "3316:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3264:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3288:5:11",
														"nodeType": "YulTypedName",
														"src": "3288:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3298:7:11",
														"nodeType": "YulTypedName",
														"src": "3298:7:11",
														"type": ""
													}
												],
												"src": "3264:90:11"
											},
											{
												"body": {
													"nativeSrc": "3419:50:11",
													"nodeType": "YulBlock",
													"src": "3419:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3436:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3436:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3456:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3456:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3441:14:11",
																			"nodeType": "YulIdentifier",
																			"src": "3441:14:11"
																		},
																		"nativeSrc": "3441:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3441:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3429:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3429:6:11"
																},
																"nativeSrc": "3429:34:11",
																"nodeType": "YulFunctionCall",
																"src": "3429:34:11"
															},
															"nativeSrc": "3429:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "3429:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3360:109:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3407:5:11",
														"nodeType": "YulTypedName",
														"src": "3407:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3414:3:11",
														"nodeType": "YulTypedName",
														"src": "3414:3:11",
														"type": ""
													}
												],
												"src": "3360:109:11"
											},
											{
												"body": {
													"nativeSrc": "3567:118:11",
													"nodeType": "YulBlock",
													"src": "3567:118:11",
													"statements": [
														{
															"nativeSrc": "3577:26:11",
															"nodeType": "YulAssignment",
															"src": "3577:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3589:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3589:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3600:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3600:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3585:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3585:3:11"
																},
																"nativeSrc": "3585:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3585:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3577:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3577:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:11"
																		},
																		"nativeSrc": "3660:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3613:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "3613:37:11"
																},
																"nativeSrc": "3613:65:11",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:11"
															},
															"nativeSrc": "3613:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3475:210:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3539:9:11",
														"nodeType": "YulTypedName",
														"src": "3539:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3551:6:11",
														"nodeType": "YulTypedName",
														"src": "3551:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3562:4:11",
														"nodeType": "YulTypedName",
														"src": "3562:4:11",
														"type": ""
													}
												],
												"src": "3475:210:11"
											},
											{
												"body": {
													"nativeSrc": "3756:53:11",
													"nodeType": "YulBlock",
													"src": "3756:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3773:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3773:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3796:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3796:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3778:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "3778:17:11"
																		},
																		"nativeSrc": "3778:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3778:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3766:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3766:6:11"
																},
																"nativeSrc": "3766:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3766:37:11"
															},
															"nativeSrc": "3766:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "3766:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3691:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3744:5:11",
														"nodeType": "YulTypedName",
														"src": "3744:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3751:3:11",
														"nodeType": "YulTypedName",
														"src": "3751:3:11",
														"type": ""
													}
												],
												"src": "3691:118:11"
											},
											{
												"body": {
													"nativeSrc": "3913:124:11",
													"nodeType": "YulBlock",
													"src": "3913:124:11",
													"statements": [
														{
															"nativeSrc": "3923:26:11",
															"nodeType": "YulAssignment",
															"src": "3923:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3935:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3935:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3946:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3946:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3931:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3931:3:11"
																},
																"nativeSrc": "3931:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3931:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3923:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3923:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4003:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4003:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4016:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4016:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4027:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4012:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4012:3:11"
																		},
																		"nativeSrc": "4012:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4012:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3959:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3959:43:11"
																},
																"nativeSrc": "3959:71:11",
																"nodeType": "YulFunctionCall",
																"src": "3959:71:11"
															},
															"nativeSrc": "3959:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "3959:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3815:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3885:9:11",
														"nodeType": "YulTypedName",
														"src": "3885:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3897:6:11",
														"nodeType": "YulTypedName",
														"src": "3897:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3908:4:11",
														"nodeType": "YulTypedName",
														"src": "3908:4:11",
														"type": ""
													}
												],
												"src": "3815:222:11"
											},
											{
												"body": {
													"nativeSrc": "4087:49:11",
													"nodeType": "YulBlock",
													"src": "4087:49:11",
													"statements": [
														{
															"nativeSrc": "4097:33:11",
															"nodeType": "YulAssignment",
															"src": "4097:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4112:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4112:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4119:10:11",
																		"nodeType": "YulLiteral",
																		"src": "4119:10:11",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4108:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4108:3:11"
																},
																"nativeSrc": "4108:22:11",
																"nodeType": "YulFunctionCall",
																"src": "4108:22:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4097:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "4097:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nativeSrc": "4043:93:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4069:5:11",
														"nodeType": "YulTypedName",
														"src": "4069:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4079:7:11",
														"nodeType": "YulTypedName",
														"src": "4079:7:11",
														"type": ""
													}
												],
												"src": "4043:93:11"
											},
											{
												"body": {
													"nativeSrc": "4184:78:11",
													"nodeType": "YulBlock",
													"src": "4184:78:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4240:16:11",
																"nodeType": "YulBlock",
																"src": "4240:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4252:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4252:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4242:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4242:6:11"
																			},
																			"nativeSrc": "4242:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4242:12:11"
																		},
																		"nativeSrc": "4242:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4242:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4207:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4207:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4231:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4231:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nativeSrc": "4214:16:11",
																					"nodeType": "YulIdentifier",
																					"src": "4214:16:11"
																				},
																				"nativeSrc": "4214:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4214:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4204:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "4204:2:11"
																		},
																		"nativeSrc": "4204:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4204:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4197:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4197:6:11"
																},
																"nativeSrc": "4197:42:11",
																"nodeType": "YulFunctionCall",
																"src": "4197:42:11"
															},
															"nativeSrc": "4194:62:11",
															"nodeType": "YulIf",
															"src": "4194:62:11"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nativeSrc": "4142:120:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4177:5:11",
														"nodeType": "YulTypedName",
														"src": "4177:5:11",
														"type": ""
													}
												],
												"src": "4142:120:11"
											},
											{
												"body": {
													"nativeSrc": "4319:86:11",
													"nodeType": "YulBlock",
													"src": "4319:86:11",
													"statements": [
														{
															"nativeSrc": "4329:29:11",
															"nodeType": "YulAssignment",
															"src": "4329:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4351:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4351:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4338:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "4338:12:11"
																},
																"nativeSrc": "4338:20:11",
																"nodeType": "YulFunctionCall",
																"src": "4338:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4329:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "4329:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4393:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4393:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nativeSrc": "4367:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "4367:25:11"
																},
																"nativeSrc": "4367:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4367:32:11"
															},
															"nativeSrc": "4367:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "4367:32:11"
														}
													]
												},
												"name": "abi_decode_t_uint32",
												"nativeSrc": "4268:137:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4297:6:11",
														"nodeType": "YulTypedName",
														"src": "4297:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4305:3:11",
														"nodeType": "YulTypedName",
														"src": "4305:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4313:5:11",
														"nodeType": "YulTypedName",
														"src": "4313:5:11",
														"type": ""
													}
												],
												"src": "4268:137:11"
											},
											{
												"body": {
													"nativeSrc": "4476:262:11",
													"nodeType": "YulBlock",
													"src": "4476:262:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4522:83:11",
																"nodeType": "YulBlock",
																"src": "4522:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4524:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "4524:77:11"
																			},
																			"nativeSrc": "4524:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4524:79:11"
																		},
																		"nativeSrc": "4524:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4524:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4497:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4497:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4506:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4506:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4493:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4493:3:11"
																		},
																		"nativeSrc": "4493:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4493:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4518:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4518:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4489:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4489:3:11"
																},
																"nativeSrc": "4489:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4489:32:11"
															},
															"nativeSrc": "4486:119:11",
															"nodeType": "YulIf",
															"src": "4486:119:11"
														},
														{
															"nativeSrc": "4615:116:11",
															"nodeType": "YulBlock",
															"src": "4615:116:11",
															"statements": [
																{
																	"nativeSrc": "4630:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4630:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4644:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4644:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4634:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4634:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4659:62:11",
																	"nodeType": "YulAssignment",
																	"src": "4659:62:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4693:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4693:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4704:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4704:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4689:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4689:3:11"
																				},
																				"nativeSrc": "4689:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4689:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4713:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4713:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32",
																			"nativeSrc": "4669:19:11",
																			"nodeType": "YulIdentifier",
																			"src": "4669:19:11"
																		},
																		"nativeSrc": "4669:52:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4669:52:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4659:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4659:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint32",
												"nativeSrc": "4411:327:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4446:9:11",
														"nodeType": "YulTypedName",
														"src": "4446:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4457:7:11",
														"nodeType": "YulTypedName",
														"src": "4457:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4469:6:11",
														"nodeType": "YulTypedName",
														"src": "4469:6:11",
														"type": ""
													}
												],
												"src": "4411:327:11"
											},
											{
												"body": {
													"nativeSrc": "4789:32:11",
													"nodeType": "YulBlock",
													"src": "4789:32:11",
													"statements": [
														{
															"nativeSrc": "4799:16:11",
															"nodeType": "YulAssignment",
															"src": "4799:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "4810:5:11",
																"nodeType": "YulIdentifier",
																"src": "4810:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4799:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "4799:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "4744:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4771:5:11",
														"nodeType": "YulTypedName",
														"src": "4771:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4781:7:11",
														"nodeType": "YulTypedName",
														"src": "4781:7:11",
														"type": ""
													}
												],
												"src": "4744:77:11"
											},
											{
												"body": {
													"nativeSrc": "4892:53:11",
													"nodeType": "YulBlock",
													"src": "4892:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4909:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4909:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4932:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4932:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "4914:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "4914:17:11"
																		},
																		"nativeSrc": "4914:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4914:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4902:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4902:6:11"
																},
																"nativeSrc": "4902:37:11",
																"nodeType": "YulFunctionCall",
																"src": "4902:37:11"
															},
															"nativeSrc": "4902:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "4902:37:11"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "4827:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4880:5:11",
														"nodeType": "YulTypedName",
														"src": "4880:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4887:3:11",
														"nodeType": "YulTypedName",
														"src": "4887:3:11",
														"type": ""
													}
												],
												"src": "4827:118:11"
											},
											{
												"body": {
													"nativeSrc": "5049:124:11",
													"nodeType": "YulBlock",
													"src": "5049:124:11",
													"statements": [
														{
															"nativeSrc": "5059:26:11",
															"nodeType": "YulAssignment",
															"src": "5059:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5071:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5071:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5082:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5082:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5067:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5067:3:11"
																},
																"nativeSrc": "5067:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5067:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5059:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5059:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5139:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5139:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5152:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5152:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5163:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5163:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5148:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5148:3:11"
																		},
																		"nativeSrc": "5148:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5148:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "5095:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "5095:43:11"
																},
																"nativeSrc": "5095:71:11",
																"nodeType": "YulFunctionCall",
																"src": "5095:71:11"
															},
															"nativeSrc": "5095:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "5095:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "4951:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5021:9:11",
														"nodeType": "YulTypedName",
														"src": "5021:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5033:6:11",
														"nodeType": "YulTypedName",
														"src": "5033:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5044:4:11",
														"nodeType": "YulTypedName",
														"src": "5044:4:11",
														"type": ""
													}
												],
												"src": "4951:222:11"
											},
											{
												"body": {
													"nativeSrc": "5279:519:11",
													"nodeType": "YulBlock",
													"src": "5279:519:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5325:83:11",
																"nodeType": "YulBlock",
																"src": "5325:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5327:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5327:77:11"
																			},
																			"nativeSrc": "5327:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5327:79:11"
																		},
																		"nativeSrc": "5327:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5327:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5300:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5300:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5309:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5309:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5296:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5296:3:11"
																		},
																		"nativeSrc": "5296:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5296:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5321:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5321:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5292:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5292:3:11"
																},
																"nativeSrc": "5292:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5292:32:11"
															},
															"nativeSrc": "5289:119:11",
															"nodeType": "YulIf",
															"src": "5289:119:11"
														},
														{
															"nativeSrc": "5418:117:11",
															"nodeType": "YulBlock",
															"src": "5418:117:11",
															"statements": [
																{
																	"nativeSrc": "5433:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5433:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5447:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5447:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5437:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5437:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5462:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5462:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5497:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5497:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5508:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5508:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5493:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5493:3:11"
																				},
																				"nativeSrc": "5493:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5493:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5517:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5517:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5472:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5472:20:11"
																		},
																		"nativeSrc": "5472:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5472:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5462:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5462:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5545:118:11",
															"nodeType": "YulBlock",
															"src": "5545:118:11",
															"statements": [
																{
																	"nativeSrc": "5560:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5560:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5574:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5574:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5564:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5564:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5590:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5590:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5625:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5625:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5636:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5636:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5621:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5621:3:11"
																				},
																				"nativeSrc": "5621:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5621:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5645:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5645:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5600:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5600:20:11"
																		},
																		"nativeSrc": "5600:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5600:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5590:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5590:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5673:118:11",
															"nodeType": "YulBlock",
															"src": "5673:118:11",
															"statements": [
																{
																	"nativeSrc": "5688:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5688:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5702:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5702:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5692:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5692:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5718:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5718:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5753:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5753:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5764:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5764:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5749:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5749:3:11"
																				},
																				"nativeSrc": "5749:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5749:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5773:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5773:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5728:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5728:20:11"
																		},
																		"nativeSrc": "5728:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5728:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5718:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5718:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5179:619:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5233:9:11",
														"nodeType": "YulTypedName",
														"src": "5233:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5244:7:11",
														"nodeType": "YulTypedName",
														"src": "5244:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5256:6:11",
														"nodeType": "YulTypedName",
														"src": "5256:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5264:6:11",
														"nodeType": "YulTypedName",
														"src": "5264:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5272:6:11",
														"nodeType": "YulTypedName",
														"src": "5272:6:11",
														"type": ""
													}
												],
												"src": "5179:619:11"
											},
											{
												"body": {
													"nativeSrc": "5847:79:11",
													"nodeType": "YulBlock",
													"src": "5847:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5904:16:11",
																"nodeType": "YulBlock",
																"src": "5904:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5913:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5913:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5916:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5916:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5906:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5906:6:11"
																			},
																			"nativeSrc": "5906:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5906:12:11"
																		},
																		"nativeSrc": "5906:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5906:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5870:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5870:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5895:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5895:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5877:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "5877:17:11"
																				},
																				"nativeSrc": "5877:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5877:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5867:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "5867:2:11"
																		},
																		"nativeSrc": "5867:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5867:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5860:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5860:6:11"
																},
																"nativeSrc": "5860:43:11",
																"nodeType": "YulFunctionCall",
																"src": "5860:43:11"
															},
															"nativeSrc": "5857:63:11",
															"nodeType": "YulIf",
															"src": "5857:63:11"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5804:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5840:5:11",
														"nodeType": "YulTypedName",
														"src": "5840:5:11",
														"type": ""
													}
												],
												"src": "5804:122:11"
											},
											{
												"body": {
													"nativeSrc": "5984:87:11",
													"nodeType": "YulBlock",
													"src": "5984:87:11",
													"statements": [
														{
															"nativeSrc": "5994:29:11",
															"nodeType": "YulAssignment",
															"src": "5994:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6016:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6016:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6003:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "6003:12:11"
																},
																"nativeSrc": "6003:20:11",
																"nodeType": "YulFunctionCall",
																"src": "6003:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5994:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "5994:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6059:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6059:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "6032:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "6032:26:11"
																},
																"nativeSrc": "6032:33:11",
																"nodeType": "YulFunctionCall",
																"src": "6032:33:11"
															},
															"nativeSrc": "6032:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "6032:33:11"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5932:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5962:6:11",
														"nodeType": "YulTypedName",
														"src": "5962:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5970:3:11",
														"nodeType": "YulTypedName",
														"src": "5970:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5978:5:11",
														"nodeType": "YulTypedName",
														"src": "5978:5:11",
														"type": ""
													}
												],
												"src": "5932:139:11"
											},
											{
												"body": {
													"nativeSrc": "6159:390:11",
													"nodeType": "YulBlock",
													"src": "6159:390:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6205:83:11",
																"nodeType": "YulBlock",
																"src": "6205:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6207:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "6207:77:11"
																			},
																			"nativeSrc": "6207:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6207:79:11"
																		},
																		"nativeSrc": "6207:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6207:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6180:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6180:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6189:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6189:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6176:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6176:3:11"
																		},
																		"nativeSrc": "6176:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6176:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6201:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6201:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6172:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6172:3:11"
																},
																"nativeSrc": "6172:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6172:32:11"
															},
															"nativeSrc": "6169:119:11",
															"nodeType": "YulIf",
															"src": "6169:119:11"
														},
														{
															"nativeSrc": "6298:116:11",
															"nodeType": "YulBlock",
															"src": "6298:116:11",
															"statements": [
																{
																	"nativeSrc": "6313:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6313:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6327:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6327:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6317:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6317:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6342:62:11",
																	"nodeType": "YulAssignment",
																	"src": "6342:62:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6376:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6376:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6387:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6387:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6372:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6372:3:11"
																				},
																				"nativeSrc": "6372:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6372:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6396:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6396:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32",
																			"nativeSrc": "6352:19:11",
																			"nodeType": "YulIdentifier",
																			"src": "6352:19:11"
																		},
																		"nativeSrc": "6352:52:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6352:52:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6342:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6342:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6424:118:11",
															"nodeType": "YulBlock",
															"src": "6424:118:11",
															"statements": [
																{
																	"nativeSrc": "6439:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6439:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6453:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6453:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6443:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6443:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6469:63:11",
																	"nodeType": "YulAssignment",
																	"src": "6469:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6504:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6504:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6515:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6515:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6500:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6500:3:11"
																				},
																				"nativeSrc": "6500:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6500:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6524:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6524:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6479:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "6479:20:11"
																		},
																		"nativeSrc": "6479:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6479:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6469:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6469:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint32t_bytes32",
												"nativeSrc": "6077:472:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6121:9:11",
														"nodeType": "YulTypedName",
														"src": "6121:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6132:7:11",
														"nodeType": "YulTypedName",
														"src": "6132:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6144:6:11",
														"nodeType": "YulTypedName",
														"src": "6144:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6152:6:11",
														"nodeType": "YulTypedName",
														"src": "6152:6:11",
														"type": ""
													}
												],
												"src": "6077:472:11"
											},
											{
												"body": {
													"nativeSrc": "6598:43:11",
													"nodeType": "YulBlock",
													"src": "6598:43:11",
													"statements": [
														{
															"nativeSrc": "6608:27:11",
															"nodeType": "YulAssignment",
															"src": "6608:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6623:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6623:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6630:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6630:4:11",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6619:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6619:3:11"
																},
																"nativeSrc": "6619:16:11",
																"nodeType": "YulFunctionCall",
																"src": "6619:16:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6608:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "6608:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6555:86:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6580:5:11",
														"nodeType": "YulTypedName",
														"src": "6580:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6590:7:11",
														"nodeType": "YulTypedName",
														"src": "6590:7:11",
														"type": ""
													}
												],
												"src": "6555:86:11"
											},
											{
												"body": {
													"nativeSrc": "6708:51:11",
													"nodeType": "YulBlock",
													"src": "6708:51:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6725:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6725:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6746:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6746:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6730:15:11",
																			"nodeType": "YulIdentifier",
																			"src": "6730:15:11"
																		},
																		"nativeSrc": "6730:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6730:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6718:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6718:6:11"
																},
																"nativeSrc": "6718:35:11",
																"nodeType": "YulFunctionCall",
																"src": "6718:35:11"
															},
															"nativeSrc": "6718:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "6718:35:11"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6647:112:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6696:5:11",
														"nodeType": "YulTypedName",
														"src": "6696:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6703:3:11",
														"nodeType": "YulTypedName",
														"src": "6703:3:11",
														"type": ""
													}
												],
												"src": "6647:112:11"
											},
											{
												"body": {
													"nativeSrc": "6859:120:11",
													"nodeType": "YulBlock",
													"src": "6859:120:11",
													"statements": [
														{
															"nativeSrc": "6869:26:11",
															"nodeType": "YulAssignment",
															"src": "6869:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6881:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6881:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6892:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6892:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6877:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6877:3:11"
																},
																"nativeSrc": "6877:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6877:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6869:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6869:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6945:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6945:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6958:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6958:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6969:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6969:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6954:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6954:3:11"
																		},
																		"nativeSrc": "6954:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6954:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6905:39:11",
																	"nodeType": "YulIdentifier",
																	"src": "6905:39:11"
																},
																"nativeSrc": "6905:67:11",
																"nodeType": "YulFunctionCall",
																"src": "6905:67:11"
															},
															"nativeSrc": "6905:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "6905:67:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6765:214:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6831:9:11",
														"nodeType": "YulTypedName",
														"src": "6831:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6843:6:11",
														"nodeType": "YulTypedName",
														"src": "6843:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6854:4:11",
														"nodeType": "YulTypedName",
														"src": "6854:4:11",
														"type": ""
													}
												],
												"src": "6765:214:11"
											},
											{
												"body": {
													"nativeSrc": "7051:263:11",
													"nodeType": "YulBlock",
													"src": "7051:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7097:83:11",
																"nodeType": "YulBlock",
																"src": "7097:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7099:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "7099:77:11"
																			},
																			"nativeSrc": "7099:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7099:79:11"
																		},
																		"nativeSrc": "7099:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7099:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7072:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7072:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7081:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7081:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7068:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7068:3:11"
																		},
																		"nativeSrc": "7068:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7068:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7093:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7093:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7064:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7064:3:11"
																},
																"nativeSrc": "7064:32:11",
																"nodeType": "YulFunctionCall",
																"src": "7064:32:11"
															},
															"nativeSrc": "7061:119:11",
															"nodeType": "YulIf",
															"src": "7061:119:11"
														},
														{
															"nativeSrc": "7190:117:11",
															"nodeType": "YulBlock",
															"src": "7190:117:11",
															"statements": [
																{
																	"nativeSrc": "7205:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7205:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7219:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7219:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7209:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7209:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7234:63:11",
																	"nodeType": "YulAssignment",
																	"src": "7234:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7269:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7269:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7280:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7280:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7265:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7265:3:11"
																				},
																				"nativeSrc": "7265:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7265:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7289:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7289:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7244:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "7244:20:11"
																		},
																		"nativeSrc": "7244:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7244:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7234:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7234:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6985:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7021:9:11",
														"nodeType": "YulTypedName",
														"src": "7021:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7032:7:11",
														"nodeType": "YulTypedName",
														"src": "7032:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7044:6:11",
														"nodeType": "YulTypedName",
														"src": "7044:6:11",
														"type": ""
													}
												],
												"src": "6985:329:11"
											},
											{
												"body": {
													"nativeSrc": "7386:263:11",
													"nodeType": "YulBlock",
													"src": "7386:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7432:83:11",
																"nodeType": "YulBlock",
																"src": "7432:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7434:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "7434:77:11"
																			},
																			"nativeSrc": "7434:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7434:79:11"
																		},
																		"nativeSrc": "7434:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7434:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7407:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7407:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7416:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7416:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7403:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7403:3:11"
																		},
																		"nativeSrc": "7403:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7403:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7428:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7428:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7399:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7399:3:11"
																},
																"nativeSrc": "7399:32:11",
																"nodeType": "YulFunctionCall",
																"src": "7399:32:11"
															},
															"nativeSrc": "7396:119:11",
															"nodeType": "YulIf",
															"src": "7396:119:11"
														},
														{
															"nativeSrc": "7525:117:11",
															"nodeType": "YulBlock",
															"src": "7525:117:11",
															"statements": [
																{
																	"nativeSrc": "7540:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7540:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7554:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7554:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7544:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7544:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7569:63:11",
																	"nodeType": "YulAssignment",
																	"src": "7569:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7604:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7604:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7615:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7615:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7600:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7600:3:11"
																				},
																				"nativeSrc": "7600:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7600:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7624:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7624:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7579:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "7579:20:11"
																		},
																		"nativeSrc": "7579:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7579:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7569:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7569:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "7320:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7356:9:11",
														"nodeType": "YulTypedName",
														"src": "7356:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7367:7:11",
														"nodeType": "YulTypedName",
														"src": "7367:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7379:6:11",
														"nodeType": "YulTypedName",
														"src": "7379:6:11",
														"type": ""
													}
												],
												"src": "7320:329:11"
											},
											{
												"body": {
													"nativeSrc": "7744:28:11",
													"nodeType": "YulBlock",
													"src": "7744:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7761:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7761:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7764:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7764:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7754:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7754:6:11"
																},
																"nativeSrc": "7754:12:11",
																"nodeType": "YulFunctionCall",
																"src": "7754:12:11"
															},
															"nativeSrc": "7754:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "7754:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "7655:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "7655:117:11"
											},
											{
												"body": {
													"nativeSrc": "7867:28:11",
													"nodeType": "YulBlock",
													"src": "7867:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7884:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7884:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7887:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7887:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7877:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7877:6:11"
																},
																"nativeSrc": "7877:12:11",
																"nodeType": "YulFunctionCall",
																"src": "7877:12:11"
															},
															"nativeSrc": "7877:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "7877:12:11"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "7778:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "7778:117:11"
											},
											{
												"body": {
													"nativeSrc": "7990:28:11",
													"nodeType": "YulBlock",
													"src": "7990:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8007:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8007:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8010:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8010:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8000:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8000:6:11"
																},
																"nativeSrc": "8000:12:11",
																"nodeType": "YulFunctionCall",
																"src": "8000:12:11"
															},
															"nativeSrc": "8000:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "8000:12:11"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "7901:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "7901:117:11"
											},
											{
												"body": {
													"nativeSrc": "8111:478:11",
													"nodeType": "YulBlock",
													"src": "8111:478:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "8160:83:11",
																"nodeType": "YulBlock",
																"src": "8160:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8162:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "8162:77:11"
																			},
																			"nativeSrc": "8162:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8162:79:11"
																		},
																		"nativeSrc": "8162:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8162:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8139:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8139:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8147:4:11",
																						"nodeType": "YulLiteral",
																						"src": "8147:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8135:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8135:3:11"
																				},
																				"nativeSrc": "8135:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8135:17:11"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8154:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "8154:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8131:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8131:3:11"
																		},
																		"nativeSrc": "8131:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8131:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8124:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8124:6:11"
																},
																"nativeSrc": "8124:35:11",
																"nodeType": "YulFunctionCall",
																"src": "8124:35:11"
															},
															"nativeSrc": "8121:122:11",
															"nodeType": "YulIf",
															"src": "8121:122:11"
														},
														{
															"nativeSrc": "8252:30:11",
															"nodeType": "YulAssignment",
															"src": "8252:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8275:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8275:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8262:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "8262:12:11"
																},
																"nativeSrc": "8262:20:11",
																"nodeType": "YulFunctionCall",
																"src": "8262:20:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8252:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8252:6:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8325:83:11",
																"nodeType": "YulBlock",
																"src": "8325:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "8327:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "8327:77:11"
																			},
																			"nativeSrc": "8327:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8327:79:11"
																		},
																		"nativeSrc": "8327:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8327:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8297:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8297:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8305:18:11",
																		"nodeType": "YulLiteral",
																		"src": "8305:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8294:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8294:2:11"
																},
																"nativeSrc": "8294:30:11",
																"nodeType": "YulFunctionCall",
																"src": "8294:30:11"
															},
															"nativeSrc": "8291:117:11",
															"nodeType": "YulIf",
															"src": "8291:117:11"
														},
														{
															"nativeSrc": "8417:29:11",
															"nodeType": "YulAssignment",
															"src": "8417:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8433:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8433:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8441:4:11",
																		"nodeType": "YulLiteral",
																		"src": "8441:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8429:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8429:3:11"
																},
																"nativeSrc": "8429:17:11",
																"nodeType": "YulFunctionCall",
																"src": "8429:17:11"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "8417:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "8417:8:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8500:83:11",
																"nodeType": "YulBlock",
																"src": "8500:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "8502:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "8502:77:11"
																			},
																			"nativeSrc": "8502:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8502:79:11"
																		},
																		"nativeSrc": "8502:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8502:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "8465:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "8465:8:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "8479:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8479:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8487:4:11",
																						"nodeType": "YulLiteral",
																						"src": "8487:4:11",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "8475:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8475:3:11"
																				},
																				"nativeSrc": "8475:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8475:17:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8461:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8461:3:11"
																		},
																		"nativeSrc": "8461:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8461:32:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8495:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8495:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8458:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8458:2:11"
																},
																"nativeSrc": "8458:41:11",
																"nodeType": "YulFunctionCall",
																"src": "8458:41:11"
															},
															"nativeSrc": "8455:128:11",
															"nodeType": "YulIf",
															"src": "8455:128:11"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nativeSrc": "8037:552:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8078:6:11",
														"nodeType": "YulTypedName",
														"src": "8078:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8086:3:11",
														"nodeType": "YulTypedName",
														"src": "8086:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "8094:8:11",
														"nodeType": "YulTypedName",
														"src": "8094:8:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8104:6:11",
														"nodeType": "YulTypedName",
														"src": "8104:6:11",
														"type": ""
													}
												],
												"src": "8037:552:11"
											},
											{
												"body": {
													"nativeSrc": "8713:697:11",
													"nodeType": "YulBlock",
													"src": "8713:697:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "8759:83:11",
																"nodeType": "YulBlock",
																"src": "8759:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8761:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "8761:77:11"
																			},
																			"nativeSrc": "8761:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8761:79:11"
																		},
																		"nativeSrc": "8761:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8761:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8734:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8734:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8743:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8743:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8730:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8730:3:11"
																		},
																		"nativeSrc": "8730:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8730:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8755:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8755:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8726:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8726:3:11"
																},
																"nativeSrc": "8726:32:11",
																"nodeType": "YulFunctionCall",
																"src": "8726:32:11"
															},
															"nativeSrc": "8723:119:11",
															"nodeType": "YulIf",
															"src": "8723:119:11"
														},
														{
															"nativeSrc": "8852:116:11",
															"nodeType": "YulBlock",
															"src": "8852:116:11",
															"statements": [
																{
																	"nativeSrc": "8867:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8867:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8881:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8881:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8871:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8871:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8896:62:11",
																	"nodeType": "YulAssignment",
																	"src": "8896:62:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8930:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "8930:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8941:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8941:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8926:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8926:3:11"
																				},
																				"nativeSrc": "8926:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8926:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8950:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8950:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32",
																			"nativeSrc": "8906:19:11",
																			"nodeType": "YulIdentifier",
																			"src": "8906:19:11"
																		},
																		"nativeSrc": "8906:52:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8906:52:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8896:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "8896:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8978:118:11",
															"nodeType": "YulBlock",
															"src": "8978:118:11",
															"statements": [
																{
																	"nativeSrc": "8993:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8993:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9007:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9007:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8997:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8997:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9023:63:11",
																	"nodeType": "YulAssignment",
																	"src": "9023:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9058:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9058:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9069:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9069:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9054:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9054:3:11"
																				},
																				"nativeSrc": "9054:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9054:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9078:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9078:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "9033:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "9033:20:11"
																		},
																		"nativeSrc": "9033:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9033:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9023:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9023:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9106:297:11",
															"nodeType": "YulBlock",
															"src": "9106:297:11",
															"statements": [
																{
																	"nativeSrc": "9121:46:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9121:46:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9152:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9152:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9163:2:11",
																						"nodeType": "YulLiteral",
																						"src": "9163:2:11",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9148:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9148:3:11"
																				},
																				"nativeSrc": "9148:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9148:18:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9135:12:11",
																			"nodeType": "YulIdentifier",
																			"src": "9135:12:11"
																		},
																		"nativeSrc": "9135:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9135:32:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9125:6:11",
																			"nodeType": "YulTypedName",
																			"src": "9125:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9214:83:11",
																		"nodeType": "YulBlock",
																		"src": "9214:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9216:77:11",
																						"nodeType": "YulIdentifier",
																						"src": "9216:77:11"
																					},
																					"nativeSrc": "9216:79:11",
																					"nodeType": "YulFunctionCall",
																					"src": "9216:79:11"
																				},
																				"nativeSrc": "9216:79:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "9216:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9186:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9186:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9194:18:11",
																				"nodeType": "YulLiteral",
																				"src": "9194:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9183:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "9183:2:11"
																		},
																		"nativeSrc": "9183:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9183:30:11"
																	},
																	"nativeSrc": "9180:117:11",
																	"nodeType": "YulIf",
																	"src": "9180:117:11"
																},
																{
																	"nativeSrc": "9311:82:11",
																	"nodeType": "YulAssignment",
																	"src": "9311:82:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9365:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9365:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9376:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9376:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9361:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9361:3:11"
																				},
																				"nativeSrc": "9361:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9361:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9385:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9385:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "9329:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "9329:31:11"
																		},
																		"nativeSrc": "9329:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9329:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9311:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9311:6:11"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "9319:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9319:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint32t_bytes32t_bytes_calldata_ptr",
												"nativeSrc": "8595:815:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8659:9:11",
														"nodeType": "YulTypedName",
														"src": "8659:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8670:7:11",
														"nodeType": "YulTypedName",
														"src": "8670:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8682:6:11",
														"nodeType": "YulTypedName",
														"src": "8682:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8690:6:11",
														"nodeType": "YulTypedName",
														"src": "8690:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8698:6:11",
														"nodeType": "YulTypedName",
														"src": "8698:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8706:6:11",
														"nodeType": "YulTypedName",
														"src": "8706:6:11",
														"type": ""
													}
												],
												"src": "8595:815:11"
											},
											{
												"body": {
													"nativeSrc": "9499:391:11",
													"nodeType": "YulBlock",
													"src": "9499:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "9545:83:11",
																"nodeType": "YulBlock",
																"src": "9545:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9547:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "9547:77:11"
																			},
																			"nativeSrc": "9547:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9547:79:11"
																		},
																		"nativeSrc": "9547:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9547:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9520:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9520:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9529:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9529:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9516:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9516:3:11"
																		},
																		"nativeSrc": "9516:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9516:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9541:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9541:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9512:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9512:3:11"
																},
																"nativeSrc": "9512:32:11",
																"nodeType": "YulFunctionCall",
																"src": "9512:32:11"
															},
															"nativeSrc": "9509:119:11",
															"nodeType": "YulIf",
															"src": "9509:119:11"
														},
														{
															"nativeSrc": "9638:117:11",
															"nodeType": "YulBlock",
															"src": "9638:117:11",
															"statements": [
																{
																	"nativeSrc": "9653:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9653:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9667:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9667:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9657:6:11",
																			"nodeType": "YulTypedName",
																			"src": "9657:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9682:63:11",
																	"nodeType": "YulAssignment",
																	"src": "9682:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9717:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9717:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9728:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9728:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9713:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9713:3:11"
																				},
																				"nativeSrc": "9713:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9713:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9737:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9737:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9692:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "9692:20:11"
																		},
																		"nativeSrc": "9692:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9692:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9682:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9682:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9765:118:11",
															"nodeType": "YulBlock",
															"src": "9765:118:11",
															"statements": [
																{
																	"nativeSrc": "9780:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9780:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9794:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9794:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9784:6:11",
																			"nodeType": "YulTypedName",
																			"src": "9784:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9810:63:11",
																	"nodeType": "YulAssignment",
																	"src": "9810:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9845:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9845:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9856:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9856:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9841:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9841:3:11"
																				},
																				"nativeSrc": "9841:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9841:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9865:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9865:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9820:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "9820:20:11"
																		},
																		"nativeSrc": "9820:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9820:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9810:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9810:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9416:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9461:9:11",
														"nodeType": "YulTypedName",
														"src": "9461:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9472:7:11",
														"nodeType": "YulTypedName",
														"src": "9472:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9484:6:11",
														"nodeType": "YulTypedName",
														"src": "9484:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9492:6:11",
														"nodeType": "YulTypedName",
														"src": "9492:6:11",
														"type": ""
													}
												],
												"src": "9416:474:11"
											},
											{
												"body": {
													"nativeSrc": "9924:152:11",
													"nodeType": "YulBlock",
													"src": "9924:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9941:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9941:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9944:77:11",
																		"nodeType": "YulLiteral",
																		"src": "9944:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9934:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9934:6:11"
																},
																"nativeSrc": "9934:88:11",
																"nodeType": "YulFunctionCall",
																"src": "9934:88:11"
															},
															"nativeSrc": "9934:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "9934:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10038:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10038:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10041:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10041:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10031:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10031:6:11"
																},
																"nativeSrc": "10031:15:11",
																"nodeType": "YulFunctionCall",
																"src": "10031:15:11"
															},
															"nativeSrc": "10031:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "10031:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10062:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10062:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10065:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10065:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10055:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10055:6:11"
																},
																"nativeSrc": "10055:15:11",
																"nodeType": "YulFunctionCall",
																"src": "10055:15:11"
															},
															"nativeSrc": "10055:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "10055:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9896:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "9896:180:11"
											},
											{
												"body": {
													"nativeSrc": "10126:147:11",
													"nodeType": "YulBlock",
													"src": "10126:147:11",
													"statements": [
														{
															"nativeSrc": "10136:25:11",
															"nodeType": "YulAssignment",
															"src": "10136:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10159:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10159:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10141:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "10141:17:11"
																},
																"nativeSrc": "10141:20:11",
																"nodeType": "YulFunctionCall",
																"src": "10141:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10136:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "10136:1:11"
																}
															]
														},
														{
															"nativeSrc": "10170:25:11",
															"nodeType": "YulAssignment",
															"src": "10170:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10193:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10193:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10175:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "10175:17:11"
																},
																"nativeSrc": "10175:20:11",
																"nodeType": "YulFunctionCall",
																"src": "10175:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10170:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "10170:1:11"
																}
															]
														},
														{
															"nativeSrc": "10204:16:11",
															"nodeType": "YulAssignment",
															"src": "10204:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10215:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10215:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10218:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10218:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10211:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10211:3:11"
																},
																"nativeSrc": "10211:9:11",
																"nodeType": "YulFunctionCall",
																"src": "10211:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10204:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10204:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10244:22:11",
																"nodeType": "YulBlock",
																"src": "10244:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10246:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "10246:16:11"
																			},
																			"nativeSrc": "10246:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10246:18:11"
																		},
																		"nativeSrc": "10246:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10246:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10236:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10236:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10239:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10239:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10233:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "10233:2:11"
																},
																"nativeSrc": "10233:10:11",
																"nodeType": "YulFunctionCall",
																"src": "10233:10:11"
															},
															"nativeSrc": "10230:36:11",
															"nodeType": "YulIf",
															"src": "10230:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10082:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10113:1:11",
														"nodeType": "YulTypedName",
														"src": "10113:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10116:1:11",
														"nodeType": "YulTypedName",
														"src": "10116:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10122:3:11",
														"nodeType": "YulTypedName",
														"src": "10122:3:11",
														"type": ""
													}
												],
												"src": "10082:191:11"
											},
											{
												"body": {
													"nativeSrc": "10307:152:11",
													"nodeType": "YulBlock",
													"src": "10307:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10324:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10324:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10327:77:11",
																		"nodeType": "YulLiteral",
																		"src": "10327:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10317:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10317:6:11"
																},
																"nativeSrc": "10317:88:11",
																"nodeType": "YulFunctionCall",
																"src": "10317:88:11"
															},
															"nativeSrc": "10317:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "10317:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10421:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10421:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10424:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10424:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10414:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10414:6:11"
																},
																"nativeSrc": "10414:15:11",
																"nodeType": "YulFunctionCall",
																"src": "10414:15:11"
															},
															"nativeSrc": "10414:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "10414:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10445:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10445:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10448:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10448:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10438:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10438:6:11"
																},
																"nativeSrc": "10438:15:11",
																"nodeType": "YulFunctionCall",
																"src": "10438:15:11"
															},
															"nativeSrc": "10438:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "10438:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10279:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "10279:180:11"
											},
											{
												"body": {
													"nativeSrc": "10516:269:11",
													"nodeType": "YulBlock",
													"src": "10516:269:11",
													"statements": [
														{
															"nativeSrc": "10526:22:11",
															"nodeType": "YulAssignment",
															"src": "10526:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10540:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10540:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10546:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10546:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10536:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10536:3:11"
																},
																"nativeSrc": "10536:12:11",
																"nodeType": "YulFunctionCall",
																"src": "10536:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10526:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10526:6:11"
																}
															]
														},
														{
															"nativeSrc": "10557:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "10557:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10587:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10587:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10593:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10593:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10583:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10583:3:11"
																},
																"nativeSrc": "10583:12:11",
																"nodeType": "YulFunctionCall",
																"src": "10583:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10561:18:11",
																	"nodeType": "YulTypedName",
																	"src": "10561:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10634:51:11",
																"nodeType": "YulBlock",
																"src": "10634:51:11",
																"statements": [
																	{
																		"nativeSrc": "10648:27:11",
																		"nodeType": "YulAssignment",
																		"src": "10648:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10662:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "10662:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10670:4:11",
																					"nodeType": "YulLiteral",
																					"src": "10670:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10658:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "10658:3:11"
																			},
																			"nativeSrc": "10658:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10658:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10648:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10648:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10614:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "10614:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10607:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10607:6:11"
																},
																"nativeSrc": "10607:26:11",
																"nodeType": "YulFunctionCall",
																"src": "10607:26:11"
															},
															"nativeSrc": "10604:81:11",
															"nodeType": "YulIf",
															"src": "10604:81:11"
														},
														{
															"body": {
																"nativeSrc": "10737:42:11",
																"nodeType": "YulBlock",
																"src": "10737:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10751:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "10751:16:11"
																			},
																			"nativeSrc": "10751:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10751:18:11"
																		},
																		"nativeSrc": "10751:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10751:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10701:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "10701:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10724:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10724:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10732:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10732:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10721:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "10721:2:11"
																		},
																		"nativeSrc": "10721:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10721:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10698:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "10698:2:11"
																},
																"nativeSrc": "10698:38:11",
																"nodeType": "YulFunctionCall",
																"src": "10698:38:11"
															},
															"nativeSrc": "10695:84:11",
															"nodeType": "YulIf",
															"src": "10695:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10465:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10500:4:11",
														"nodeType": "YulTypedName",
														"src": "10500:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10509:6:11",
														"nodeType": "YulTypedName",
														"src": "10509:6:11",
														"type": ""
													}
												],
												"src": "10465:320:11"
											},
											{
												"body": {
													"nativeSrc": "10897:70:11",
													"nodeType": "YulBlock",
													"src": "10897:70:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10919:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10919:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10927:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10927:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10915:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10915:3:11"
																		},
																		"nativeSrc": "10915:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10915:14:11"
																	},
																	{
																		"hexValue": "43616c6c6572206d75737420626520746865206d61696c626f78",
																		"kind": "string",
																		"nativeSrc": "10931:28:11",
																		"nodeType": "YulLiteral",
																		"src": "10931:28:11",
																		"type": "",
																		"value": "Caller must be the mailbox"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10908:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10908:6:11"
																},
																"nativeSrc": "10908:52:11",
																"nodeType": "YulFunctionCall",
																"src": "10908:52:11"
															},
															"nativeSrc": "10908:52:11",
															"nodeType": "YulExpressionStatement",
															"src": "10908:52:11"
														}
													]
												},
												"name": "store_literal_in_memory_d779633da7aa6afc4bf7e18b64398c6c4ebdad07e65217aa5101b9af110cfa9b",
												"nativeSrc": "10791:176:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10889:6:11",
														"nodeType": "YulTypedName",
														"src": "10889:6:11",
														"type": ""
													}
												],
												"src": "10791:176:11"
											},
											{
												"body": {
													"nativeSrc": "11119:220:11",
													"nodeType": "YulBlock",
													"src": "11119:220:11",
													"statements": [
														{
															"nativeSrc": "11129:74:11",
															"nodeType": "YulAssignment",
															"src": "11129:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11195:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11195:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11200:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11200:2:11",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11136:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "11136:58:11"
																},
																"nativeSrc": "11136:67:11",
																"nodeType": "YulFunctionCall",
																"src": "11136:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11129:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11129:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11301:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11301:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d779633da7aa6afc4bf7e18b64398c6c4ebdad07e65217aa5101b9af110cfa9b",
																	"nativeSrc": "11212:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "11212:88:11"
																},
																"nativeSrc": "11212:93:11",
																"nodeType": "YulFunctionCall",
																"src": "11212:93:11"
															},
															"nativeSrc": "11212:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "11212:93:11"
														},
														{
															"nativeSrc": "11314:19:11",
															"nodeType": "YulAssignment",
															"src": "11314:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11325:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11325:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11330:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11330:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11321:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11321:3:11"
																},
																"nativeSrc": "11321:12:11",
																"nodeType": "YulFunctionCall",
																"src": "11321:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11314:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11314:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d779633da7aa6afc4bf7e18b64398c6c4ebdad07e65217aa5101b9af110cfa9b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10973:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11107:3:11",
														"nodeType": "YulTypedName",
														"src": "11107:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11115:3:11",
														"nodeType": "YulTypedName",
														"src": "11115:3:11",
														"type": ""
													}
												],
												"src": "10973:366:11"
											},
											{
												"body": {
													"nativeSrc": "11516:248:11",
													"nodeType": "YulBlock",
													"src": "11516:248:11",
													"statements": [
														{
															"nativeSrc": "11526:26:11",
															"nodeType": "YulAssignment",
															"src": "11526:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11538:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11538:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11549:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11549:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11534:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11534:3:11"
																},
																"nativeSrc": "11534:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11534:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11526:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11526:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11573:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11573:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11584:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11584:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11569:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11569:3:11"
																		},
																		"nativeSrc": "11569:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11569:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11592:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "11592:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11598:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11598:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11588:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11588:3:11"
																		},
																		"nativeSrc": "11588:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11588:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11562:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11562:6:11"
																},
																"nativeSrc": "11562:47:11",
																"nodeType": "YulFunctionCall",
																"src": "11562:47:11"
															},
															"nativeSrc": "11562:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "11562:47:11"
														},
														{
															"nativeSrc": "11618:139:11",
															"nodeType": "YulAssignment",
															"src": "11618:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11752:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "11752:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d779633da7aa6afc4bf7e18b64398c6c4ebdad07e65217aa5101b9af110cfa9b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11626:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "11626:124:11"
																},
																"nativeSrc": "11626:131:11",
																"nodeType": "YulFunctionCall",
																"src": "11626:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11618:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11618:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d779633da7aa6afc4bf7e18b64398c6c4ebdad07e65217aa5101b9af110cfa9b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11345:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11496:9:11",
														"nodeType": "YulTypedName",
														"src": "11496:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11511:4:11",
														"nodeType": "YulTypedName",
														"src": "11511:4:11",
														"type": ""
													}
												],
												"src": "11345:419:11"
											},
											{
												"body": {
													"nativeSrc": "11876:73:11",
													"nodeType": "YulBlock",
													"src": "11876:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11898:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "11898:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11906:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11906:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11894:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11894:3:11"
																		},
																		"nativeSrc": "11894:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11894:14:11"
																	},
																	{
																		"hexValue": "53656e646572206d75737420626520747275737465642072656d6f7465",
																		"kind": "string",
																		"nativeSrc": "11910:31:11",
																		"nodeType": "YulLiteral",
																		"src": "11910:31:11",
																		"type": "",
																		"value": "Sender must be trusted remote"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11887:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11887:6:11"
																},
																"nativeSrc": "11887:55:11",
																"nodeType": "YulFunctionCall",
																"src": "11887:55:11"
															},
															"nativeSrc": "11887:55:11",
															"nodeType": "YulExpressionStatement",
															"src": "11887:55:11"
														}
													]
												},
												"name": "store_literal_in_memory_f2d3e2f33b7c9a9059be28c13248e4268f93c7a3fb0753c46110f33b87a85a64",
												"nativeSrc": "11770:179:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11868:6:11",
														"nodeType": "YulTypedName",
														"src": "11868:6:11",
														"type": ""
													}
												],
												"src": "11770:179:11"
											},
											{
												"body": {
													"nativeSrc": "12101:220:11",
													"nodeType": "YulBlock",
													"src": "12101:220:11",
													"statements": [
														{
															"nativeSrc": "12111:74:11",
															"nodeType": "YulAssignment",
															"src": "12111:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12177:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12177:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12182:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12182:2:11",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12118:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "12118:58:11"
																},
																"nativeSrc": "12118:67:11",
																"nodeType": "YulFunctionCall",
																"src": "12118:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12111:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12111:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12283:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12283:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f2d3e2f33b7c9a9059be28c13248e4268f93c7a3fb0753c46110f33b87a85a64",
																	"nativeSrc": "12194:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "12194:88:11"
																},
																"nativeSrc": "12194:93:11",
																"nodeType": "YulFunctionCall",
																"src": "12194:93:11"
															},
															"nativeSrc": "12194:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "12194:93:11"
														},
														{
															"nativeSrc": "12296:19:11",
															"nodeType": "YulAssignment",
															"src": "12296:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12307:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12307:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12312:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12312:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12303:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12303:3:11"
																},
																"nativeSrc": "12303:12:11",
																"nodeType": "YulFunctionCall",
																"src": "12303:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12296:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12296:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f2d3e2f33b7c9a9059be28c13248e4268f93c7a3fb0753c46110f33b87a85a64_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11955:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12089:3:11",
														"nodeType": "YulTypedName",
														"src": "12089:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12097:3:11",
														"nodeType": "YulTypedName",
														"src": "12097:3:11",
														"type": ""
													}
												],
												"src": "11955:366:11"
											},
											{
												"body": {
													"nativeSrc": "12498:248:11",
													"nodeType": "YulBlock",
													"src": "12498:248:11",
													"statements": [
														{
															"nativeSrc": "12508:26:11",
															"nodeType": "YulAssignment",
															"src": "12508:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12520:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12520:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12531:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12531:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12516:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12516:3:11"
																},
																"nativeSrc": "12516:18:11",
																"nodeType": "YulFunctionCall",
																"src": "12516:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12508:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12508:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12555:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12555:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12566:1:11",
																				"nodeType": "YulLiteral",
																				"src": "12566:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12551:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12551:3:11"
																		},
																		"nativeSrc": "12551:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12551:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12574:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "12574:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12580:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12580:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12570:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12570:3:11"
																		},
																		"nativeSrc": "12570:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12570:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12544:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12544:6:11"
																},
																"nativeSrc": "12544:47:11",
																"nodeType": "YulFunctionCall",
																"src": "12544:47:11"
															},
															"nativeSrc": "12544:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "12544:47:11"
														},
														{
															"nativeSrc": "12600:139:11",
															"nodeType": "YulAssignment",
															"src": "12600:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12734:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "12734:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f2d3e2f33b7c9a9059be28c13248e4268f93c7a3fb0753c46110f33b87a85a64_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12608:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "12608:124:11"
																},
																"nativeSrc": "12608:131:11",
																"nodeType": "YulFunctionCall",
																"src": "12608:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12600:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12600:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2d3e2f33b7c9a9059be28c13248e4268f93c7a3fb0753c46110f33b87a85a64__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12327:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12478:9:11",
														"nodeType": "YulTypedName",
														"src": "12478:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12493:4:11",
														"nodeType": "YulTypedName",
														"src": "12493:4:11",
														"type": ""
													}
												],
												"src": "12327:419:11"
											},
											{
												"body": {
													"nativeSrc": "12805:51:11",
													"nodeType": "YulBlock",
													"src": "12805:51:11",
													"statements": [
														{
															"nativeSrc": "12815:35:11",
															"nodeType": "YulAssignment",
															"src": "12815:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12844:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "12844:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "12826:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "12826:17:11"
																},
																"nativeSrc": "12826:24:11",
																"nodeType": "YulFunctionCall",
																"src": "12826:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12815:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "12815:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "12752:104:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12787:5:11",
														"nodeType": "YulTypedName",
														"src": "12787:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12797:7:11",
														"nodeType": "YulTypedName",
														"src": "12797:7:11",
														"type": ""
													}
												],
												"src": "12752:104:11"
											},
											{
												"body": {
													"nativeSrc": "12913:87:11",
													"nodeType": "YulBlock",
													"src": "12913:87:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "12978:16:11",
																"nodeType": "YulBlock",
																"src": "12978:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12987:1:11",
																					"nodeType": "YulLiteral",
																					"src": "12987:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12990:1:11",
																					"nodeType": "YulLiteral",
																					"src": "12990:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12980:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12980:6:11"
																			},
																			"nativeSrc": "12980:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12980:12:11"
																		},
																		"nativeSrc": "12980:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12980:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12936:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "12936:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12969:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "12969:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "12943:25:11",
																					"nodeType": "YulIdentifier",
																					"src": "12943:25:11"
																				},
																				"nativeSrc": "12943:32:11",
																				"nodeType": "YulFunctionCall",
																				"src": "12943:32:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12933:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "12933:2:11"
																		},
																		"nativeSrc": "12933:43:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12933:43:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12926:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12926:6:11"
																},
																"nativeSrc": "12926:51:11",
																"nodeType": "YulFunctionCall",
																"src": "12926:51:11"
															},
															"nativeSrc": "12923:71:11",
															"nodeType": "YulIf",
															"src": "12923:71:11"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "12862:138:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12906:5:11",
														"nodeType": "YulTypedName",
														"src": "12906:5:11",
														"type": ""
													}
												],
												"src": "12862:138:11"
											},
											{
												"body": {
													"nativeSrc": "13066:95:11",
													"nodeType": "YulBlock",
													"src": "13066:95:11",
													"statements": [
														{
															"nativeSrc": "13076:29:11",
															"nodeType": "YulAssignment",
															"src": "13076:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13098:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13098:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "13085:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "13085:12:11"
																},
																"nativeSrc": "13085:20:11",
																"nodeType": "YulFunctionCall",
																"src": "13085:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13076:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "13076:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13149:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "13149:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "13114:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "13114:34:11"
																},
																"nativeSrc": "13114:41:11",
																"nodeType": "YulFunctionCall",
																"src": "13114:41:11"
															},
															"nativeSrc": "13114:41:11",
															"nodeType": "YulExpressionStatement",
															"src": "13114:41:11"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nativeSrc": "13006:155:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13044:6:11",
														"nodeType": "YulTypedName",
														"src": "13044:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13052:3:11",
														"nodeType": "YulTypedName",
														"src": "13052:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13060:5:11",
														"nodeType": "YulTypedName",
														"src": "13060:5:11",
														"type": ""
													}
												],
												"src": "13006:155:11"
											},
											{
												"body": {
													"nativeSrc": "13258:399:11",
													"nodeType": "YulBlock",
													"src": "13258:399:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "13304:83:11",
																"nodeType": "YulBlock",
																"src": "13304:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13306:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "13306:77:11"
																			},
																			"nativeSrc": "13306:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "13306:79:11"
																		},
																		"nativeSrc": "13306:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "13306:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13279:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "13279:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13288:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13288:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13275:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13275:3:11"
																		},
																		"nativeSrc": "13275:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13275:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13300:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13300:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13271:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13271:3:11"
																},
																"nativeSrc": "13271:32:11",
																"nodeType": "YulFunctionCall",
																"src": "13271:32:11"
															},
															"nativeSrc": "13268:119:11",
															"nodeType": "YulIf",
															"src": "13268:119:11"
														},
														{
															"nativeSrc": "13397:125:11",
															"nodeType": "YulBlock",
															"src": "13397:125:11",
															"statements": [
																{
																	"nativeSrc": "13412:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13412:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13426:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13426:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13416:6:11",
																			"nodeType": "YulTypedName",
																			"src": "13416:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13441:71:11",
																	"nodeType": "YulAssignment",
																	"src": "13441:71:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13484:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "13484:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13495:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "13495:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13480:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "13480:3:11"
																				},
																				"nativeSrc": "13480:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "13480:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13504:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "13504:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nativeSrc": "13451:28:11",
																			"nodeType": "YulIdentifier",
																			"src": "13451:28:11"
																		},
																		"nativeSrc": "13451:61:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13451:61:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13441:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "13441:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13532:118:11",
															"nodeType": "YulBlock",
															"src": "13532:118:11",
															"statements": [
																{
																	"nativeSrc": "13547:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13547:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13561:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13561:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13551:6:11",
																			"nodeType": "YulTypedName",
																			"src": "13551:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13577:63:11",
																	"nodeType": "YulAssignment",
																	"src": "13577:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13612:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "13612:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13623:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "13623:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13608:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "13608:3:11"
																				},
																				"nativeSrc": "13608:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "13608:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13632:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "13632:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "13587:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "13587:20:11"
																		},
																		"nativeSrc": "13587:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13587:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13577:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "13577:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nativeSrc": "13167:490:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13220:9:11",
														"nodeType": "YulTypedName",
														"src": "13220:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13231:7:11",
														"nodeType": "YulTypedName",
														"src": "13231:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13243:6:11",
														"nodeType": "YulTypedName",
														"src": "13243:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13251:6:11",
														"nodeType": "YulTypedName",
														"src": "13251:6:11",
														"type": ""
													}
												],
												"src": "13167:490:11"
											},
											{
												"body": {
													"nativeSrc": "13769:71:11",
													"nodeType": "YulBlock",
													"src": "13769:71:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13791:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "13791:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13799:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13799:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13787:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13787:3:11"
																		},
																		"nativeSrc": "13787:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13787:14:11"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f7420612067616d65206d6173746572",
																		"kind": "string",
																		"nativeSrc": "13803:29:11",
																		"nodeType": "YulLiteral",
																		"src": "13803:29:11",
																		"type": "",
																		"value": "Caller is not a game master"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13780:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13780:6:11"
																},
																"nativeSrc": "13780:53:11",
																"nodeType": "YulFunctionCall",
																"src": "13780:53:11"
															},
															"nativeSrc": "13780:53:11",
															"nodeType": "YulExpressionStatement",
															"src": "13780:53:11"
														}
													]
												},
												"name": "store_literal_in_memory_af9de9f3a8f4f335265b3452d42258fa87673e93a1bbcef78a6041ae4a3c581f",
												"nativeSrc": "13663:177:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13761:6:11",
														"nodeType": "YulTypedName",
														"src": "13761:6:11",
														"type": ""
													}
												],
												"src": "13663:177:11"
											},
											{
												"body": {
													"nativeSrc": "13992:220:11",
													"nodeType": "YulBlock",
													"src": "13992:220:11",
													"statements": [
														{
															"nativeSrc": "14002:74:11",
															"nodeType": "YulAssignment",
															"src": "14002:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14068:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14068:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14073:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14073:2:11",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14009:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "14009:58:11"
																},
																"nativeSrc": "14009:67:11",
																"nodeType": "YulFunctionCall",
																"src": "14009:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14002:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14002:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14174:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14174:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_af9de9f3a8f4f335265b3452d42258fa87673e93a1bbcef78a6041ae4a3c581f",
																	"nativeSrc": "14085:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "14085:88:11"
																},
																"nativeSrc": "14085:93:11",
																"nodeType": "YulFunctionCall",
																"src": "14085:93:11"
															},
															"nativeSrc": "14085:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "14085:93:11"
														},
														{
															"nativeSrc": "14187:19:11",
															"nodeType": "YulAssignment",
															"src": "14187:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14198:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14198:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14203:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14203:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14194:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14194:3:11"
																},
																"nativeSrc": "14194:12:11",
																"nodeType": "YulFunctionCall",
																"src": "14194:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14187:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14187:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_af9de9f3a8f4f335265b3452d42258fa87673e93a1bbcef78a6041ae4a3c581f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13846:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13980:3:11",
														"nodeType": "YulTypedName",
														"src": "13980:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13988:3:11",
														"nodeType": "YulTypedName",
														"src": "13988:3:11",
														"type": ""
													}
												],
												"src": "13846:366:11"
											},
											{
												"body": {
													"nativeSrc": "14389:248:11",
													"nodeType": "YulBlock",
													"src": "14389:248:11",
													"statements": [
														{
															"nativeSrc": "14399:26:11",
															"nodeType": "YulAssignment",
															"src": "14399:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14411:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14411:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14422:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14422:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14407:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14407:3:11"
																},
																"nativeSrc": "14407:18:11",
																"nodeType": "YulFunctionCall",
																"src": "14407:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14399:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14399:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14446:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14446:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14457:1:11",
																				"nodeType": "YulLiteral",
																				"src": "14457:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14442:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14442:3:11"
																		},
																		"nativeSrc": "14442:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14442:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14465:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "14465:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14471:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14471:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14461:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14461:3:11"
																		},
																		"nativeSrc": "14461:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14461:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14435:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14435:6:11"
																},
																"nativeSrc": "14435:47:11",
																"nodeType": "YulFunctionCall",
																"src": "14435:47:11"
															},
															"nativeSrc": "14435:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "14435:47:11"
														},
														{
															"nativeSrc": "14491:139:11",
															"nodeType": "YulAssignment",
															"src": "14491:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14625:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "14625:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_af9de9f3a8f4f335265b3452d42258fa87673e93a1bbcef78a6041ae4a3c581f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14499:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "14499:124:11"
																},
																"nativeSrc": "14499:131:11",
																"nodeType": "YulFunctionCall",
																"src": "14499:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14491:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14491:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_af9de9f3a8f4f335265b3452d42258fa87673e93a1bbcef78a6041ae4a3c581f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14218:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14369:9:11",
														"nodeType": "YulTypedName",
														"src": "14369:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14384:4:11",
														"nodeType": "YulTypedName",
														"src": "14384:4:11",
														"type": ""
													}
												],
												"src": "14218:419:11"
											},
											{
												"body": {
													"nativeSrc": "14797:288:11",
													"nodeType": "YulBlock",
													"src": "14797:288:11",
													"statements": [
														{
															"nativeSrc": "14807:26:11",
															"nodeType": "YulAssignment",
															"src": "14807:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14819:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14819:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14830:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14830:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14815:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14815:3:11"
																},
																"nativeSrc": "14815:18:11",
																"nodeType": "YulFunctionCall",
																"src": "14815:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14807:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14807:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14887:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "14887:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14900:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14900:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14911:1:11",
																				"nodeType": "YulLiteral",
																				"src": "14911:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14896:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14896:3:11"
																		},
																		"nativeSrc": "14896:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14896:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14843:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "14843:43:11"
																},
																"nativeSrc": "14843:71:11",
																"nodeType": "YulFunctionCall",
																"src": "14843:71:11"
															},
															"nativeSrc": "14843:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "14843:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14968:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "14968:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14981:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14981:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14992:2:11",
																				"nodeType": "YulLiteral",
																				"src": "14992:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14977:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14977:3:11"
																		},
																		"nativeSrc": "14977:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14977:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14924:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "14924:43:11"
																},
																"nativeSrc": "14924:72:11",
																"nodeType": "YulFunctionCall",
																"src": "14924:72:11"
															},
															"nativeSrc": "14924:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "14924:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15050:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "15050:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15063:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15063:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15074:2:11",
																				"nodeType": "YulLiteral",
																				"src": "15074:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15059:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15059:3:11"
																		},
																		"nativeSrc": "15059:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15059:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15006:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "15006:43:11"
																},
																"nativeSrc": "15006:72:11",
																"nodeType": "YulFunctionCall",
																"src": "15006:72:11"
															},
															"nativeSrc": "15006:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "15006:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14643:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14753:9:11",
														"nodeType": "YulTypedName",
														"src": "14753:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14765:6:11",
														"nodeType": "YulTypedName",
														"src": "14765:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14773:6:11",
														"nodeType": "YulTypedName",
														"src": "14773:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14781:6:11",
														"nodeType": "YulTypedName",
														"src": "14781:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14792:4:11",
														"nodeType": "YulTypedName",
														"src": "14792:4:11",
														"type": ""
													}
												],
												"src": "14643:442:11"
											},
											{
												"body": {
													"nativeSrc": "15197:62:11",
													"nodeType": "YulBlock",
													"src": "15197:62:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15219:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "15219:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15227:1:11",
																				"nodeType": "YulLiteral",
																				"src": "15227:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15215:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15215:3:11"
																		},
																		"nativeSrc": "15215:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15215:14:11"
																	},
																	{
																		"hexValue": "4d617820737570706c792072656163686564",
																		"kind": "string",
																		"nativeSrc": "15231:20:11",
																		"nodeType": "YulLiteral",
																		"src": "15231:20:11",
																		"type": "",
																		"value": "Max supply reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15208:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15208:6:11"
																},
																"nativeSrc": "15208:44:11",
																"nodeType": "YulFunctionCall",
																"src": "15208:44:11"
															},
															"nativeSrc": "15208:44:11",
															"nodeType": "YulExpressionStatement",
															"src": "15208:44:11"
														}
													]
												},
												"name": "store_literal_in_memory_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7",
												"nativeSrc": "15091:168:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15189:6:11",
														"nodeType": "YulTypedName",
														"src": "15189:6:11",
														"type": ""
													}
												],
												"src": "15091:168:11"
											},
											{
												"body": {
													"nativeSrc": "15411:220:11",
													"nodeType": "YulBlock",
													"src": "15411:220:11",
													"statements": [
														{
															"nativeSrc": "15421:74:11",
															"nodeType": "YulAssignment",
															"src": "15421:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15487:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15487:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15492:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15492:2:11",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15428:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "15428:58:11"
																},
																"nativeSrc": "15428:67:11",
																"nodeType": "YulFunctionCall",
																"src": "15428:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15421:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15421:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15593:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15593:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7",
																	"nativeSrc": "15504:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "15504:88:11"
																},
																"nativeSrc": "15504:93:11",
																"nodeType": "YulFunctionCall",
																"src": "15504:93:11"
															},
															"nativeSrc": "15504:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "15504:93:11"
														},
														{
															"nativeSrc": "15606:19:11",
															"nodeType": "YulAssignment",
															"src": "15606:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15617:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15617:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15622:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15622:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15613:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15613:3:11"
																},
																"nativeSrc": "15613:12:11",
																"nodeType": "YulFunctionCall",
																"src": "15613:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15606:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15606:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15265:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15399:3:11",
														"nodeType": "YulTypedName",
														"src": "15399:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15407:3:11",
														"nodeType": "YulTypedName",
														"src": "15407:3:11",
														"type": ""
													}
												],
												"src": "15265:366:11"
											},
											{
												"body": {
													"nativeSrc": "15808:248:11",
													"nodeType": "YulBlock",
													"src": "15808:248:11",
													"statements": [
														{
															"nativeSrc": "15818:26:11",
															"nodeType": "YulAssignment",
															"src": "15818:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15830:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "15830:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15841:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15841:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15826:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15826:3:11"
																},
																"nativeSrc": "15826:18:11",
																"nodeType": "YulFunctionCall",
																"src": "15826:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15818:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15818:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15865:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15865:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15876:1:11",
																				"nodeType": "YulLiteral",
																				"src": "15876:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15861:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15861:3:11"
																		},
																		"nativeSrc": "15861:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15861:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15884:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "15884:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15890:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15890:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15880:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15880:3:11"
																		},
																		"nativeSrc": "15880:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15880:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15854:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15854:6:11"
																},
																"nativeSrc": "15854:47:11",
																"nodeType": "YulFunctionCall",
																"src": "15854:47:11"
															},
															"nativeSrc": "15854:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "15854:47:11"
														},
														{
															"nativeSrc": "15910:139:11",
															"nodeType": "YulAssignment",
															"src": "15910:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16044:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "16044:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15918:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "15918:124:11"
																},
																"nativeSrc": "15918:131:11",
																"nodeType": "YulFunctionCall",
																"src": "15918:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15910:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15910:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15637:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15788:9:11",
														"nodeType": "YulTypedName",
														"src": "15788:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15803:4:11",
														"nodeType": "YulTypedName",
														"src": "15803:4:11",
														"type": ""
													}
												],
												"src": "15637:419:11"
											},
											{
												"body": {
													"nativeSrc": "16107:149:11",
													"nodeType": "YulBlock",
													"src": "16107:149:11",
													"statements": [
														{
															"nativeSrc": "16117:25:11",
															"nodeType": "YulAssignment",
															"src": "16117:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16140:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "16140:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16122:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "16122:17:11"
																},
																"nativeSrc": "16122:20:11",
																"nodeType": "YulFunctionCall",
																"src": "16122:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16117:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "16117:1:11"
																}
															]
														},
														{
															"nativeSrc": "16151:25:11",
															"nodeType": "YulAssignment",
															"src": "16151:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16174:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "16174:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16156:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "16156:17:11"
																},
																"nativeSrc": "16156:20:11",
																"nodeType": "YulFunctionCall",
																"src": "16156:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16151:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "16151:1:11"
																}
															]
														},
														{
															"nativeSrc": "16185:17:11",
															"nodeType": "YulAssignment",
															"src": "16185:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16197:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "16197:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16200:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "16200:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "16193:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16193:3:11"
																},
																"nativeSrc": "16193:9:11",
																"nodeType": "YulFunctionCall",
																"src": "16193:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "16185:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "16185:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16227:22:11",
																"nodeType": "YulBlock",
																"src": "16227:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16229:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "16229:16:11"
																			},
																			"nativeSrc": "16229:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "16229:18:11"
																		},
																		"nativeSrc": "16229:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "16229:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "16218:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "16218:4:11"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "16224:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "16224:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16215:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "16215:2:11"
																},
																"nativeSrc": "16215:11:11",
																"nodeType": "YulFunctionCall",
																"src": "16215:11:11"
															},
															"nativeSrc": "16212:37:11",
															"nodeType": "YulIf",
															"src": "16212:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "16062:194:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16093:1:11",
														"nodeType": "YulTypedName",
														"src": "16093:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16096:1:11",
														"nodeType": "YulTypedName",
														"src": "16096:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "16102:4:11",
														"nodeType": "YulTypedName",
														"src": "16102:4:11",
														"type": ""
													}
												],
												"src": "16062:194:11"
											},
											{
												"body": {
													"nativeSrc": "16368:70:11",
													"nodeType": "YulBlock",
													"src": "16368:70:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16390:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "16390:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16398:1:11",
																				"nodeType": "YulLiteral",
																				"src": "16398:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16386:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16386:3:11"
																		},
																		"nativeSrc": "16386:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16386:14:11"
																	},
																	{
																		"hexValue": "4461696c7920726577617264206c696d69742072656163686564",
																		"kind": "string",
																		"nativeSrc": "16402:28:11",
																		"nodeType": "YulLiteral",
																		"src": "16402:28:11",
																		"type": "",
																		"value": "Daily reward limit reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16379:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "16379:6:11"
																},
																"nativeSrc": "16379:52:11",
																"nodeType": "YulFunctionCall",
																"src": "16379:52:11"
															},
															"nativeSrc": "16379:52:11",
															"nodeType": "YulExpressionStatement",
															"src": "16379:52:11"
														}
													]
												},
												"name": "store_literal_in_memory_b162163e3887bdbccae301c2aa99edec2d2f38be162ca215e0a43764a9164483",
												"nativeSrc": "16262:176:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16360:6:11",
														"nodeType": "YulTypedName",
														"src": "16360:6:11",
														"type": ""
													}
												],
												"src": "16262:176:11"
											},
											{
												"body": {
													"nativeSrc": "16590:220:11",
													"nodeType": "YulBlock",
													"src": "16590:220:11",
													"statements": [
														{
															"nativeSrc": "16600:74:11",
															"nodeType": "YulAssignment",
															"src": "16600:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16666:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16666:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16671:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16671:2:11",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16607:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "16607:58:11"
																},
																"nativeSrc": "16607:67:11",
																"nodeType": "YulFunctionCall",
																"src": "16607:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16600:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16600:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16772:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16772:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b162163e3887bdbccae301c2aa99edec2d2f38be162ca215e0a43764a9164483",
																	"nativeSrc": "16683:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "16683:88:11"
																},
																"nativeSrc": "16683:93:11",
																"nodeType": "YulFunctionCall",
																"src": "16683:93:11"
															},
															"nativeSrc": "16683:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "16683:93:11"
														},
														{
															"nativeSrc": "16785:19:11",
															"nodeType": "YulAssignment",
															"src": "16785:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16796:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16796:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16801:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16801:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16792:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16792:3:11"
																},
																"nativeSrc": "16792:12:11",
																"nodeType": "YulFunctionCall",
																"src": "16792:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16785:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16785:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b162163e3887bdbccae301c2aa99edec2d2f38be162ca215e0a43764a9164483_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16444:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16578:3:11",
														"nodeType": "YulTypedName",
														"src": "16578:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16586:3:11",
														"nodeType": "YulTypedName",
														"src": "16586:3:11",
														"type": ""
													}
												],
												"src": "16444:366:11"
											},
											{
												"body": {
													"nativeSrc": "16987:248:11",
													"nodeType": "YulBlock",
													"src": "16987:248:11",
													"statements": [
														{
															"nativeSrc": "16997:26:11",
															"nodeType": "YulAssignment",
															"src": "16997:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17009:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "17009:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17020:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17020:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17005:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17005:3:11"
																},
																"nativeSrc": "17005:18:11",
																"nodeType": "YulFunctionCall",
																"src": "17005:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16997:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "16997:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17044:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17044:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17055:1:11",
																				"nodeType": "YulLiteral",
																				"src": "17055:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17040:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17040:3:11"
																		},
																		"nativeSrc": "17040:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17040:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17063:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "17063:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17069:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17069:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17059:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17059:3:11"
																		},
																		"nativeSrc": "17059:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17059:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17033:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17033:6:11"
																},
																"nativeSrc": "17033:47:11",
																"nodeType": "YulFunctionCall",
																"src": "17033:47:11"
															},
															"nativeSrc": "17033:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "17033:47:11"
														},
														{
															"nativeSrc": "17089:139:11",
															"nodeType": "YulAssignment",
															"src": "17089:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17223:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "17223:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b162163e3887bdbccae301c2aa99edec2d2f38be162ca215e0a43764a9164483_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17097:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "17097:124:11"
																},
																"nativeSrc": "17097:131:11",
																"nodeType": "YulFunctionCall",
																"src": "17097:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17089:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17089:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b162163e3887bdbccae301c2aa99edec2d2f38be162ca215e0a43764a9164483__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16816:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16967:9:11",
														"nodeType": "YulTypedName",
														"src": "16967:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16982:4:11",
														"nodeType": "YulTypedName",
														"src": "16982:4:11",
														"type": ""
													}
												],
												"src": "16816:419:11"
											},
											{
												"body": {
													"nativeSrc": "17347:70:11",
													"nodeType": "YulBlock",
													"src": "17347:70:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17369:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "17369:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17377:1:11",
																				"nodeType": "YulLiteral",
																				"src": "17377:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17365:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17365:3:11"
																		},
																		"nativeSrc": "17365:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17365:14:11"
																	},
																	{
																		"hexValue": "5265776172642065786365656473206461696c79206c696d6974",
																		"kind": "string",
																		"nativeSrc": "17381:28:11",
																		"nodeType": "YulLiteral",
																		"src": "17381:28:11",
																		"type": "",
																		"value": "Reward exceeds daily limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17358:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17358:6:11"
																},
																"nativeSrc": "17358:52:11",
																"nodeType": "YulFunctionCall",
																"src": "17358:52:11"
															},
															"nativeSrc": "17358:52:11",
															"nodeType": "YulExpressionStatement",
															"src": "17358:52:11"
														}
													]
												},
												"name": "store_literal_in_memory_3871822cd4b8083b4c0a5f06eed00eca61d1c23f87702b5ec1297ed417c8e2c3",
												"nativeSrc": "17241:176:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17339:6:11",
														"nodeType": "YulTypedName",
														"src": "17339:6:11",
														"type": ""
													}
												],
												"src": "17241:176:11"
											},
											{
												"body": {
													"nativeSrc": "17569:220:11",
													"nodeType": "YulBlock",
													"src": "17569:220:11",
													"statements": [
														{
															"nativeSrc": "17579:74:11",
															"nodeType": "YulAssignment",
															"src": "17579:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17645:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17645:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17650:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17650:2:11",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17586:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "17586:58:11"
																},
																"nativeSrc": "17586:67:11",
																"nodeType": "YulFunctionCall",
																"src": "17586:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17579:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17579:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17751:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17751:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3871822cd4b8083b4c0a5f06eed00eca61d1c23f87702b5ec1297ed417c8e2c3",
																	"nativeSrc": "17662:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "17662:88:11"
																},
																"nativeSrc": "17662:93:11",
																"nodeType": "YulFunctionCall",
																"src": "17662:93:11"
															},
															"nativeSrc": "17662:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "17662:93:11"
														},
														{
															"nativeSrc": "17764:19:11",
															"nodeType": "YulAssignment",
															"src": "17764:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17775:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17775:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17780:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17780:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17771:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17771:3:11"
																},
																"nativeSrc": "17771:12:11",
																"nodeType": "YulFunctionCall",
																"src": "17771:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17764:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17764:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3871822cd4b8083b4c0a5f06eed00eca61d1c23f87702b5ec1297ed417c8e2c3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17423:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17557:3:11",
														"nodeType": "YulTypedName",
														"src": "17557:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17565:3:11",
														"nodeType": "YulTypedName",
														"src": "17565:3:11",
														"type": ""
													}
												],
												"src": "17423:366:11"
											},
											{
												"body": {
													"nativeSrc": "17966:248:11",
													"nodeType": "YulBlock",
													"src": "17966:248:11",
													"statements": [
														{
															"nativeSrc": "17976:26:11",
															"nodeType": "YulAssignment",
															"src": "17976:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17988:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "17988:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17999:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17999:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17984:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17984:3:11"
																},
																"nativeSrc": "17984:18:11",
																"nodeType": "YulFunctionCall",
																"src": "17984:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17976:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17976:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18023:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18023:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18034:1:11",
																				"nodeType": "YulLiteral",
																				"src": "18034:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18019:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18019:3:11"
																		},
																		"nativeSrc": "18019:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18019:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18042:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "18042:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18048:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18048:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18038:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18038:3:11"
																		},
																		"nativeSrc": "18038:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18038:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18012:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "18012:6:11"
																},
																"nativeSrc": "18012:47:11",
																"nodeType": "YulFunctionCall",
																"src": "18012:47:11"
															},
															"nativeSrc": "18012:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "18012:47:11"
														},
														{
															"nativeSrc": "18068:139:11",
															"nodeType": "YulAssignment",
															"src": "18068:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18202:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "18202:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3871822cd4b8083b4c0a5f06eed00eca61d1c23f87702b5ec1297ed417c8e2c3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18076:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "18076:124:11"
																},
																"nativeSrc": "18076:131:11",
																"nodeType": "YulFunctionCall",
																"src": "18076:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18068:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "18068:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3871822cd4b8083b4c0a5f06eed00eca61d1c23f87702b5ec1297ed417c8e2c3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17795:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17946:9:11",
														"nodeType": "YulTypedName",
														"src": "17946:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17961:4:11",
														"nodeType": "YulTypedName",
														"src": "17961:4:11",
														"type": ""
													}
												],
												"src": "17795:419:11"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_uint32t_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint32t_bytes32t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_d779633da7aa6afc4bf7e18b64398c6c4ebdad07e65217aa5101b9af110cfa9b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller must be the mailbox\")\n\n    }\n\n    function abi_encode_t_stringliteral_d779633da7aa6afc4bf7e18b64398c6c4ebdad07e65217aa5101b9af110cfa9b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_d779633da7aa6afc4bf7e18b64398c6c4ebdad07e65217aa5101b9af110cfa9b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d779633da7aa6afc4bf7e18b64398c6c4ebdad07e65217aa5101b9af110cfa9b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d779633da7aa6afc4bf7e18b64398c6c4ebdad07e65217aa5101b9af110cfa9b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f2d3e2f33b7c9a9059be28c13248e4268f93c7a3fb0753c46110f33b87a85a64(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sender must be trusted remote\")\n\n    }\n\n    function abi_encode_t_stringliteral_f2d3e2f33b7c9a9059be28c13248e4268f93c7a3fb0753c46110f33b87a85a64_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_f2d3e2f33b7c9a9059be28c13248e4268f93c7a3fb0753c46110f33b87a85a64(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f2d3e2f33b7c9a9059be28c13248e4268f93c7a3fb0753c46110f33b87a85a64__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f2d3e2f33b7c9a9059be28c13248e4268f93c7a3fb0753c46110f33b87a85a64_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_af9de9f3a8f4f335265b3452d42258fa87673e93a1bbcef78a6041ae4a3c581f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not a game master\")\n\n    }\n\n    function abi_encode_t_stringliteral_af9de9f3a8f4f335265b3452d42258fa87673e93a1bbcef78a6041ae4a3c581f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_af9de9f3a8f4f335265b3452d42258fa87673e93a1bbcef78a6041ae4a3c581f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_af9de9f3a8f4f335265b3452d42258fa87673e93a1bbcef78a6041ae4a3c581f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_af9de9f3a8f4f335265b3452d42258fa87673e93a1bbcef78a6041ae4a3c581f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Max supply reached\")\n\n    }\n\n    function abi_encode_t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_b162163e3887bdbccae301c2aa99edec2d2f38be162ca215e0a43764a9164483(memPtr) {\n\n        mstore(add(memPtr, 0), \"Daily reward limit reached\")\n\n    }\n\n    function abi_encode_t_stringliteral_b162163e3887bdbccae301c2aa99edec2d2f38be162ca215e0a43764a9164483_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_b162163e3887bdbccae301c2aa99edec2d2f38be162ca215e0a43764a9164483(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b162163e3887bdbccae301c2aa99edec2d2f38be162ca215e0a43764a9164483__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b162163e3887bdbccae301c2aa99edec2d2f38be162ca215e0a43764a9164483_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3871822cd4b8083b4c0a5f06eed00eca61d1c23f87702b5ec1297ed417c8e2c3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reward exceeds daily limit\")\n\n    }\n\n    function abi_encode_t_stringliteral_3871822cd4b8083b4c0a5f06eed00eca61d1c23f87702b5ec1297ed417c8e2c3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_3871822cd4b8083b4c0a5f06eed00eca61d1c23f87702b5ec1297ed417c8e2c3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3871822cd4b8083b4c0a5f06eed00eca61d1c23f87702b5ec1297ed417c8e2c3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3871822cd4b8083b4c0a5f06eed00eca61d1c23f87702b5ec1297ed417c8e2c3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101cc575f3560e01c80635c975abb116100f657806395d89b4111610094578063dd62ed3e11610063578063dd62ed3e1461063e578063dfca5ce31461067a578063f2fde38b146106a2578063f3c61d6b146106ca576101cc565b806395d89b41146105865780639a49090e146105b0578063a9059cbb146105d8578063bca1229914610614576101cc565b806379cc6790116100d057806379cc6790146104f65780638456cb591461051e5780638b1c7b10146105345780638da5cb5b1461055c576101cc565b80635c975abb1461047a57806370a08231146104a4578063715018a6146104e0576101cc565b80632bda3e0b1161016e5780633f4ba83a1161013d5780633f4ba83a146103e45780634080d640146103fa57806342966c681461043657806356d5d4751461045e576101cc565b80632bda3e0b1461032c578063313ce5671461035457806332cb6b0c1461037e5780633b5d441e146103a8576101cc565b806318160ddd116101aa57806318160ddd146102605780631a6e4db41461028a5780631d187c50146102b457806323b872dd146102f0576101cc565b8063010a38f5146101d057806306fdde03146101fa578063095ea7b314610224575b5f5ffd5b3480156101db575f5ffd5b506101e46106f2565b6040516101f191906119d3565b60405180910390f35b348015610205575f5ffd5b5061020e610714565b60405161021b9190611a5c565b60405180910390f35b34801561022f575f5ffd5b5061024a60048036038101906102459190611b08565b6107a4565b6040516102579190611b60565b60405180910390f35b34801561026b575f5ffd5b506102746107c6565b60405161028191906119d3565b60405180910390f35b348015610295575f5ffd5b5061029e6107cf565b6040516102ab9190611b88565b60405180910390f35b3480156102bf575f5ffd5b506102da60048036038101906102d59190611bda565b6107f4565b6040516102e79190611c1d565b60405180910390f35b3480156102fb575f5ffd5b5061031660048036038101906103119190611c36565b610809565b6040516103239190611b60565b60405180910390f35b348015610337575f5ffd5b50610352600480360381019061034d9190611cb0565b610837565b005b34801561035f575f5ffd5b50610368610865565b6040516103759190611d09565b60405180910390f35b348015610389575f5ffd5b5061039261086d565b60405161039f91906119d3565b60405180910390f35b3480156103b3575f5ffd5b506103ce60048036038101906103c99190611d22565b61087b565b6040516103db91906119d3565b60405180910390f35b3480156103ef575f5ffd5b506103f8610890565b005b348015610405575f5ffd5b50610420600480360381019061041b9190611d22565b6108a2565b60405161042d9190611b60565b60405180910390f35b348015610441575f5ffd5b5061045c60048036038101906104579190611d4d565b6108bf565b005b61047860048036038101906104739190611dd9565b6108d3565b005b348015610485575f5ffd5b5061048e6109f0565b60405161049b9190611b60565b60405180910390f35b3480156104af575f5ffd5b506104ca60048036038101906104c59190611d22565b610a05565b6040516104d791906119d3565b60405180910390f35b3480156104eb575f5ffd5b506104f4610a4a565b005b348015610501575f5ffd5b5061051c60048036038101906105179190611b08565b610a5d565b005b348015610529575f5ffd5b50610532610a7d565b005b34801561053f575f5ffd5b5061055a60048036038101906105559190611d22565b610a8f565b005b348015610567575f5ffd5b50610570610b31565b60405161057d9190611b88565b60405180910390f35b348015610591575f5ffd5b5061059a610b5a565b6040516105a79190611a5c565b60405180910390f35b3480156105bb575f5ffd5b506105d660048036038101906105d19190611b08565b610bea565b005b3480156105e3575f5ffd5b506105fe60048036038101906105f99190611b08565b610c89565b60405161060b9190611b60565b60405180910390f35b34801561061f575f5ffd5b50610628610cab565b60405161063591906119d3565b60405180910390f35b348015610649575f5ffd5b50610664600480360381019061065f9190611e4a565b610cb8565b60405161067191906119d3565b60405180910390f35b348015610685575f5ffd5b506106a0600480360381019061069b9190611d22565b610d3a565b005b3480156106ad575f5ffd5b506106c860048036038101906106c39190611d22565b610ddc565b005b3480156106d5575f5ffd5b506106f060048036038101906106eb9190611d22565b610e60565b005b5f6001600a5f8282546107059190611eb5565b92505081905550600a54905090565b60606003805461072390611f15565b80601f016020809104026020016040519081016040528092919081815260200182805461074f90611f15565b801561079a5780601f106107715761010080835404028352916020019161079a565b820191905f5260205f20905b81548152906001019060200180831161077d57829003601f168201915b5050505050905090565b5f5f6107ae610eab565b90506107bb818585610eb2565b600191505092915050565b5f600254905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6007602052805f5260405f205f915090505481565b5f5f610813610eab565b9050610820858285610ec4565b61082b858585610f56565b60019150509392505050565b61083f611046565b8060075f8463ffffffff1663ffffffff1681526020019081526020015f20819055505050565b5f6012905090565b69d3c21bcecceda100000081565b6009602052805f5260405f205f915090505481565b610898611046565b6108a06110cd565b565b6008602052805f5260405f205f915054906101000a900460ff1681565b6108d06108ca610eab565b8261112e565b50565b6108db6111ad565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461096a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096190611f8f565b60405180910390fd5b60075f8563ffffffff1663ffffffff1681526020019081526020015f205483146109c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c090611ff7565b60405180910390fd5b5f5f83838101906109da9190612050565b915091506109e882826111ee565b505050505050565b5f60055f9054906101000a900460ff16905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610a52611046565b610a5b5f6113c5565b565b610a6f82610a69610eab565b83610ec4565b610a79828261112e565b5050565b610a85611046565b610a8d61148a565b565b610a97611046565b600160085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167e90e5d96e2f61f1fa8b5c535ec11045a07288f1ee285325f85caf8379789e2460405160405180910390a250565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610b6990611f15565b80601f0160208091040260200160405190810160405280929190818152602001828054610b9590611f15565b8015610be05780601f10610bb757610100808354040283529160200191610be0565b820191905f5260205f20905b815481529060010190602001808311610bc357829003601f168201915b5050505050905090565b60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610c73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6a906120d8565b60405180910390fd5b610c7b6111ad565b610c8582826111ee565b5050565b5f5f610c93610eab565b9050610ca0818585610f56565b600191505092915050565b683635c9adc5dea0000081565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610d42611046565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f22c7af3157a517d9d910083d0cd16646c9204f9d52824a23558c7d97d796d63860405160405180910390a250565b610de4611046565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e54575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e4b9190611b88565b60405180910390fd5b610e5d816113c5565b50565b610e68611046565b8060065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f33905090565b610ebf83838360016114ec565b505050565b5f610ecf8484610cb8565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610f505781811015610f41578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610f38939291906120f6565b60405180910390fd5b610f4f84848484035f6114ec565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fc6575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610fbd9190611b88565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611036575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161102d9190611b88565b60405180910390fd5b6110418383836116bb565b505050565b61104e610eab565b73ffffffffffffffffffffffffffffffffffffffff1661106c610b31565b73ffffffffffffffffffffffffffffffffffffffff16146110cb5761108f610eab565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016110c29190611b88565b60405180910390fd5b565b6110d56116cb565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611117610eab565b6040516111249190611b88565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361119e575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016111959190611b88565b60405180910390fd5b6111a9825f836116bb565b5050565b6111b56109f0565b156111ec576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b69d3c21bcecceda1000000816112026107c6565b61120c9190611eb5565b111561124d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124490612175565b60405180910390fd5b6201518060095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20544261129a9190612193565b10156112db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d290612210565b60405180910390fd5b683635c9adc5dea00000811115611327576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131e90612278565b60405180910390fd5b611331828261170b565b4260095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff167fe8ea3d4dd0a2eaaf3f7532ad391255544f8a4bcf78f850bbff61d5bac9f77552826040516113b991906119d3565b60405180910390a25050565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6114926111ad565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586114d5610eab565b6040516114e29190611b88565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361155c575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016115539190611b88565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115cc575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016115c39190611b88565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156116b5578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516116ac91906119d3565b60405180910390a35b50505050565b6116c683838361178a565b505050565b6116d36109f0565b611709576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361177b575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016117729190611b88565b60405180910390fd5b6117865f83836116bb565b5050565b6117926111ad565b61179d8383836117a2565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117f2578060025f8282546117e69190611eb5565b925050819055506118c0565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561187b578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611872939291906120f6565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611907578060025f8282540392505081905550611951565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516119ae91906119d3565b60405180910390a3505050565b5f819050919050565b6119cd816119bb565b82525050565b5f6020820190506119e65f8301846119c4565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611a2e826119ec565b611a3881856119f6565b9350611a48818560208601611a06565b611a5181611a14565b840191505092915050565b5f6020820190508181035f830152611a748184611a24565b905092915050565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611aad82611a84565b9050919050565b611abd81611aa3565b8114611ac7575f5ffd5b50565b5f81359050611ad881611ab4565b92915050565b611ae7816119bb565b8114611af1575f5ffd5b50565b5f81359050611b0281611ade565b92915050565b5f5f60408385031215611b1e57611b1d611a7c565b5b5f611b2b85828601611aca565b9250506020611b3c85828601611af4565b9150509250929050565b5f8115159050919050565b611b5a81611b46565b82525050565b5f602082019050611b735f830184611b51565b92915050565b611b8281611aa3565b82525050565b5f602082019050611b9b5f830184611b79565b92915050565b5f63ffffffff82169050919050565b611bb981611ba1565b8114611bc3575f5ffd5b50565b5f81359050611bd481611bb0565b92915050565b5f60208284031215611bef57611bee611a7c565b5b5f611bfc84828501611bc6565b91505092915050565b5f819050919050565b611c1781611c05565b82525050565b5f602082019050611c305f830184611c0e565b92915050565b5f5f5f60608486031215611c4d57611c4c611a7c565b5b5f611c5a86828701611aca565b9350506020611c6b86828701611aca565b9250506040611c7c86828701611af4565b9150509250925092565b611c8f81611c05565b8114611c99575f5ffd5b50565b5f81359050611caa81611c86565b92915050565b5f5f60408385031215611cc657611cc5611a7c565b5b5f611cd385828601611bc6565b9250506020611ce485828601611c9c565b9150509250929050565b5f60ff82169050919050565b611d0381611cee565b82525050565b5f602082019050611d1c5f830184611cfa565b92915050565b5f60208284031215611d3757611d36611a7c565b5b5f611d4484828501611aca565b91505092915050565b5f60208284031215611d6257611d61611a7c565b5b5f611d6f84828501611af4565b91505092915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112611d9957611d98611d78565b5b8235905067ffffffffffffffff811115611db657611db5611d7c565b5b602083019150836001820283011115611dd257611dd1611d80565b5b9250929050565b5f5f5f5f60608587031215611df157611df0611a7c565b5b5f611dfe87828801611bc6565b9450506020611e0f87828801611c9c565b935050604085013567ffffffffffffffff811115611e3057611e2f611a80565b5b611e3c87828801611d84565b925092505092959194509250565b5f5f60408385031215611e6057611e5f611a7c565b5b5f611e6d85828601611aca565b9250506020611e7e85828601611aca565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611ebf826119bb565b9150611eca836119bb565b9250828201905080821115611ee257611ee1611e88565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611f2c57607f821691505b602082108103611f3f57611f3e611ee8565b5b50919050565b7f43616c6c6572206d75737420626520746865206d61696c626f780000000000005f82015250565b5f611f79601a836119f6565b9150611f8482611f45565b602082019050919050565b5f6020820190508181035f830152611fa681611f6d565b9050919050565b7f53656e646572206d75737420626520747275737465642072656d6f74650000005f82015250565b5f611fe1601d836119f6565b9150611fec82611fad565b602082019050919050565b5f6020820190508181035f83015261200e81611fd5565b9050919050565b5f61201f82611a84565b9050919050565b61202f81612015565b8114612039575f5ffd5b50565b5f8135905061204a81612026565b92915050565b5f5f6040838503121561206657612065611a7c565b5b5f6120738582860161203c565b925050602061208485828601611af4565b9150509250929050565b7f43616c6c6572206973206e6f7420612067616d65206d617374657200000000005f82015250565b5f6120c2601b836119f6565b91506120cd8261208e565b602082019050919050565b5f6020820190508181035f8301526120ef816120b6565b9050919050565b5f6060820190506121095f830186611b79565b61211660208301856119c4565b61212360408301846119c4565b949350505050565b7f4d617820737570706c79207265616368656400000000000000000000000000005f82015250565b5f61215f6012836119f6565b915061216a8261212b565b602082019050919050565b5f6020820190508181035f83015261218c81612153565b9050919050565b5f61219d826119bb565b91506121a8836119bb565b92508282039050818111156121c0576121bf611e88565b5b92915050565b7f4461696c7920726577617264206c696d697420726561636865640000000000005f82015250565b5f6121fa601a836119f6565b9150612205826121c6565b602082019050919050565b5f6020820190508181035f830152612227816121ee565b9050919050565b7f5265776172642065786365656473206461696c79206c696d69740000000000005f82015250565b5f612262601a836119f6565b915061226d8261222e565b602082019050919050565b5f6020820190508181035f83015261228f81612256565b905091905056fea264697066735822122001156dc1935cbc6599f4f93a5c4cfc20a49d85ed5252836d5b59b6a6e9463c3464736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xF6 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0xDFCA5CE3 EQ PUSH2 0x67A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6A2 JUMPI DUP1 PUSH4 0xF3C61D6B EQ PUSH2 0x6CA JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x586 JUMPI DUP1 PUSH4 0x9A49090E EQ PUSH2 0x5B0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5D8 JUMPI DUP1 PUSH4 0xBCA12299 EQ PUSH2 0x614 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x79CC6790 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0x8B1C7B10 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x55C JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4E0 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x2BDA3E0B GT PUSH2 0x16E JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0x4080D640 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x56D5D475 EQ PUSH2 0x45E JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x2BDA3E0B EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x3B5D441E EQ PUSH2 0x3A8 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1AA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x1A6E4DB4 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x1D187C50 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2F0 JUMPI PUSH2 0x1CC JUMP JUMPDEST DUP1 PUSH4 0x10A38F5 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x224 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x20E PUSH2 0x714 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1B08 JUMP JUMPDEST PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x274 PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x1C36 JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x1CB0 JUMP JUMPDEST PUSH2 0x837 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x368 PUSH2 0x865 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x1D09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x389 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x392 PUSH2 0x86D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3F8 PUSH2 0x890 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x405 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x420 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41B SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH2 0x8A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x441 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x45C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x1D4D JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x478 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x1DD9 JUMP JUMPDEST PUSH2 0x8D3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x485 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x48E PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49B SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4F4 PUSH2 0xA4A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x501 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x51C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x517 SWAP2 SWAP1 PUSH2 0x1B08 JUMP JUMPDEST PUSH2 0xA5D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x529 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x532 PUSH2 0xA7D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x55A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x555 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH2 0xA8F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x567 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x570 PUSH2 0xB31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57D SWAP2 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x591 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x59A PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A7 SWAP2 SWAP1 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x1B08 JUMP JUMPDEST PUSH2 0xBEA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F9 SWAP2 SWAP1 PUSH2 0x1B08 JUMP JUMPDEST PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x628 PUSH2 0xCAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x635 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x649 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x664 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65F SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST PUSH2 0xCB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x671 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x685 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x6A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69B SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH2 0xD3A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x6C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C3 SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH2 0xDDC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x6F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6EB SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH2 0xE60 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0xA PUSH0 DUP3 DUP3 SLOAD PUSH2 0x705 SWAP2 SWAP1 PUSH2 0x1EB5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xA SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x723 SWAP1 PUSH2 0x1F15 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x74F SWAP1 PUSH2 0x1F15 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x79A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x771 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x79A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x77D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7AE PUSH2 0xEAB JUMP JUMPDEST SWAP1 POP PUSH2 0x7BB DUP2 DUP6 DUP6 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x813 PUSH2 0xEAB JUMP JUMPDEST SWAP1 POP PUSH2 0x820 DUP6 DUP3 DUP6 PUSH2 0xEC4 JUMP JUMPDEST PUSH2 0x82B DUP6 DUP6 DUP6 PUSH2 0xF56 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x83F PUSH2 0x1046 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP5 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x898 PUSH2 0x1046 JUMP JUMPDEST PUSH2 0x8A0 PUSH2 0x10CD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x8D0 PUSH2 0x8CA PUSH2 0xEAB JUMP JUMPDEST DUP3 PUSH2 0x112E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x8DB PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x96A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x961 SWAP1 PUSH2 0x1F8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 DUP6 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP4 EQ PUSH2 0x9C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C0 SWAP1 PUSH2 0x1FF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 DUP4 DUP4 DUP2 ADD SWAP1 PUSH2 0x9DA SWAP2 SWAP1 PUSH2 0x2050 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x9E8 DUP3 DUP3 PUSH2 0x11EE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA52 PUSH2 0x1046 JUMP JUMPDEST PUSH2 0xA5B PUSH0 PUSH2 0x13C5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA6F DUP3 PUSH2 0xA69 PUSH2 0xEAB JUMP JUMPDEST DUP4 PUSH2 0xEC4 JUMP JUMPDEST PUSH2 0xA79 DUP3 DUP3 PUSH2 0x112E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA85 PUSH2 0x1046 JUMP JUMPDEST PUSH2 0xA8D PUSH2 0x148A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA97 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH31 0x90E5D96E2F61F1FA8B5C535EC11045A07288F1EE285325F85CAF8379789E24 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xB69 SWAP1 PUSH2 0x1F15 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB95 SWAP1 PUSH2 0x1F15 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBE0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBB7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBE0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBC3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6A SWAP1 PUSH2 0x20D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC7B PUSH2 0x11AD JUMP JUMPDEST PUSH2 0xC85 DUP3 DUP3 PUSH2 0x11EE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xC93 PUSH2 0xEAB JUMP JUMPDEST SWAP1 POP PUSH2 0xCA0 DUP2 DUP6 DUP6 PUSH2 0xF56 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH9 0x3635C9ADC5DEA00000 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD42 PUSH2 0x1046 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x22C7AF3157A517D9D910083D0CD16646C9204F9D52824A23558C7D97D796D638 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xDE4 PUSH2 0x1046 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE54 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4B SWAP2 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE5D DUP2 PUSH2 0x13C5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE68 PUSH2 0x1046 JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEBF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x14EC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xECF DUP5 DUP5 PUSH2 0xCB8 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xF50 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xF41 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF38 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF4F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x14EC JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFC6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBD SWAP2 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1036 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102D SWAP2 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1041 DUP4 DUP4 DUP4 PUSH2 0x16BB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x104E PUSH2 0xEAB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x106C PUSH2 0xB31 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10CB JUMPI PUSH2 0x108F PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C2 SWAP2 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x10D5 PUSH2 0x16CB JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1117 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1124 SWAP2 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x119E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1195 SWAP2 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11A9 DUP3 PUSH0 DUP4 PUSH2 0x16BB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x11B5 PUSH2 0x9F0 JUMP JUMPDEST ISZERO PUSH2 0x11EC JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 PUSH2 0x1202 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x120C SWAP2 SWAP1 PUSH2 0x1EB5 JUMP JUMPDEST GT ISZERO PUSH2 0x124D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1244 SWAP1 PUSH2 0x2175 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x15180 PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x129A SWAP2 SWAP1 PUSH2 0x2193 JUMP JUMPDEST LT ISZERO PUSH2 0x12DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D2 SWAP1 PUSH2 0x2210 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH9 0x3635C9ADC5DEA00000 DUP2 GT ISZERO PUSH2 0x1327 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131E SWAP1 PUSH2 0x2278 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1331 DUP3 DUP3 PUSH2 0x170B JUMP JUMPDEST TIMESTAMP PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE8EA3D4DD0A2EAAF3F7532AD391255544F8A4BCF78F850BBFF61D5BAC9F77552 DUP3 PUSH1 0x40 MLOAD PUSH2 0x13B9 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1492 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x14D5 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E2 SWAP2 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x155C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1553 SWAP2 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15CC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C3 SWAP2 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x16B5 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x16AC SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x16C6 DUP4 DUP4 DUP4 PUSH2 0x178A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x16D3 PUSH2 0x9F0 JUMP JUMPDEST PUSH2 0x1709 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x177B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1772 SWAP2 SWAP1 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1786 PUSH0 DUP4 DUP4 PUSH2 0x16BB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1792 PUSH2 0x11AD JUMP JUMPDEST PUSH2 0x179D DUP4 DUP4 DUP4 PUSH2 0x17A2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17F2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x17E6 SWAP2 SWAP1 PUSH2 0x1EB5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x18C0 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x187B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1872 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1907 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1951 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x19AE SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19CD DUP2 PUSH2 0x19BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19E6 PUSH0 DUP4 ADD DUP5 PUSH2 0x19C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A2E DUP3 PUSH2 0x19EC JUMP JUMPDEST PUSH2 0x1A38 DUP2 DUP6 PUSH2 0x19F6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A48 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A06 JUMP JUMPDEST PUSH2 0x1A51 DUP2 PUSH2 0x1A14 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A74 DUP2 DUP5 PUSH2 0x1A24 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AAD DUP3 PUSH2 0x1A84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ABD DUP2 PUSH2 0x1AA3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AC7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AD8 DUP2 PUSH2 0x1AB4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AE7 DUP2 PUSH2 0x19BB JUMP JUMPDEST DUP2 EQ PUSH2 0x1AF1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B02 DUP2 PUSH2 0x1ADE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B1E JUMPI PUSH2 0x1B1D PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B2B DUP6 DUP3 DUP7 ADD PUSH2 0x1ACA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B3C DUP6 DUP3 DUP7 ADD PUSH2 0x1AF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B5A DUP2 PUSH2 0x1B46 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B73 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B82 DUP2 PUSH2 0x1AA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B9B PUSH0 DUP4 ADD DUP5 PUSH2 0x1B79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB9 DUP2 PUSH2 0x1BA1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BC3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BD4 DUP2 PUSH2 0x1BB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BEF JUMPI PUSH2 0x1BEE PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BFC DUP5 DUP3 DUP6 ADD PUSH2 0x1BC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C17 DUP2 PUSH2 0x1C05 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C30 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C4D JUMPI PUSH2 0x1C4C PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C5A DUP7 DUP3 DUP8 ADD PUSH2 0x1ACA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C6B DUP7 DUP3 DUP8 ADD PUSH2 0x1ACA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C7C DUP7 DUP3 DUP8 ADD PUSH2 0x1AF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1C8F DUP2 PUSH2 0x1C05 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C99 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CAA DUP2 PUSH2 0x1C86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CC6 JUMPI PUSH2 0x1CC5 PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CD3 DUP6 DUP3 DUP7 ADD PUSH2 0x1BC6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CE4 DUP6 DUP3 DUP7 ADD PUSH2 0x1C9C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D03 DUP2 PUSH2 0x1CEE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D1C PUSH0 DUP4 ADD DUP5 PUSH2 0x1CFA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D37 JUMPI PUSH2 0x1D36 PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D44 DUP5 DUP3 DUP6 ADD PUSH2 0x1ACA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D62 JUMPI PUSH2 0x1D61 PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D6F DUP5 DUP3 DUP6 ADD PUSH2 0x1AF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1D99 JUMPI PUSH2 0x1D98 PUSH2 0x1D78 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DB6 JUMPI PUSH2 0x1DB5 PUSH2 0x1D7C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1DD2 JUMPI PUSH2 0x1DD1 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1DF1 JUMPI PUSH2 0x1DF0 PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DFE DUP8 DUP3 DUP9 ADD PUSH2 0x1BC6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1E0F DUP8 DUP3 DUP9 ADD PUSH2 0x1C9C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E30 JUMPI PUSH2 0x1E2F PUSH2 0x1A80 JUMP JUMPDEST JUMPDEST PUSH2 0x1E3C DUP8 DUP3 DUP9 ADD PUSH2 0x1D84 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E60 JUMPI PUSH2 0x1E5F PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E6D DUP6 DUP3 DUP7 ADD PUSH2 0x1ACA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E7E DUP6 DUP3 DUP7 ADD PUSH2 0x1ACA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1EBF DUP3 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP PUSH2 0x1ECA DUP4 PUSH2 0x19BB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EE2 JUMPI PUSH2 0x1EE1 PUSH2 0x1E88 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F2C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F3F JUMPI PUSH2 0x1F3E PUSH2 0x1EE8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206D75737420626520746865206D61696C626F78000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F79 PUSH1 0x1A DUP4 PUSH2 0x19F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F84 DUP3 PUSH2 0x1F45 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FA6 DUP2 PUSH2 0x1F6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E646572206D75737420626520747275737465642072656D6F7465000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FE1 PUSH1 0x1D DUP4 PUSH2 0x19F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FEC DUP3 PUSH2 0x1FAD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x200E DUP2 PUSH2 0x1FD5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x201F DUP3 PUSH2 0x1A84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x202F DUP2 PUSH2 0x2015 JUMP JUMPDEST DUP2 EQ PUSH2 0x2039 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x204A DUP2 PUSH2 0x2026 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2066 JUMPI PUSH2 0x2065 PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2073 DUP6 DUP3 DUP7 ADD PUSH2 0x203C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2084 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420612067616D65206D61737465720000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20C2 PUSH1 0x1B DUP4 PUSH2 0x19F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x20CD DUP3 PUSH2 0x208E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20EF DUP2 PUSH2 0x20B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2109 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B79 JUMP JUMPDEST PUSH2 0x2116 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19C4 JUMP JUMPDEST PUSH2 0x2123 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19C4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4D617820737570706C7920726561636865640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x215F PUSH1 0x12 DUP4 PUSH2 0x19F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x216A DUP3 PUSH2 0x212B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x218C DUP2 PUSH2 0x2153 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x219D DUP3 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP PUSH2 0x21A8 DUP4 PUSH2 0x19BB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x21C0 JUMPI PUSH2 0x21BF PUSH2 0x1E88 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4461696C7920726577617264206C696D69742072656163686564000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21FA PUSH1 0x1A DUP4 PUSH2 0x19F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2205 DUP3 PUSH2 0x21C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2227 DUP2 PUSH2 0x21EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265776172642065786365656473206461696C79206C696D6974000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2262 PUSH1 0x1A DUP4 PUSH2 0x19F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x226D DUP3 PUSH2 0x222E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x228F DUP2 PUSH2 0x2256 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD ISZERO PUSH14 0xC1935CBC6599F4F93A5C4CFC20A4 SWAP14 DUP6 0xED MSTORE MSTORE DUP4 PUSH14 0x5B59B6A6E9463C3464736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "400:3182:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3056:121;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;488:31:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;526:48;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1836:144:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3002:82:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;583:53:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;795:49;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3514:65;;;;;;;;;;;;;:::i;:::-;;745:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;618:87:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1385:443:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1850:84:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:1;;;;;;;;;;;;;:::i;:::-;;1021:158:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3445:61:10;;;;;;;;;;;;;:::i;:::-;;2099:157;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2435:140:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3610:178:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;663:58:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2264:163:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1988:103:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3056:121;3096:7;3135:1;3116:15;;:20;;;;;;;:::i;:::-;;;;;;;;3154:15;;3147:22;;3056:121;:::o;2074:89:3:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;488:31:10:-;;;;;;;;;;;;;:::o;526:48::-;;;;;;;;;;;;;;;;;:::o;5039:244:3:-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;1836:144:10:-;1531:13:1;:11;:13::i;:::-;1958:14:10::1;1932;:23;1947:7;1932:23;;;;;;;;;;;;;;;:40;;;;1836:144:::0;;:::o;3002:82:3:-;3051:5;3075:2;3068:9;;3002:82;:::o;583:53:10:-;620:16;583:53;:::o;795:49::-;;;;;;;;;;;;;;;;;:::o;3514:65::-;1531:13:1;:11;:13::i;:::-;3561:10:10::1;:8;:10::i;:::-;3514:65::o:0;745:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;618:87:5:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;1385:443:10:-;1474:19:9;:17;:19::i;:::-;1563:16:10::1;;;;;;;;;;;1549:30;;:10;:30;;;1541:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1640:14;:23;1655:7;1640:23;;;;;;;;;;;;;;;;1629:7;:34;1621:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;1711:14;1727;1756:5;;1745:37;;;;;;;:::i;:::-;1710:72;;;;1793:27;1805:6;1813;1793:11;:27::i;:::-;1530:298;;1385:443:::0;;;;:::o;1850:84:9:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;3299:116:3:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1021:158:5:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;3445:61:10:-;1531:13:1;:11;:13::i;:::-;3490:8:10::1;:6;:8::i;:::-;3445:61::o:0;2099:157::-;1531:13:1;:11;:13::i;:::-;2200:4:10::1;2173:11;:24;2185:11;2173:24;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;2236:11;2220:28;;;;;;;;;;;;2099:157:::0;:::o;1638:85:1:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:3:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;2435:140:10:-;1302:11;:23;1314:10;1302:23;;;;;;;;;;;;;;;;;;;;;;;;;1294:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1474:19:9::1;:17;:19::i;:::-;2538:29:10::2;2550:7;2559;2538:11;:29::i;:::-;2435:140:::0;;:::o;3610:178:3:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;663:58:10:-;708:13;663:58;:::o;3846:140:3:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2264:163:10:-;1531:13:1;:11;:13::i;:::-;2368:5:10::1;2341:11;:24;2353:11;2341:24;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;2407:11;2389:30;;;;;;;;;;;;2264:163:::0;:::o;2543:215:1:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1988:103:10:-;1531:13:1;:11;:13::i;:::-;2075:8:10::1;2056:16;;:27;;;;;;;;;;;;;;;;;;1988:103:::0;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8989:128:3:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1796:162:1:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2710:117:9:-;1721:16;:14;:16::i;:::-;2778:5:::1;2768:7;;:15;;;;;;;;;;;;;;;;;;2798:22;2807:12;:10;:12::i;:::-;2798:22;;;;;;:::i;:::-;;;;;;;;2710:117::o:0;8247:206:3:-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;2002:128:9:-;2067:8;:6;:8::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;2583:465:10:-;620:16;2682:7;2666:13;:11;:13::i;:::-;:23;;;;:::i;:::-;:37;;2658:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2790:6;2763:14;:23;2778:7;2763:23;;;;;;;;;;;;;;;;2745:15;:41;;;;:::i;:::-;:51;;2737:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;708:13;2846:7;:29;;2838:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2919:23;2925:7;2934;2919:5;:23::i;:::-;2979:15;2953:14;:23;2968:7;2953:23;;;;;;;;;;;;;;;:41;;;;3023:7;3010:30;;;3032:7;3010:30;;;;;;:::i;:::-;;;;;;;;2583:465;;:::o;2912:187:1:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2463:115:9:-;1474:19;:17;:19::i;:::-;2532:4:::1;2522:7;;:14;;;;;;;;;;;;;;;;;;2551:20;2558:12;:10;:12::i;:::-;2551:20;;;;;;:::i;:::-;;;;;;;;2463:115::o:0;9949:432:3:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;3246:155:10:-;3363:30;3377:4;3383:2;3387:5;3363:13;:30::i;:::-;3246:155;;;:::o;2202:126:9:-;2265:8;:6;:8::i;:::-;2260:62;;2296:15;;;;;;;;;;;;;;2260:62;2202:126::o;7721:208:3:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;1112:145:6:-;1474:19:9;:17;:19::i;:::-;1220:30:6::1;1234:4;1240:2;1244:5;1220:13;:30::i;:::-;1112:145:::0;;;:::o;6271:1107:3:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:77:11:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:99::-;494:6;528:5;522:12;512:22;;442:99;;;:::o;547:169::-;631:11;665:6;660:3;653:19;705:4;700:3;696:14;681:29;;547:169;;;;:::o;722:139::-;811:6;806:3;801;795:23;852:1;843:6;838:3;834:16;827:27;722:139;;;:::o;867:102::-;908:6;959:2;955:7;950:2;943:5;939:14;935:28;925:38;;867:102;;;:::o;975:377::-;1063:3;1091:39;1124:5;1091:39;:::i;:::-;1146:71;1210:6;1205:3;1146:71;:::i;:::-;1139:78;;1226:65;1284:6;1279:3;1272:4;1265:5;1261:16;1226:65;:::i;:::-;1316:29;1338:6;1316:29;:::i;:::-;1311:3;1307:39;1300:46;;1067:285;975:377;;;;:::o;1358:313::-;1471:4;1509:2;1498:9;1494:18;1486:26;;1558:9;1552:4;1548:20;1544:1;1533:9;1529:17;1522:47;1586:78;1659:4;1650:6;1586:78;:::i;:::-;1578:86;;1358:313;;;;:::o;1758:117::-;1867:1;1864;1857:12;1881:117;1990:1;1987;1980:12;2004:126;2041:7;2081:42;2074:5;2070:54;2059:65;;2004:126;;;:::o;2136:96::-;2173:7;2202:24;2220:5;2202:24;:::i;:::-;2191:35;;2136:96;;;:::o;2238:122::-;2311:24;2329:5;2311:24;:::i;:::-;2304:5;2301:35;2291:63;;2350:1;2347;2340:12;2291:63;2238:122;:::o;2366:139::-;2412:5;2450:6;2437:20;2428:29;;2466:33;2493:5;2466:33;:::i;:::-;2366:139;;;;:::o;2511:122::-;2584:24;2602:5;2584:24;:::i;:::-;2577:5;2574:35;2564:63;;2623:1;2620;2613:12;2564:63;2511:122;:::o;2639:139::-;2685:5;2723:6;2710:20;2701:29;;2739:33;2766:5;2739:33;:::i;:::-;2639:139;;;;:::o;2784:474::-;2852:6;2860;2909:2;2897:9;2888:7;2884:23;2880:32;2877:119;;;2915:79;;:::i;:::-;2877:119;3035:1;3060:53;3105:7;3096:6;3085:9;3081:22;3060:53;:::i;:::-;3050:63;;3006:117;3162:2;3188:53;3233:7;3224:6;3213:9;3209:22;3188:53;:::i;:::-;3178:63;;3133:118;2784:474;;;;;:::o;3264:90::-;3298:7;3341:5;3334:13;3327:21;3316:32;;3264:90;;;:::o;3360:109::-;3441:21;3456:5;3441:21;:::i;:::-;3436:3;3429:34;3360:109;;:::o;3475:210::-;3562:4;3600:2;3589:9;3585:18;3577:26;;3613:65;3675:1;3664:9;3660:17;3651:6;3613:65;:::i;:::-;3475:210;;;;:::o;3691:118::-;3778:24;3796:5;3778:24;:::i;:::-;3773:3;3766:37;3691:118;;:::o;3815:222::-;3908:4;3946:2;3935:9;3931:18;3923:26;;3959:71;4027:1;4016:9;4012:17;4003:6;3959:71;:::i;:::-;3815:222;;;;:::o;4043:93::-;4079:7;4119:10;4112:5;4108:22;4097:33;;4043:93;;;:::o;4142:120::-;4214:23;4231:5;4214:23;:::i;:::-;4207:5;4204:34;4194:62;;4252:1;4249;4242:12;4194:62;4142:120;:::o;4268:137::-;4313:5;4351:6;4338:20;4329:29;;4367:32;4393:5;4367:32;:::i;:::-;4268:137;;;;:::o;4411:327::-;4469:6;4518:2;4506:9;4497:7;4493:23;4489:32;4486:119;;;4524:79;;:::i;:::-;4486:119;4644:1;4669:52;4713:7;4704:6;4693:9;4689:22;4669:52;:::i;:::-;4659:62;;4615:116;4411:327;;;;:::o;4744:77::-;4781:7;4810:5;4799:16;;4744:77;;;:::o;4827:118::-;4914:24;4932:5;4914:24;:::i;:::-;4909:3;4902:37;4827:118;;:::o;4951:222::-;5044:4;5082:2;5071:9;5067:18;5059:26;;5095:71;5163:1;5152:9;5148:17;5139:6;5095:71;:::i;:::-;4951:222;;;;:::o;5179:619::-;5256:6;5264;5272;5321:2;5309:9;5300:7;5296:23;5292:32;5289:119;;;5327:79;;:::i;:::-;5289:119;5447:1;5472:53;5517:7;5508:6;5497:9;5493:22;5472:53;:::i;:::-;5462:63;;5418:117;5574:2;5600:53;5645:7;5636:6;5625:9;5621:22;5600:53;:::i;:::-;5590:63;;5545:118;5702:2;5728:53;5773:7;5764:6;5753:9;5749:22;5728:53;:::i;:::-;5718:63;;5673:118;5179:619;;;;;:::o;5804:122::-;5877:24;5895:5;5877:24;:::i;:::-;5870:5;5867:35;5857:63;;5916:1;5913;5906:12;5857:63;5804:122;:::o;5932:139::-;5978:5;6016:6;6003:20;5994:29;;6032:33;6059:5;6032:33;:::i;:::-;5932:139;;;;:::o;6077:472::-;6144:6;6152;6201:2;6189:9;6180:7;6176:23;6172:32;6169:119;;;6207:79;;:::i;:::-;6169:119;6327:1;6352:52;6396:7;6387:6;6376:9;6372:22;6352:52;:::i;:::-;6342:62;;6298:116;6453:2;6479:53;6524:7;6515:6;6504:9;6500:22;6479:53;:::i;:::-;6469:63;;6424:118;6077:472;;;;;:::o;6555:86::-;6590:7;6630:4;6623:5;6619:16;6608:27;;6555:86;;;:::o;6647:112::-;6730:22;6746:5;6730:22;:::i;:::-;6725:3;6718:35;6647:112;;:::o;6765:214::-;6854:4;6892:2;6881:9;6877:18;6869:26;;6905:67;6969:1;6958:9;6954:17;6945:6;6905:67;:::i;:::-;6765:214;;;;:::o;6985:329::-;7044:6;7093:2;7081:9;7072:7;7068:23;7064:32;7061:119;;;7099:79;;:::i;:::-;7061:119;7219:1;7244:53;7289:7;7280:6;7269:9;7265:22;7244:53;:::i;:::-;7234:63;;7190:117;6985:329;;;;:::o;7320:::-;7379:6;7428:2;7416:9;7407:7;7403:23;7399:32;7396:119;;;7434:79;;:::i;:::-;7396:119;7554:1;7579:53;7624:7;7615:6;7604:9;7600:22;7579:53;:::i;:::-;7569:63;;7525:117;7320:329;;;;:::o;7655:117::-;7764:1;7761;7754:12;7778:117;7887:1;7884;7877:12;7901:117;8010:1;8007;8000:12;8037:552;8094:8;8104:6;8154:3;8147:4;8139:6;8135:17;8131:27;8121:122;;8162:79;;:::i;:::-;8121:122;8275:6;8262:20;8252:30;;8305:18;8297:6;8294:30;8291:117;;;8327:79;;:::i;:::-;8291:117;8441:4;8433:6;8429:17;8417:29;;8495:3;8487:4;8479:6;8475:17;8465:8;8461:32;8458:41;8455:128;;;8502:79;;:::i;:::-;8455:128;8037:552;;;;;:::o;8595:815::-;8682:6;8690;8698;8706;8755:2;8743:9;8734:7;8730:23;8726:32;8723:119;;;8761:79;;:::i;:::-;8723:119;8881:1;8906:52;8950:7;8941:6;8930:9;8926:22;8906:52;:::i;:::-;8896:62;;8852:116;9007:2;9033:53;9078:7;9069:6;9058:9;9054:22;9033:53;:::i;:::-;9023:63;;8978:118;9163:2;9152:9;9148:18;9135:32;9194:18;9186:6;9183:30;9180:117;;;9216:79;;:::i;:::-;9180:117;9329:64;9385:7;9376:6;9365:9;9361:22;9329:64;:::i;:::-;9311:82;;;;9106:297;8595:815;;;;;;;:::o;9416:474::-;9484:6;9492;9541:2;9529:9;9520:7;9516:23;9512:32;9509:119;;;9547:79;;:::i;:::-;9509:119;9667:1;9692:53;9737:7;9728:6;9717:9;9713:22;9692:53;:::i;:::-;9682:63;;9638:117;9794:2;9820:53;9865:7;9856:6;9845:9;9841:22;9820:53;:::i;:::-;9810:63;;9765:118;9416:474;;;;;:::o;9896:180::-;9944:77;9941:1;9934:88;10041:4;10038:1;10031:15;10065:4;10062:1;10055:15;10082:191;10122:3;10141:20;10159:1;10141:20;:::i;:::-;10136:25;;10175:20;10193:1;10175:20;:::i;:::-;10170:25;;10218:1;10215;10211:9;10204:16;;10239:3;10236:1;10233:10;10230:36;;;10246:18;;:::i;:::-;10230:36;10082:191;;;;:::o;10279:180::-;10327:77;10324:1;10317:88;10424:4;10421:1;10414:15;10448:4;10445:1;10438:15;10465:320;10509:6;10546:1;10540:4;10536:12;10526:22;;10593:1;10587:4;10583:12;10614:18;10604:81;;10670:4;10662:6;10658:17;10648:27;;10604:81;10732:2;10724:6;10721:14;10701:18;10698:38;10695:84;;10751:18;;:::i;:::-;10695:84;10516:269;10465:320;;;:::o;10791:176::-;10931:28;10927:1;10919:6;10915:14;10908:52;10791:176;:::o;10973:366::-;11115:3;11136:67;11200:2;11195:3;11136:67;:::i;:::-;11129:74;;11212:93;11301:3;11212:93;:::i;:::-;11330:2;11325:3;11321:12;11314:19;;10973:366;;;:::o;11345:419::-;11511:4;11549:2;11538:9;11534:18;11526:26;;11598:9;11592:4;11588:20;11584:1;11573:9;11569:17;11562:47;11626:131;11752:4;11626:131;:::i;:::-;11618:139;;11345:419;;;:::o;11770:179::-;11910:31;11906:1;11898:6;11894:14;11887:55;11770:179;:::o;11955:366::-;12097:3;12118:67;12182:2;12177:3;12118:67;:::i;:::-;12111:74;;12194:93;12283:3;12194:93;:::i;:::-;12312:2;12307:3;12303:12;12296:19;;11955:366;;;:::o;12327:419::-;12493:4;12531:2;12520:9;12516:18;12508:26;;12580:9;12574:4;12570:20;12566:1;12555:9;12551:17;12544:47;12608:131;12734:4;12608:131;:::i;:::-;12600:139;;12327:419;;;:::o;12752:104::-;12797:7;12826:24;12844:5;12826:24;:::i;:::-;12815:35;;12752:104;;;:::o;12862:138::-;12943:32;12969:5;12943:32;:::i;:::-;12936:5;12933:43;12923:71;;12990:1;12987;12980:12;12923:71;12862:138;:::o;13006:155::-;13060:5;13098:6;13085:20;13076:29;;13114:41;13149:5;13114:41;:::i;:::-;13006:155;;;;:::o;13167:490::-;13243:6;13251;13300:2;13288:9;13279:7;13275:23;13271:32;13268:119;;;13306:79;;:::i;:::-;13268:119;13426:1;13451:61;13504:7;13495:6;13484:9;13480:22;13451:61;:::i;:::-;13441:71;;13397:125;13561:2;13587:53;13632:7;13623:6;13612:9;13608:22;13587:53;:::i;:::-;13577:63;;13532:118;13167:490;;;;;:::o;13663:177::-;13803:29;13799:1;13791:6;13787:14;13780:53;13663:177;:::o;13846:366::-;13988:3;14009:67;14073:2;14068:3;14009:67;:::i;:::-;14002:74;;14085:93;14174:3;14085:93;:::i;:::-;14203:2;14198:3;14194:12;14187:19;;13846:366;;;:::o;14218:419::-;14384:4;14422:2;14411:9;14407:18;14399:26;;14471:9;14465:4;14461:20;14457:1;14446:9;14442:17;14435:47;14499:131;14625:4;14499:131;:::i;:::-;14491:139;;14218:419;;;:::o;14643:442::-;14792:4;14830:2;14819:9;14815:18;14807:26;;14843:71;14911:1;14900:9;14896:17;14887:6;14843:71;:::i;:::-;14924:72;14992:2;14981:9;14977:18;14968:6;14924:72;:::i;:::-;15006;15074:2;15063:9;15059:18;15050:6;15006:72;:::i;:::-;14643:442;;;;;;:::o;15091:168::-;15231:20;15227:1;15219:6;15215:14;15208:44;15091:168;:::o;15265:366::-;15407:3;15428:67;15492:2;15487:3;15428:67;:::i;:::-;15421:74;;15504:93;15593:3;15504:93;:::i;:::-;15622:2;15617:3;15613:12;15606:19;;15265:366;;;:::o;15637:419::-;15803:4;15841:2;15830:9;15826:18;15818:26;;15890:9;15884:4;15880:20;15876:1;15865:9;15861:17;15854:47;15918:131;16044:4;15918:131;:::i;:::-;15910:139;;15637:419;;;:::o;16062:194::-;16102:4;16122:20;16140:1;16122:20;:::i;:::-;16117:25;;16156:20;16174:1;16156:20;:::i;:::-;16151:25;;16200:1;16197;16193:9;16185:17;;16224:1;16218:4;16215:11;16212:37;;;16229:18;;:::i;:::-;16212:37;16062:194;;;;:::o;16262:176::-;16402:28;16398:1;16390:6;16386:14;16379:52;16262:176;:::o;16444:366::-;16586:3;16607:67;16671:2;16666:3;16607:67;:::i;:::-;16600:74;;16683:93;16772:3;16683:93;:::i;:::-;16801:2;16796:3;16792:12;16785:19;;16444:366;;;:::o;16816:419::-;16982:4;17020:2;17009:9;17005:18;16997:26;;17069:9;17063:4;17059:20;17055:1;17044:9;17040:17;17033:47;17097:131;17223:4;17097:131;:::i;:::-;17089:139;;16816:419;;;:::o;17241:176::-;17381:28;17377:1;17369:6;17365:14;17358:52;17241:176;:::o;17423:366::-;17565:3;17586:67;17650:2;17645:3;17586:67;:::i;:::-;17579:74;;17662:93;17751:3;17662:93;:::i;:::-;17780:2;17775:3;17771:12;17764:19;;17423:366;;;:::o;17795:419::-;17961:4;17999:2;17988:9;17984:18;17976:26;;18048:9;18042:4;18038:20;18034:1;18023:9;18019:17;18012:47;18076:131;18202:4;18076:131;:::i;:::-;18068:139;;17795:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1781600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DAILY_REWARD_LIMIT()": "436",
								"MAX_SUPPLY()": "415",
								"addGameMaster(address)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2896",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "406",
								"gameMasters(address)": "2900",
								"getTokenId()": "infinite",
								"handle(uint32,bytes32,bytes)": "infinite",
								"hyperlaneMailbox()": "2576",
								"lastRewardTime(address)": "2914",
								"mintReward(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2677",
								"pause()": "infinite",
								"paused()": "2519",
								"removeGameMaster(address)": "infinite",
								"renounceOwnership()": "infinite",
								"setMailbox(address)": "infinite",
								"setTrustedRemote(uint32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2478",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"trustedRemotes(uint32)": "2850",
								"unpause()": "infinite"
							},
							"internal": {
								"_mintReward(address,uint256)": "infinite",
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 400,
									"end": 3582,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 400,
									"end": 3582,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 400,
									"end": 3582,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1072,
									"end": 1249,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1141,
									"end": 1151,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "42696C6973000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "424C530000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1241,
									"end": 1246,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1183,
									"end": 1200,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1180,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 1164,
									"end": 1180,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1200,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 1164,
									"end": 1200,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1200,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1200,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1200,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1200,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1164,
									"end": 1200,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1200,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1200,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1200,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1200,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1200,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1164,
									"end": 1200,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1200,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1200,
									"modifierDepth": 2,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1200,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1200,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1200,
									"modifierDepth": 2,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1237,
									"end": 1241,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1211,
									"end": 1222,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 1211,
									"end": 1234,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1223,
									"end": 1233,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1234,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1211,
									"end": 1234,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1234,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1211,
									"end": 1234,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1234,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1234,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1234,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1211,
									"end": 1234,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1234,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1234,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1234,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1234,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1211,
									"end": 1234,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1234,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1211,
									"end": 1234,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1234,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1211,
									"end": 1241,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 1211,
									"end": 1241,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1241,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1241,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1241,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1241,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 1211,
									"end": 1241,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1241,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1241,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1241,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1241,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1241,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1241,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1241,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1241,
									"modifierDepth": 2,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1241,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1241,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1211,
									"end": 1241,
									"modifierDepth": 2,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1249,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 400,
									"end": 3582,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 400,
									"end": 3582,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 11,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3482,
									"end": 3483,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3475,
									"end": 3483,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3475,
									"end": 3483,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "97"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "98"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 11,
									"value": "98"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 11,
									"value": "97"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "101"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 11,
									"value": "101"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "102"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 11,
									"value": "102"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "103"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 11,
									"value": "103"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "104"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "105"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 11,
									"value": "105"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 11,
									"value": "104"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "108"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 11,
									"value": "108"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "113"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 11,
									"value": "113"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "115"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 11,
									"value": "115"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "116"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 11,
									"value": "116"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "118"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "119"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 11,
									"value": "119"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "120"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 11,
									"value": "120"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 11,
									"value": "118"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "121"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 11,
									"value": "121"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 11,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "124"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 11,
									"value": "124"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "125"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "126"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 11,
									"value": "126"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 11,
									"value": "125"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "128"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 11,
									"value": "128"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "130"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 11,
									"value": "130"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 400,
									"end": 3582,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 400,
									"end": 3582,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 400,
									"end": 3582,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 400,
									"end": 3582,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 400,
									"end": 3582,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 400,
									"end": 3582,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 3582,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 400,
									"end": 3582,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 3582,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122001156dc1935cbc6599f4f93a5c4cfc20a49d85ed5252836d5b59b6a6e9463c3464736f6c634300081b0033",
									".code": [
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "5C975ABB"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "95D89B41"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "DD62ED3E"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "DD62ED3E"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "DFCA5CE3"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "F3C61D6B"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "95D89B41"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "9A49090E"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "BCA12299"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "79CC6790"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "79CC6790"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "8456CB59"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "8B1C7B10"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "5C975ABB"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "2BDA3E0B"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "3F4BA83A"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "3F4BA83A"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "4080D640"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "42966C68"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "56D5D475"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "2BDA3E0B"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "313CE567"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "32CB6B0C"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "3B5D441E"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "1A6E4DB4"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "1D187C50"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "10A38F5"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "6FDDE03"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "95EA7B3"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 3582,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 3056,
											"end": 3177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 3056,
											"end": 3177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 488,
											"end": 519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 488,
											"end": 519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 526,
											"end": 574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 526,
											"end": 574,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 574,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 574,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 526,
											"end": 574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 526,
											"end": 574,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 526,
											"end": 574,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 526,
											"end": 574,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 526,
											"end": 574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 526,
											"end": 574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 526,
											"end": 574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 526,
											"end": 574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 526,
											"end": 574,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 526,
											"end": 574,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 526,
											"end": 574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 526,
											"end": 574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 526,
											"end": 574,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 1836,
											"end": 1980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 1836,
											"end": 1980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 583,
											"end": 636,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 583,
											"end": 636,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 583,
											"end": 636,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 583,
											"end": 636,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 583,
											"end": 636,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 583,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 583,
											"end": 636,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 583,
											"end": 636,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 636,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 636,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 583,
											"end": 636,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 583,
											"end": 636,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 583,
											"end": 636,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 583,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 583,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 583,
											"end": 636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 583,
											"end": 636,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 583,
											"end": 636,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 583,
											"end": 636,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 636,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 583,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 583,
											"end": 636,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 583,
											"end": 636,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 583,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 583,
											"end": 636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 583,
											"end": 636,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 583,
											"end": 636,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 583,
											"end": 636,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 636,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 583,
											"end": 636,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 583,
											"end": 636,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 583,
											"end": 636,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 583,
											"end": 636,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 583,
											"end": 636,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 795,
											"end": 844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 795,
											"end": 844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 795,
											"end": 844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3514,
											"end": 3579,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 3514,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3514,
											"end": 3579,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 3514,
											"end": 3579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3514,
											"end": 3579,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3514,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 3514,
											"end": 3579,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3514,
											"end": 3579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3514,
											"end": 3579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3514,
											"end": 3579,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3514,
											"end": 3579,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 3514,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3514,
											"end": 3579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3514,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 3514,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3514,
											"end": 3579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3514,
											"end": 3579,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 3514,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3514,
											"end": 3579,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 745,
											"end": 788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 745,
											"end": 788,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 788,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 788,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 745,
											"end": 788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 745,
											"end": 788,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 745,
											"end": 788,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 745,
											"end": 788,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 745,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 745,
											"end": 788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 745,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 745,
											"end": 788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 788,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 745,
											"end": 788,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 745,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 745,
											"end": 788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 788,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1385,
											"end": 1828,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1385,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1385,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 1385,
											"end": 1828,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1385,
											"end": 1828,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1385,
											"end": 1828,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1385,
											"end": 1828,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1385,
											"end": 1828,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1385,
											"end": 1828,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1385,
											"end": 1828,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1385,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 1385,
											"end": 1828,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1385,
											"end": 1828,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1385,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 1385,
											"end": 1828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1385,
											"end": 1828,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 1385,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1385,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1385,
											"end": 1828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1385,
											"end": 1828,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 1385,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1385,
											"end": 1828,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3445,
											"end": 3506,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 3445,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3445,
											"end": 3506,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 3445,
											"end": 3506,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3445,
											"end": 3506,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3445,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 3445,
											"end": 3506,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3445,
											"end": 3506,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3506,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3506,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3445,
											"end": 3506,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 3445,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3445,
											"end": 3506,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3445,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 3445,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 3445,
											"end": 3506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3445,
											"end": 3506,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 3445,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3445,
											"end": 3506,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 2099,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 2099,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 2435,
											"end": 2575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 2435,
											"end": 2575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 663,
											"end": 721,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 663,
											"end": 721,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 663,
											"end": 721,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 663,
											"end": 721,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 663,
											"end": 721,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 663,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 663,
											"end": 721,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 663,
											"end": 721,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 721,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 721,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 663,
											"end": 721,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 663,
											"end": 721,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 663,
											"end": 721,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 663,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 663,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 663,
											"end": 721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 663,
											"end": 721,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 663,
											"end": 721,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 663,
											"end": 721,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 721,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 663,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 663,
											"end": 721,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 663,
											"end": 721,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 663,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 663,
											"end": 721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 663,
											"end": 721,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 663,
											"end": 721,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 663,
											"end": 721,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 721,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 663,
											"end": 721,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 663,
											"end": 721,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 663,
											"end": 721,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 663,
											"end": 721,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 663,
											"end": 721,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 2264,
											"end": 2427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 2264,
											"end": 2427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1988,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 1988,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3096,
											"end": 3103,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3135,
											"end": 3136,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3116,
											"end": 3131,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 3116,
											"end": 3131,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 3116,
											"end": 3136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3154,
											"end": 3169,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 3154,
											"end": 3169,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3177,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 488,
											"end": 519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 526,
											"end": 574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 526,
											"end": 574,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 526,
											"end": 574,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 574,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 526,
											"end": 574,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 574,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 574,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 526,
											"end": 574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 1972,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1932,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1954,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1932,
											"end": 1955,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1932,
											"end": 1955,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1955,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 1955,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1955,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1955,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 1955,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1955,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1972,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1972,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1972,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1972,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1980,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 583,
											"end": 636,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 583,
											"end": 636,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 620,
											"end": 636,
											"name": "PUSH",
											"source": 10,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 583,
											"end": 636,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 583,
											"end": 636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 844,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 795,
											"end": 844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3514,
											"end": 3579,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3514,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 3561,
											"end": 3569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 3561,
											"end": 3571,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3561,
											"end": 3571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 3561,
											"end": 3571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3514,
											"end": 3579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 745,
											"end": 788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 745,
											"end": 788,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 745,
											"end": 788,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 788,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 788,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 788,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 788,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 745,
											"end": 788,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 745,
											"end": 788,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 745,
											"end": 788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 678,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 678,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 678,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1385,
											"end": 1828,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1385,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1563,
											"end": 1579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1579,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1579,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1579,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1563,
											"end": 1579,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1579,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1579,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1563,
											"end": 1579,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 1579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1549,
											"end": 1579,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 1559,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 1579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1549,
											"end": 1579,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 1579,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 1541,
											"end": 1610,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1541,
											"end": 1610,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1541,
											"end": 1610,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1610,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1541,
											"end": 1610,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1541,
											"end": 1610,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 1541,
											"end": 1610,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1610,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1541,
											"end": 1610,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1541,
											"end": 1610,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1610,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1610,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1610,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1610,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1610,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1610,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 1541,
											"end": 1610,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1640,
											"end": 1654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1640,
											"end": 1663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1655,
											"end": 1662,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1640,
											"end": 1663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1640,
											"end": 1663,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1640,
											"end": 1663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1640,
											"end": 1663,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1640,
											"end": 1663,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1640,
											"end": 1663,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1640,
											"end": 1663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1640,
											"end": 1663,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1640,
											"end": 1663,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1640,
											"end": 1663,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1640,
											"end": 1663,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1640,
											"end": 1663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1640,
											"end": 1663,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1640,
											"end": 1663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1663,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1640,
											"end": 1663,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1629,
											"end": 1636,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1629,
											"end": 1663,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1697,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1621,
											"end": 1697,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1621,
											"end": 1697,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1621,
											"end": 1697,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1697,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1621,
											"end": 1697,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1697,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 1621,
											"end": 1697,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1697,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 1621,
											"end": 1697,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1697,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 1621,
											"end": 1697,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1621,
											"end": 1697,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1697,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1697,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1697,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1697,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1697,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1697,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1621,
											"end": 1697,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1711,
											"end": 1725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1727,
											"end": 1741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 1761,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1756,
											"end": 1761,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1782,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1782,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1782,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1782,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1745,
											"end": 1782,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1782,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1782,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 1745,
											"end": 1782,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1782,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1745,
											"end": 1782,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1782,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1782,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1782,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1782,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1793,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 1805,
											"end": 1811,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1819,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1793,
											"end": 1804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 1793,
											"end": 1820,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1793,
											"end": 1820,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 1793,
											"end": 1820,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1530,
											"end": 1828,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1530,
											"end": 1828,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1385,
											"end": 1828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1385,
											"end": 1828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1385,
											"end": 1828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1385,
											"end": 1828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1385,
											"end": 1828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1897,
											"end": 1901,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 1927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 1927,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 1121,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1121,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3445,
											"end": 3506,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 3445,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3498,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 3490,
											"end": 3496,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 3490,
											"end": 3498,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3490,
											"end": 3498,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 3490,
											"end": 3498,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3445,
											"end": 3506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2173,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 2173,
											"end": 2197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 2196,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2173,
											"end": 2197,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2173,
											"end": 2197,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2197,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2197,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2173,
											"end": 2197,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2197,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2197,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2197,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2173,
											"end": 2197,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2173,
											"end": 2197,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2173,
											"end": 2204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2173,
											"end": 2204,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2204,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2204,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2204,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2173,
											"end": 2204,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2204,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2204,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2204,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2204,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2204,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2204,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2204,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2204,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2204,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2204,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2204,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2247,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2248,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "90E5D96E2F61F1FA8B5C535EC11045A07288F1EE285325F85CAF8379789E24"
										},
										{
											"begin": 2220,
											"end": 2248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2220,
											"end": 2248,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2220,
											"end": 2248,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2248,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2248,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2248,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2248,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2248,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2256,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2099,
											"end": 2256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1313,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1302,
											"end": 1325,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1314,
											"end": 1324,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1325,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1302,
											"end": 1325,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1325,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1302,
											"end": 1325,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1325,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1325,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1325,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1302,
											"end": 1325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1325,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1325,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1325,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1325,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1302,
											"end": 1325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1325,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1325,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1325,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1325,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1325,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1325,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1325,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1302,
											"end": 1325,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1325,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1325,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1325,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1302,
											"end": 1325,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1294,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 1294,
											"end": 1357,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1294,
											"end": 1357,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1294,
											"end": 1357,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1294,
											"end": 1357,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1294,
											"end": 1357,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1294,
											"end": 1357,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1294,
											"end": 1357,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1294,
											"end": 1357,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1294,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 1294,
											"end": 1357,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1294,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 1294,
											"end": 1357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1294,
											"end": 1357,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 1294,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1294,
											"end": 1357,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1294,
											"end": 1357,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1294,
											"end": 1357,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1294,
											"end": 1357,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1294,
											"end": 1357,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1294,
											"end": 1357,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1294,
											"end": 1357,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1294,
											"end": 1357,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 1294,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 1474,
											"end": 1491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2538,
											"end": 2567,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2550,
											"end": 2557,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2566,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2538,
											"end": 2549,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 2538,
											"end": 2567,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2538,
											"end": 2567,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2538,
											"end": 2567,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 663,
											"end": 721,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 663,
											"end": 721,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 708,
											"end": 721,
											"name": "PUSH",
											"source": 10,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 663,
											"end": 721,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 663,
											"end": 721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2341,
											"end": 2352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 2341,
											"end": 2365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2353,
											"end": 2364,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2341,
											"end": 2365,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2341,
											"end": 2365,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2365,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2365,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2365,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2365,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2365,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2365,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2365,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2341,
											"end": 2365,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2341,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2341,
											"end": 2373,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2373,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2341,
											"end": 2373,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2373,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2373,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2373,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2373,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2373,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2373,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2373,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2418,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2389,
											"end": 2419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2389,
											"end": 2419,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2389,
											"end": 2419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "22C7AF3157A517D9D910083D0CD16646C9204F9D52824A23558C7D97D796D638"
										},
										{
											"begin": 2389,
											"end": 2419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2389,
											"end": 2419,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2389,
											"end": 2419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2389,
											"end": 2419,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2389,
											"end": 2419,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2389,
											"end": 2419,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2389,
											"end": 2419,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2389,
											"end": 2419,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2389,
											"end": 2419,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2083,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2056,
											"end": 2072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2056,
											"end": 2072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2056,
											"end": 2083,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2056,
											"end": 2083,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2056,
											"end": 2083,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2056,
											"end": 2083,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2056,
											"end": 2083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2056,
											"end": 2083,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2056,
											"end": 2083,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2056,
											"end": 2083,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2056,
											"end": 2083,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2056,
											"end": 2083,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2056,
											"end": 2083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2056,
											"end": 2083,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2056,
											"end": 2083,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2056,
											"end": 2083,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2056,
											"end": 2083,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2056,
											"end": 2083,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2056,
											"end": 2083,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2091,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 1721,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 1721,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 2807,
											"end": 2817,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 2807,
											"end": 2819,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2798,
											"end": 2820,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2067,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 9,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2583,
											"end": 3048,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 2583,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 620,
											"end": 636,
											"name": "PUSH",
											"source": 10,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 2682,
											"end": 2689,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2666,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 2666,
											"end": 2677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 2666,
											"end": 2679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2666,
											"end": 2679,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 2666,
											"end": 2679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2666,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 2666,
											"end": 2689,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2666,
											"end": 2689,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2666,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 2666,
											"end": 2689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2666,
											"end": 2689,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 2666,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2666,
											"end": 2703,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2666,
											"end": 2703,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 2658,
											"end": 2726,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2726,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2658,
											"end": 2726,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2726,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2658,
											"end": 2726,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2726,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2726,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2658,
											"end": 2726,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 2658,
											"end": 2726,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 2658,
											"end": 2726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2726,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 2658,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2726,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2658,
											"end": 2726,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2726,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2726,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2726,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2726,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2726,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2726,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 2658,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2790,
											"end": 2796,
											"name": "PUSH",
											"source": 10,
											"value": "15180"
										},
										{
											"begin": 2763,
											"end": 2777,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 2763,
											"end": 2786,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2778,
											"end": 2785,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2786,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2763,
											"end": 2786,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2786,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2763,
											"end": 2786,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2786,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2786,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2763,
											"end": 2786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2786,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2786,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2763,
											"end": 2786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2786,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2786,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2786,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2745,
											"end": 2760,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 2745,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 2745,
											"end": 2786,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2745,
											"end": 2786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2745,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 2745,
											"end": 2786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2745,
											"end": 2786,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 2745,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2745,
											"end": 2796,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2745,
											"end": 2796,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 2737,
											"end": 2827,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2827,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2737,
											"end": 2827,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2827,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2737,
											"end": 2827,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2827,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2827,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2737,
											"end": 2827,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 2737,
											"end": 2827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 2737,
											"end": 2827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2827,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 2737,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2827,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2737,
											"end": 2827,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2827,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2827,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2827,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2827,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2827,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 2737,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 708,
											"end": 721,
											"name": "PUSH",
											"source": 10,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 2846,
											"end": 2853,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2875,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2875,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2838,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 2838,
											"end": 2906,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2838,
											"end": 2906,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2838,
											"end": 2906,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2838,
											"end": 2906,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2838,
											"end": 2906,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2838,
											"end": 2906,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2838,
											"end": 2906,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2838,
											"end": 2906,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2838,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 2838,
											"end": 2906,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2838,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 2838,
											"end": 2906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2838,
											"end": 2906,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 2838,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2838,
											"end": 2906,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2838,
											"end": 2906,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2838,
											"end": 2906,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2838,
											"end": 2906,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2838,
											"end": 2906,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2838,
											"end": 2906,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2838,
											"end": 2906,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2838,
											"end": 2906,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 2838,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2919,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 2925,
											"end": 2932,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2934,
											"end": 2941,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2919,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 2919,
											"end": 2942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2919,
											"end": 2942,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 2919,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2979,
											"end": 2994,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 2967,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 2953,
											"end": 2976,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 2975,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 2976,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2953,
											"end": 2976,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 2976,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2953,
											"end": 2976,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 2976,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 2976,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 2976,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2976,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 2976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 2976,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 2976,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 2976,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2976,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 2976,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2953,
											"end": 2976,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 2994,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 2994,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 2994,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 2994,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3023,
											"end": 3030,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3040,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3010,
											"end": 3040,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3040,
											"name": "PUSH",
											"source": 10,
											"value": "E8EA3D4DD0A2EAAF3F7532AD391255544F8A4BCF78F850BBFF61D5BAC9F77552"
										},
										{
											"begin": 3032,
											"end": 3039,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3040,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3010,
											"end": 3040,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 3010,
											"end": 3040,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3040,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 3010,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3040,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 3010,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3040,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3010,
											"end": 3040,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3040,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3040,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3040,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3040,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3040,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 2583,
											"end": 3048,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2583,
											"end": 3048,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2583,
											"end": 3048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 2558,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 2558,
											"end": 2570,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2551,
											"end": 2571,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3246,
											"end": 3401,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 3246,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3363,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 3377,
											"end": 3381,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3383,
											"end": 3385,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3387,
											"end": 3392,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3363,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 3363,
											"end": 3393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3363,
											"end": 3393,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 3363,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3246,
											"end": 3401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3246,
											"end": 3401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3246,
											"end": 3401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3246,
											"end": 3401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 2265,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2265,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 9,
											"value": "8DFC202B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2202,
											"end": 2328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1220,
											"end": 1250,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 1234,
											"end": 1238,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1242,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1244,
											"end": 1249,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 1220,
											"end": 1250,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1250,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 1220,
											"end": 1250,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 442,
											"end": 541,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 442,
											"end": 541,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 494,
											"end": 500,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 533,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 522,
											"end": 534,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 512,
											"end": 534,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 512,
											"end": 534,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 442,
											"end": 541,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 442,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 547,
											"end": 716,
											"name": "tag",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 547,
											"end": 716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 631,
											"end": 642,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 671,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 660,
											"end": 663,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 653,
											"end": 672,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 705,
											"end": 709,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 703,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 696,
											"end": 710,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 681,
											"end": 710,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 681,
											"end": 710,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 547,
											"end": 716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 722,
											"end": 861,
											"name": "tag",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 722,
											"end": 861,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 811,
											"end": 817,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 806,
											"end": 809,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 801,
											"end": 804,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 795,
											"end": 818,
											"name": "MCOPY",
											"source": 11
										},
										{
											"begin": 852,
											"end": 853,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 849,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 838,
											"end": 841,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 834,
											"end": 850,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 827,
											"end": 854,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 722,
											"end": 861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 867,
											"end": 969,
											"name": "tag",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 867,
											"end": 969,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 908,
											"end": 914,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 961,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 955,
											"end": 962,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 950,
											"end": 952,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 939,
											"end": 953,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 935,
											"end": 963,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 925,
											"end": 963,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 925,
											"end": 963,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 867,
											"end": 969,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 867,
											"end": 969,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 867,
											"end": 969,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 867,
											"end": 969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "tag",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1063,
											"end": 1066,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 1124,
											"end": 1129,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 1091,
											"end": 1130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "tag",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 1210,
											"end": 1216,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1205,
											"end": 1208,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 1146,
											"end": 1217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "tag",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1217,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1217,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1279,
											"end": 1282,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1276,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1265,
											"end": 1270,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1261,
											"end": 1277,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 1226,
											"end": 1291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "tag",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 1338,
											"end": 1344,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 1316,
											"end": 1345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "tag",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1311,
											"end": 1314,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1307,
											"end": 1346,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1300,
											"end": 1346,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1300,
											"end": 1346,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1067,
											"end": 1352,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 975,
											"end": 1352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1471,
											"end": 1475,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1509,
											"end": 1511,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1512,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1486,
											"end": 1512,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1486,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1552,
											"end": 1556,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1548,
											"end": 1568,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1544,
											"end": 1545,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1542,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1529,
											"end": 1546,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1522,
											"end": 1569,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 1659,
											"end": 1663,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1650,
											"end": 1656,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 1586,
											"end": 1664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "tag",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1578,
											"end": 1664,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1578,
											"end": 1664,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1358,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1758,
											"end": 1875,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 1758,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1869,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1881,
											"end": 1998,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 1881,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2123,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2074,
											"end": 2079,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2070,
											"end": 2124,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2124,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2124,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2004,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2173,
											"end": 2180,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 2220,
											"end": 2225,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 2202,
											"end": 2226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "tag",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2226,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2226,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2136,
											"end": 2232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2238,
											"end": 2360,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 2238,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 2329,
											"end": 2334,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 2311,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "tag",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2304,
											"end": 2309,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2301,
											"end": 2336,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2350,
											"end": 2351,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2347,
											"end": 2348,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 2352,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "tag",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2238,
											"end": 2360,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2238,
											"end": 2360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "tag",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2412,
											"end": 2417,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2456,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2437,
											"end": 2457,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 2493,
											"end": 2498,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 2466,
											"end": 2499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "tag",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2366,
											"end": 2505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "tag",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 2602,
											"end": 2607,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 2584,
											"end": 2608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "tag",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2577,
											"end": 2582,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2574,
											"end": 2609,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2623,
											"end": 2624,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2613,
											"end": 2625,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "tag",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2511,
											"end": 2633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "tag",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2685,
											"end": 2690,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2729,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2710,
											"end": 2730,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 2766,
											"end": 2771,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 2739,
											"end": 2772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "tag",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2639,
											"end": 2778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2852,
											"end": 2858,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2866,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 2911,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2888,
											"end": 2895,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2880,
											"end": 2912,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 2915,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "tag",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "tag",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3096,
											"end": 3102,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3085,
											"end": 3094,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3081,
											"end": 3103,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 3060,
											"end": 3113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "tag",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3006,
											"end": 3123,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3162,
											"end": 3164,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 3233,
											"end": 3240,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3224,
											"end": 3230,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3222,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3209,
											"end": 3231,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 3188,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "tag",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3133,
											"end": 3251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2784,
											"end": 3258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "tag",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3298,
											"end": 3305,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3346,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3334,
											"end": 3347,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3327,
											"end": 3348,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3264,
											"end": 3354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "tag",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 3456,
											"end": 3461,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 3441,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "tag",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3436,
											"end": 3439,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3463,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3360,
											"end": 3469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3562,
											"end": 3566,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3602,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3589,
											"end": 3598,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3585,
											"end": 3603,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 3613,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "tag",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3475,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 3809,
											"name": "tag",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 3691,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 3796,
											"end": 3801,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 3778,
											"end": 3802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "tag",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3773,
											"end": 3776,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3766,
											"end": 3803,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 3809,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 3809,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 3809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3946,
											"end": 3948,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3935,
											"end": 3944,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3931,
											"end": 3949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3923,
											"end": 3949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3923,
											"end": 3949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3959,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 4027,
											"end": 4028,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4016,
											"end": 4025,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4012,
											"end": 4029,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4003,
											"end": 4009,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3959,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 3959,
											"end": 4030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3959,
											"end": 4030,
											"name": "tag",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 3959,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3815,
											"end": 4037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4136,
											"name": "tag",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 4043,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4079,
											"end": 4086,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4119,
											"end": 4129,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4112,
											"end": 4117,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4108,
											"end": 4130,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4097,
											"end": 4130,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4097,
											"end": 4130,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4136,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4136,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4136,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4142,
											"end": 4262,
											"name": "tag",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 4142,
											"end": 4262,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4214,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 4231,
											"end": 4236,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4214,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 4214,
											"end": 4237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4214,
											"end": 4237,
											"name": "tag",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 4214,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4207,
											"end": 4212,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4238,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4194,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 4194,
											"end": 4256,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4252,
											"end": 4253,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4254,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4194,
											"end": 4256,
											"name": "tag",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 4194,
											"end": 4256,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4142,
											"end": 4262,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4142,
											"end": 4262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4268,
											"end": 4405,
											"name": "tag",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 4268,
											"end": 4405,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4313,
											"end": 4318,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4357,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4338,
											"end": 4358,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4329,
											"end": 4358,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4329,
											"end": 4358,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4367,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 4393,
											"end": 4398,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4367,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 4367,
											"end": 4399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4367,
											"end": 4399,
											"name": "tag",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 4367,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4268,
											"end": 4405,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4268,
											"end": 4405,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4268,
											"end": 4405,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4268,
											"end": 4405,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4268,
											"end": 4405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4411,
											"end": 4738,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 4411,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4469,
											"end": 4475,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4518,
											"end": 4520,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4506,
											"end": 4515,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4497,
											"end": 4504,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4493,
											"end": 4516,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4489,
											"end": 4521,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4486,
											"end": 4605,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4486,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 4486,
											"end": 4605,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4524,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 4524,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 4524,
											"end": 4603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4524,
											"end": 4603,
											"name": "tag",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 4524,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4486,
											"end": 4605,
											"name": "tag",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 4486,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4644,
											"end": 4645,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4669,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 4713,
											"end": 4720,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4710,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4693,
											"end": 4702,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4689,
											"end": 4711,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4669,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 4669,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4669,
											"end": 4721,
											"name": "tag",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 4669,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4659,
											"end": 4721,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4659,
											"end": 4721,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4615,
											"end": 4731,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4411,
											"end": 4738,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4411,
											"end": 4738,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4411,
											"end": 4738,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4411,
											"end": 4738,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4411,
											"end": 4738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4744,
											"end": 4821,
											"name": "tag",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 4744,
											"end": 4821,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4781,
											"end": 4788,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4810,
											"end": 4815,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4799,
											"end": 4815,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4799,
											"end": 4815,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4744,
											"end": 4821,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4744,
											"end": 4821,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4744,
											"end": 4821,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4744,
											"end": 4821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4827,
											"end": 4945,
											"name": "tag",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 4827,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4914,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 4932,
											"end": 4937,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4914,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 4914,
											"end": 4938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4914,
											"end": 4938,
											"name": "tag",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 4914,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4909,
											"end": 4912,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4902,
											"end": 4939,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4827,
											"end": 4945,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4827,
											"end": 4945,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4827,
											"end": 4945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4951,
											"end": 5173,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 4951,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5048,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5082,
											"end": 5084,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5071,
											"end": 5080,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5067,
											"end": 5085,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5059,
											"end": 5085,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5059,
											"end": 5085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5095,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 5163,
											"end": 5164,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5161,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5148,
											"end": 5165,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5139,
											"end": 5145,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5095,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 5095,
											"end": 5166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5095,
											"end": 5166,
											"name": "tag",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 5095,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4951,
											"end": 5173,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4951,
											"end": 5173,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4951,
											"end": 5173,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4951,
											"end": 5173,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4951,
											"end": 5173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5179,
											"end": 5798,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 5179,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5262,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5264,
											"end": 5270,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5272,
											"end": 5278,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5321,
											"end": 5323,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5309,
											"end": 5318,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5300,
											"end": 5307,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5296,
											"end": 5319,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5292,
											"end": 5324,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5289,
											"end": 5408,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5289,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 5289,
											"end": 5408,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5327,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 5327,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 5327,
											"end": 5406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5327,
											"end": 5406,
											"name": "tag",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 5327,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5289,
											"end": 5408,
											"name": "tag",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 5289,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5447,
											"end": 5448,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5472,
											"end": 5525,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 5517,
											"end": 5524,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5508,
											"end": 5514,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5497,
											"end": 5506,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5493,
											"end": 5515,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5472,
											"end": 5525,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 5472,
											"end": 5525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5472,
											"end": 5525,
											"name": "tag",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 5472,
											"end": 5525,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5462,
											"end": 5525,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5462,
											"end": 5525,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5418,
											"end": 5535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5574,
											"end": 5576,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5600,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 5645,
											"end": 5652,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5636,
											"end": 5642,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5625,
											"end": 5634,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5621,
											"end": 5643,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5600,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 5600,
											"end": 5653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5600,
											"end": 5653,
											"name": "tag",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 5600,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5653,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5653,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5545,
											"end": 5663,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5702,
											"end": 5704,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5728,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5764,
											"end": 5770,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5753,
											"end": 5762,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5749,
											"end": 5771,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5728,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 5728,
											"end": 5781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5728,
											"end": 5781,
											"name": "tag",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 5728,
											"end": 5781,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5718,
											"end": 5781,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5718,
											"end": 5781,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5673,
											"end": 5791,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5179,
											"end": 5798,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5179,
											"end": 5798,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5179,
											"end": 5798,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5179,
											"end": 5798,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5179,
											"end": 5798,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5179,
											"end": 5798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5804,
											"end": 5926,
											"name": "tag",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 5804,
											"end": 5926,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5877,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 5895,
											"end": 5900,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5877,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 5877,
											"end": 5901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5877,
											"end": 5901,
											"name": "tag",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 5877,
											"end": 5901,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5870,
											"end": 5875,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5867,
											"end": 5902,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 5857,
											"end": 5920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 5857,
											"end": 5920,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5916,
											"end": 5917,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5913,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5906,
											"end": 5918,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5857,
											"end": 5920,
											"name": "tag",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 5857,
											"end": 5920,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5804,
											"end": 5926,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5804,
											"end": 5926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5932,
											"end": 6071,
											"name": "tag",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 5932,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5978,
											"end": 5983,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6016,
											"end": 6022,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5994,
											"end": 6023,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5994,
											"end": 6023,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6032,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "489"
										},
										{
											"begin": 6059,
											"end": 6064,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6032,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 6032,
											"end": 6065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6032,
											"end": 6065,
											"name": "tag",
											"source": 11,
											"value": "489"
										},
										{
											"begin": 6032,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5932,
											"end": 6071,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5932,
											"end": 6071,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5932,
											"end": 6071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5932,
											"end": 6071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5932,
											"end": 6071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6077,
											"end": 6549,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 6077,
											"end": 6549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6144,
											"end": 6150,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6152,
											"end": 6158,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6201,
											"end": 6203,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6189,
											"end": 6198,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6180,
											"end": 6187,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6176,
											"end": 6199,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6172,
											"end": 6204,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6169,
											"end": 6288,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6169,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "491"
										},
										{
											"begin": 6169,
											"end": 6288,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6207,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 6207,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 6207,
											"end": 6286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6207,
											"end": 6286,
											"name": "tag",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 6207,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6169,
											"end": 6288,
											"name": "tag",
											"source": 11,
											"value": "491"
										},
										{
											"begin": 6169,
											"end": 6288,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6327,
											"end": 6328,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6352,
											"end": 6404,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "493"
										},
										{
											"begin": 6396,
											"end": 6403,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6387,
											"end": 6393,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6376,
											"end": 6385,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6372,
											"end": 6394,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6352,
											"end": 6404,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 6352,
											"end": 6404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6352,
											"end": 6404,
											"name": "tag",
											"source": 11,
											"value": "493"
										},
										{
											"begin": 6352,
											"end": 6404,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6342,
											"end": 6404,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6342,
											"end": 6404,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6298,
											"end": 6414,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6453,
											"end": 6455,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6479,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 6524,
											"end": 6531,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6515,
											"end": 6521,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6504,
											"end": 6513,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6500,
											"end": 6522,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6479,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 6479,
											"end": 6532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6479,
											"end": 6532,
											"name": "tag",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 6479,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6469,
											"end": 6532,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6469,
											"end": 6532,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6424,
											"end": 6542,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6077,
											"end": 6549,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6077,
											"end": 6549,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6077,
											"end": 6549,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6077,
											"end": 6549,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6077,
											"end": 6549,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6077,
											"end": 6549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6555,
											"end": 6641,
											"name": "tag",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 6555,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6590,
											"end": 6597,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6630,
											"end": 6634,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6623,
											"end": 6628,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6619,
											"end": 6635,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6608,
											"end": 6635,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6608,
											"end": 6635,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6555,
											"end": 6641,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6555,
											"end": 6641,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6555,
											"end": 6641,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6555,
											"end": 6641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6647,
											"end": 6759,
											"name": "tag",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 6647,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6730,
											"end": 6752,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 6746,
											"end": 6751,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6730,
											"end": 6752,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 6730,
											"end": 6752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6730,
											"end": 6752,
											"name": "tag",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 6730,
											"end": 6752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6728,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6718,
											"end": 6753,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6647,
											"end": 6759,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6647,
											"end": 6759,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6647,
											"end": 6759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6765,
											"end": 6979,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 6765,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6854,
											"end": 6858,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6892,
											"end": 6894,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6881,
											"end": 6890,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6877,
											"end": 6895,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6869,
											"end": 6895,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6869,
											"end": 6895,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6905,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "499"
										},
										{
											"begin": 6969,
											"end": 6970,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6958,
											"end": 6967,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6954,
											"end": 6971,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6945,
											"end": 6951,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6905,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 6905,
											"end": 6972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6905,
											"end": 6972,
											"name": "tag",
											"source": 11,
											"value": "499"
										},
										{
											"begin": 6905,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6765,
											"end": 6979,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6765,
											"end": 6979,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6765,
											"end": 6979,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6765,
											"end": 6979,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6765,
											"end": 6979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6985,
											"end": 7314,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 6985,
											"end": 7314,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7044,
											"end": 7050,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7093,
											"end": 7095,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7081,
											"end": 7090,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7079,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7068,
											"end": 7091,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7096,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7061,
											"end": 7180,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7061,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "501"
										},
										{
											"begin": 7061,
											"end": 7180,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7099,
											"end": 7178,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 7099,
											"end": 7178,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 7099,
											"end": 7178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7099,
											"end": 7178,
											"name": "tag",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 7099,
											"end": 7178,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7061,
											"end": 7180,
											"name": "tag",
											"source": 11,
											"value": "501"
										},
										{
											"begin": 7061,
											"end": 7180,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7219,
											"end": 7220,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7244,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 7289,
											"end": 7296,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7280,
											"end": 7286,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7269,
											"end": 7278,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7265,
											"end": 7287,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7244,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 7244,
											"end": 7297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7244,
											"end": 7297,
											"name": "tag",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 7244,
											"end": 7297,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7297,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7297,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7190,
											"end": 7307,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6985,
											"end": 7314,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6985,
											"end": 7314,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6985,
											"end": 7314,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6985,
											"end": 7314,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6985,
											"end": 7314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7320,
											"end": 7649,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 7320,
											"end": 7649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7379,
											"end": 7385,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7428,
											"end": 7430,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7416,
											"end": 7425,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7407,
											"end": 7414,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7403,
											"end": 7426,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7399,
											"end": 7431,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7396,
											"end": 7515,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7396,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 7396,
											"end": 7515,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7434,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 7434,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 7434,
											"end": 7513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7434,
											"end": 7513,
											"name": "tag",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 7434,
											"end": 7513,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7396,
											"end": 7515,
											"name": "tag",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 7396,
											"end": 7515,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7554,
											"end": 7555,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7579,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7615,
											"end": 7621,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7604,
											"end": 7613,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7600,
											"end": 7622,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7579,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 7579,
											"end": 7632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7579,
											"end": 7632,
											"name": "tag",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 7579,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7569,
											"end": 7632,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7569,
											"end": 7632,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7525,
											"end": 7642,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7320,
											"end": 7649,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7320,
											"end": 7649,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7320,
											"end": 7649,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7320,
											"end": 7649,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7320,
											"end": 7649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7655,
											"end": 7772,
											"name": "tag",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 7655,
											"end": 7772,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7764,
											"end": 7765,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7761,
											"end": 7762,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7754,
											"end": 7766,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7778,
											"end": 7895,
											"name": "tag",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 7778,
											"end": 7895,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7887,
											"end": 7888,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7884,
											"end": 7885,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7877,
											"end": 7889,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7901,
											"end": 8018,
											"name": "tag",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 7901,
											"end": 8018,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8010,
											"end": 8011,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8007,
											"end": 8008,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8000,
											"end": 8012,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8037,
											"end": 8589,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 8037,
											"end": 8589,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8094,
											"end": 8102,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8104,
											"end": 8110,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8154,
											"end": 8157,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8147,
											"end": 8151,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 8139,
											"end": 8145,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8135,
											"end": 8152,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 8121,
											"end": 8243,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 8121,
											"end": 8243,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8162,
											"end": 8241,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 8162,
											"end": 8241,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 8162,
											"end": 8241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8162,
											"end": 8241,
											"name": "tag",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 8162,
											"end": 8241,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8121,
											"end": 8243,
											"name": "tag",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 8121,
											"end": 8243,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8275,
											"end": 8281,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8262,
											"end": 8282,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 8252,
											"end": 8282,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8252,
											"end": 8282,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8305,
											"end": 8323,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8297,
											"end": 8303,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8294,
											"end": 8324,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 8291,
											"end": 8408,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8291,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "514"
										},
										{
											"begin": 8291,
											"end": 8408,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8327,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 8327,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 8327,
											"end": 8406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8327,
											"end": 8406,
											"name": "tag",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 8327,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8291,
											"end": 8408,
											"name": "tag",
											"source": 11,
											"value": "514"
										},
										{
											"begin": 8291,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8441,
											"end": 8445,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8433,
											"end": 8439,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8429,
											"end": 8446,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8417,
											"end": 8446,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8417,
											"end": 8446,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8495,
											"end": 8498,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8487,
											"end": 8491,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 8479,
											"end": 8485,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8475,
											"end": 8492,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 8465,
											"end": 8473,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8461,
											"end": 8493,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8458,
											"end": 8499,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 8455,
											"end": 8583,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8455,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "516"
										},
										{
											"begin": 8455,
											"end": 8583,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8502,
											"end": 8581,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "517"
										},
										{
											"begin": 8502,
											"end": 8581,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 8502,
											"end": 8581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8502,
											"end": 8581,
											"name": "tag",
											"source": 11,
											"value": "517"
										},
										{
											"begin": 8502,
											"end": 8581,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8455,
											"end": 8583,
											"name": "tag",
											"source": 11,
											"value": "516"
										},
										{
											"begin": 8455,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8037,
											"end": 8589,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8037,
											"end": 8589,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8037,
											"end": 8589,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8037,
											"end": 8589,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8037,
											"end": 8589,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8037,
											"end": 8589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8595,
											"end": 9410,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 8595,
											"end": 9410,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8682,
											"end": 8688,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8690,
											"end": 8696,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8698,
											"end": 8704,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8706,
											"end": 8712,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8755,
											"end": 8757,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 8743,
											"end": 8752,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8734,
											"end": 8741,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 8730,
											"end": 8753,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8726,
											"end": 8758,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 8723,
											"end": 8842,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8723,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 8723,
											"end": 8842,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8761,
											"end": 8840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 8761,
											"end": 8840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 8761,
											"end": 8840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8761,
											"end": 8840,
											"name": "tag",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 8761,
											"end": 8840,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8723,
											"end": 8842,
											"name": "tag",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 8723,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8881,
											"end": 8882,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8906,
											"end": 8958,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "521"
										},
										{
											"begin": 8950,
											"end": 8957,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 8941,
											"end": 8947,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8930,
											"end": 8939,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8926,
											"end": 8948,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8906,
											"end": 8958,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 8906,
											"end": 8958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8906,
											"end": 8958,
											"name": "tag",
											"source": 11,
											"value": "521"
										},
										{
											"begin": 8906,
											"end": 8958,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8896,
											"end": 8958,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 8896,
											"end": 8958,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8852,
											"end": 8968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9007,
											"end": 9009,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9033,
											"end": 9086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "522"
										},
										{
											"begin": 9078,
											"end": 9085,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9069,
											"end": 9075,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9058,
											"end": 9067,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9054,
											"end": 9076,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9033,
											"end": 9086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 9033,
											"end": 9086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9033,
											"end": 9086,
											"name": "tag",
											"source": 11,
											"value": "522"
										},
										{
											"begin": 9033,
											"end": 9086,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9023,
											"end": 9086,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9023,
											"end": 9086,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8978,
											"end": 9096,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9163,
											"end": 9165,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9152,
											"end": 9161,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9148,
											"end": 9166,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9135,
											"end": 9167,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 9194,
											"end": 9212,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9186,
											"end": 9192,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9183,
											"end": 9213,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9180,
											"end": 9297,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9180,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "523"
										},
										{
											"begin": 9180,
											"end": 9297,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9216,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "524"
										},
										{
											"begin": 9216,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 9216,
											"end": 9295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9216,
											"end": 9295,
											"name": "tag",
											"source": 11,
											"value": "524"
										},
										{
											"begin": 9216,
											"end": 9295,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9180,
											"end": 9297,
											"name": "tag",
											"source": 11,
											"value": "523"
										},
										{
											"begin": 9180,
											"end": 9297,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9329,
											"end": 9393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "525"
										},
										{
											"begin": 9385,
											"end": 9392,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9376,
											"end": 9382,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9365,
											"end": 9374,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9361,
											"end": 9383,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9329,
											"end": 9393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 9329,
											"end": 9393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9329,
											"end": 9393,
											"name": "tag",
											"source": 11,
											"value": "525"
										},
										{
											"begin": 9329,
											"end": 9393,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9311,
											"end": 9393,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9311,
											"end": 9393,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9311,
											"end": 9393,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9311,
											"end": 9393,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9106,
											"end": 9403,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8595,
											"end": 9410,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8595,
											"end": 9410,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 8595,
											"end": 9410,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8595,
											"end": 9410,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 8595,
											"end": 9410,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8595,
											"end": 9410,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8595,
											"end": 9410,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8595,
											"end": 9410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9416,
											"end": 9890,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 9416,
											"end": 9890,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9484,
											"end": 9490,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9492,
											"end": 9498,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9541,
											"end": 9543,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9529,
											"end": 9538,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9520,
											"end": 9527,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9516,
											"end": 9539,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9512,
											"end": 9544,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 9509,
											"end": 9628,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9509,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "527"
										},
										{
											"begin": 9509,
											"end": 9628,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9547,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "528"
										},
										{
											"begin": 9547,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 9547,
											"end": 9626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9547,
											"end": 9626,
											"name": "tag",
											"source": 11,
											"value": "528"
										},
										{
											"begin": 9547,
											"end": 9626,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9509,
											"end": 9628,
											"name": "tag",
											"source": 11,
											"value": "527"
										},
										{
											"begin": 9509,
											"end": 9628,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9667,
											"end": 9668,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9692,
											"end": 9745,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "529"
										},
										{
											"begin": 9737,
											"end": 9744,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9728,
											"end": 9734,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9717,
											"end": 9726,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9713,
											"end": 9735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9692,
											"end": 9745,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 9692,
											"end": 9745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9692,
											"end": 9745,
											"name": "tag",
											"source": 11,
											"value": "529"
										},
										{
											"begin": 9692,
											"end": 9745,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9682,
											"end": 9745,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9682,
											"end": 9745,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9638,
											"end": 9755,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9794,
											"end": 9796,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9820,
											"end": 9873,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "530"
										},
										{
											"begin": 9865,
											"end": 9872,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9856,
											"end": 9862,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9845,
											"end": 9854,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9841,
											"end": 9863,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9820,
											"end": 9873,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 9820,
											"end": 9873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9820,
											"end": 9873,
											"name": "tag",
											"source": 11,
											"value": "530"
										},
										{
											"begin": 9820,
											"end": 9873,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9810,
											"end": 9873,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9810,
											"end": 9873,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9765,
											"end": 9883,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9416,
											"end": 9890,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9416,
											"end": 9890,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9416,
											"end": 9890,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9416,
											"end": 9890,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9416,
											"end": 9890,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9416,
											"end": 9890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9896,
											"end": 10076,
											"name": "tag",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 9896,
											"end": 10076,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9944,
											"end": 10021,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9941,
											"end": 9942,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9934,
											"end": 10022,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10041,
											"end": 10045,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 10038,
											"end": 10039,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10031,
											"end": 10046,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10065,
											"end": 10069,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10062,
											"end": 10063,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10055,
											"end": 10070,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10082,
											"end": 10273,
											"name": "tag",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 10082,
											"end": 10273,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10122,
											"end": 10125,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10141,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 10159,
											"end": 10160,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10141,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 10141,
											"end": 10161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10141,
											"end": 10161,
											"name": "tag",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 10141,
											"end": 10161,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10136,
											"end": 10161,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10136,
											"end": 10161,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10175,
											"end": 10195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 10193,
											"end": 10194,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10175,
											"end": 10195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 10175,
											"end": 10195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10175,
											"end": 10195,
											"name": "tag",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 10175,
											"end": 10195,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10170,
											"end": 10195,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10170,
											"end": 10195,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10218,
											"end": 10219,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10215,
											"end": 10216,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10211,
											"end": 10220,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10204,
											"end": 10220,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10204,
											"end": 10220,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10239,
											"end": 10242,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10236,
											"end": 10237,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10233,
											"end": 10243,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 10230,
											"end": 10266,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10230,
											"end": 10266,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "535"
										},
										{
											"begin": 10230,
											"end": 10266,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10246,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 10246,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 10246,
											"end": 10264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10246,
											"end": 10264,
											"name": "tag",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 10246,
											"end": 10264,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10230,
											"end": 10266,
											"name": "tag",
											"source": 11,
											"value": "535"
										},
										{
											"begin": 10230,
											"end": 10266,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10082,
											"end": 10273,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10082,
											"end": 10273,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10082,
											"end": 10273,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10082,
											"end": 10273,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10082,
											"end": 10273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10279,
											"end": 10459,
											"name": "tag",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 10279,
											"end": 10459,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10327,
											"end": 10404,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10324,
											"end": 10325,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10317,
											"end": 10405,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10424,
											"end": 10428,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 10421,
											"end": 10422,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10414,
											"end": 10429,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10448,
											"end": 10452,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10445,
											"end": 10446,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10438,
											"end": 10453,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10465,
											"end": 10785,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 10465,
											"end": 10785,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10509,
											"end": 10515,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10546,
											"end": 10547,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 10540,
											"end": 10544,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10536,
											"end": 10548,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10526,
											"end": 10548,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10526,
											"end": 10548,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10593,
											"end": 10594,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10587,
											"end": 10591,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10583,
											"end": 10595,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10614,
											"end": 10632,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10604,
											"end": 10685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "539"
										},
										{
											"begin": 10604,
											"end": 10685,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10670,
											"end": 10674,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 10662,
											"end": 10668,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10658,
											"end": 10675,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10648,
											"end": 10675,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10648,
											"end": 10675,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10604,
											"end": 10685,
											"name": "tag",
											"source": 11,
											"value": "539"
										},
										{
											"begin": 10604,
											"end": 10685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10732,
											"end": 10734,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10724,
											"end": 10730,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10721,
											"end": 10735,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10701,
											"end": 10719,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10698,
											"end": 10736,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10695,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "540"
										},
										{
											"begin": 10695,
											"end": 10779,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10751,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "541"
										},
										{
											"begin": 10751,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 10751,
											"end": 10769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10751,
											"end": 10769,
											"name": "tag",
											"source": 11,
											"value": "541"
										},
										{
											"begin": 10751,
											"end": 10769,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10695,
											"end": 10779,
											"name": "tag",
											"source": 11,
											"value": "540"
										},
										{
											"begin": 10695,
											"end": 10779,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10516,
											"end": 10785,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10465,
											"end": 10785,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10465,
											"end": 10785,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10465,
											"end": 10785,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10465,
											"end": 10785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10791,
											"end": 10967,
											"name": "tag",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 10791,
											"end": 10967,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10931,
											"end": 10959,
											"name": "PUSH",
											"source": 11,
											"value": "43616C6C6572206D75737420626520746865206D61696C626F78000000000000"
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10915,
											"end": 10929,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10908,
											"end": 10960,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10791,
											"end": 10967,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10791,
											"end": 10967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10973,
											"end": 11339,
											"name": "tag",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 10973,
											"end": 11339,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11115,
											"end": 11118,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11136,
											"end": 11203,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "544"
										},
										{
											"begin": 11200,
											"end": 11202,
											"name": "PUSH",
											"source": 11,
											"value": "1A"
										},
										{
											"begin": 11195,
											"end": 11198,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11136,
											"end": 11203,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 11136,
											"end": 11203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11136,
											"end": 11203,
											"name": "tag",
											"source": 11,
											"value": "544"
										},
										{
											"begin": 11136,
											"end": 11203,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11129,
											"end": 11203,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11129,
											"end": 11203,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11212,
											"end": 11305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "545"
										},
										{
											"begin": 11301,
											"end": 11304,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11212,
											"end": 11305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 11212,
											"end": 11305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11212,
											"end": 11305,
											"name": "tag",
											"source": 11,
											"value": "545"
										},
										{
											"begin": 11212,
											"end": 11305,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11330,
											"end": 11332,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11325,
											"end": 11328,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11321,
											"end": 11333,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10973,
											"end": 11339,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10973,
											"end": 11339,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10973,
											"end": 11339,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10973,
											"end": 11339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11345,
											"end": 11764,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 11345,
											"end": 11764,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11511,
											"end": 11515,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11549,
											"end": 11551,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11538,
											"end": 11547,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11534,
											"end": 11552,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11526,
											"end": 11552,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11526,
											"end": 11552,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11598,
											"end": 11607,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11592,
											"end": 11596,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11588,
											"end": 11608,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11584,
											"end": 11585,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11573,
											"end": 11582,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11569,
											"end": 11586,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11562,
											"end": 11609,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11626,
											"end": 11757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "547"
										},
										{
											"begin": 11752,
											"end": 11756,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11626,
											"end": 11757,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 11626,
											"end": 11757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11626,
											"end": 11757,
											"name": "tag",
											"source": 11,
											"value": "547"
										},
										{
											"begin": 11626,
											"end": 11757,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11618,
											"end": 11757,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11618,
											"end": 11757,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11345,
											"end": 11764,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11345,
											"end": 11764,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11345,
											"end": 11764,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11345,
											"end": 11764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11770,
											"end": 11949,
											"name": "tag",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 11770,
											"end": 11949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11910,
											"end": 11941,
											"name": "PUSH",
											"source": 11,
											"value": "53656E646572206D75737420626520747275737465642072656D6F7465000000"
										},
										{
											"begin": 11906,
											"end": 11907,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11898,
											"end": 11904,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11894,
											"end": 11908,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11887,
											"end": 11942,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11770,
											"end": 11949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11770,
											"end": 11949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11955,
											"end": 12321,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 11955,
											"end": 12321,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12097,
											"end": 12100,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12118,
											"end": 12185,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "550"
										},
										{
											"begin": 12182,
											"end": 12184,
											"name": "PUSH",
											"source": 11,
											"value": "1D"
										},
										{
											"begin": 12177,
											"end": 12180,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12118,
											"end": 12185,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 12118,
											"end": 12185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12118,
											"end": 12185,
											"name": "tag",
											"source": 11,
											"value": "550"
										},
										{
											"begin": 12118,
											"end": 12185,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12111,
											"end": 12185,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12111,
											"end": 12185,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12194,
											"end": 12287,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "551"
										},
										{
											"begin": 12283,
											"end": 12286,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12194,
											"end": 12287,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 12194,
											"end": 12287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12194,
											"end": 12287,
											"name": "tag",
											"source": 11,
											"value": "551"
										},
										{
											"begin": 12194,
											"end": 12287,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12312,
											"end": 12314,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12307,
											"end": 12310,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12303,
											"end": 12315,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12296,
											"end": 12315,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12296,
											"end": 12315,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11955,
											"end": 12321,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11955,
											"end": 12321,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11955,
											"end": 12321,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11955,
											"end": 12321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12327,
											"end": 12746,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 12327,
											"end": 12746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12493,
											"end": 12497,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12531,
											"end": 12533,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12520,
											"end": 12529,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12516,
											"end": 12534,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12508,
											"end": 12534,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12508,
											"end": 12534,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12580,
											"end": 12589,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12574,
											"end": 12578,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12570,
											"end": 12590,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12566,
											"end": 12567,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12555,
											"end": 12564,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12551,
											"end": 12568,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12544,
											"end": 12591,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12608,
											"end": 12739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "553"
										},
										{
											"begin": 12734,
											"end": 12738,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12608,
											"end": 12739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 12608,
											"end": 12739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12608,
											"end": 12739,
											"name": "tag",
											"source": 11,
											"value": "553"
										},
										{
											"begin": 12608,
											"end": 12739,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12600,
											"end": 12739,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12600,
											"end": 12739,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12327,
											"end": 12746,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12327,
											"end": 12746,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12327,
											"end": 12746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12327,
											"end": 12746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12752,
											"end": 12856,
											"name": "tag",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 12752,
											"end": 12856,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12797,
											"end": 12804,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12826,
											"end": 12850,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "555"
										},
										{
											"begin": 12844,
											"end": 12849,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12826,
											"end": 12850,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 12826,
											"end": 12850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12826,
											"end": 12850,
											"name": "tag",
											"source": 11,
											"value": "555"
										},
										{
											"begin": 12826,
											"end": 12850,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12815,
											"end": 12850,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12815,
											"end": 12850,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12752,
											"end": 12856,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12752,
											"end": 12856,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12752,
											"end": 12856,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12752,
											"end": 12856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12862,
											"end": 13000,
											"name": "tag",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 12862,
											"end": 13000,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12943,
											"end": 12975,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "557"
										},
										{
											"begin": 12969,
											"end": 12974,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12943,
											"end": 12975,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 12943,
											"end": 12975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12943,
											"end": 12975,
											"name": "tag",
											"source": 11,
											"value": "557"
										},
										{
											"begin": 12943,
											"end": 12975,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12936,
											"end": 12941,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12933,
											"end": 12976,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 12923,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "558"
										},
										{
											"begin": 12923,
											"end": 12994,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12990,
											"end": 12991,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12987,
											"end": 12988,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12980,
											"end": 12992,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 12923,
											"end": 12994,
											"name": "tag",
											"source": 11,
											"value": "558"
										},
										{
											"begin": 12923,
											"end": 12994,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12862,
											"end": 13000,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12862,
											"end": 13000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13006,
											"end": 13161,
											"name": "tag",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 13006,
											"end": 13161,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13060,
											"end": 13065,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13098,
											"end": 13104,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13085,
											"end": 13105,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 13076,
											"end": 13105,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13076,
											"end": 13105,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13114,
											"end": 13155,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "560"
										},
										{
											"begin": 13149,
											"end": 13154,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13114,
											"end": 13155,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 13114,
											"end": 13155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13114,
											"end": 13155,
											"name": "tag",
											"source": 11,
											"value": "560"
										},
										{
											"begin": 13114,
											"end": 13155,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13006,
											"end": 13161,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13006,
											"end": 13161,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13006,
											"end": 13161,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13006,
											"end": 13161,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13006,
											"end": 13161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13167,
											"end": 13657,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 13167,
											"end": 13657,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13243,
											"end": 13249,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13251,
											"end": 13257,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13300,
											"end": 13302,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13288,
											"end": 13297,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13279,
											"end": 13286,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13275,
											"end": 13298,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13271,
											"end": 13303,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 13268,
											"end": 13387,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13268,
											"end": 13387,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "562"
										},
										{
											"begin": 13268,
											"end": 13387,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13306,
											"end": 13385,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "563"
										},
										{
											"begin": 13306,
											"end": 13385,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 13306,
											"end": 13385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13306,
											"end": 13385,
											"name": "tag",
											"source": 11,
											"value": "563"
										},
										{
											"begin": 13306,
											"end": 13385,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13268,
											"end": 13387,
											"name": "tag",
											"source": 11,
											"value": "562"
										},
										{
											"begin": 13268,
											"end": 13387,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13426,
											"end": 13427,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13451,
											"end": 13512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "564"
										},
										{
											"begin": 13504,
											"end": 13511,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13495,
											"end": 13501,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13484,
											"end": 13493,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 13480,
											"end": 13502,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13451,
											"end": 13512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 13451,
											"end": 13512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13451,
											"end": 13512,
											"name": "tag",
											"source": 11,
											"value": "564"
										},
										{
											"begin": 13451,
											"end": 13512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13441,
											"end": 13512,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13441,
											"end": 13512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13397,
											"end": 13522,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13561,
											"end": 13563,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13587,
											"end": 13640,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "565"
										},
										{
											"begin": 13632,
											"end": 13639,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13623,
											"end": 13629,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13612,
											"end": 13621,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 13608,
											"end": 13630,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13587,
											"end": 13640,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 13587,
											"end": 13640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13587,
											"end": 13640,
											"name": "tag",
											"source": 11,
											"value": "565"
										},
										{
											"begin": 13587,
											"end": 13640,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13577,
											"end": 13640,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13577,
											"end": 13640,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13532,
											"end": 13650,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13167,
											"end": 13657,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13167,
											"end": 13657,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13167,
											"end": 13657,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13167,
											"end": 13657,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13167,
											"end": 13657,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13167,
											"end": 13657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13663,
											"end": 13840,
											"name": "tag",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 13663,
											"end": 13840,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13803,
											"end": 13832,
											"name": "PUSH",
											"source": 11,
											"value": "43616C6C6572206973206E6F7420612067616D65206D61737465720000000000"
										},
										{
											"begin": 13799,
											"end": 13800,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13791,
											"end": 13797,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13787,
											"end": 13801,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13780,
											"end": 13833,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13663,
											"end": 13840,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13663,
											"end": 13840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13846,
											"end": 14212,
											"name": "tag",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 13846,
											"end": 14212,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13988,
											"end": 13991,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14009,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "568"
										},
										{
											"begin": 14073,
											"end": 14075,
											"name": "PUSH",
											"source": 11,
											"value": "1B"
										},
										{
											"begin": 14068,
											"end": 14071,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14009,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 14009,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14009,
											"end": 14076,
											"name": "tag",
											"source": 11,
											"value": "568"
										},
										{
											"begin": 14009,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14002,
											"end": 14076,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14002,
											"end": 14076,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14085,
											"end": 14178,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "569"
										},
										{
											"begin": 14174,
											"end": 14177,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14085,
											"end": 14178,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 14085,
											"end": 14178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14085,
											"end": 14178,
											"name": "tag",
											"source": 11,
											"value": "569"
										},
										{
											"begin": 14085,
											"end": 14178,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14203,
											"end": 14205,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14198,
											"end": 14201,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14194,
											"end": 14206,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14187,
											"end": 14206,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14187,
											"end": 14206,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13846,
											"end": 14212,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13846,
											"end": 14212,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13846,
											"end": 14212,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13846,
											"end": 14212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14218,
											"end": 14637,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 14218,
											"end": 14637,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14384,
											"end": 14388,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14422,
											"end": 14424,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14411,
											"end": 14420,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14407,
											"end": 14425,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14399,
											"end": 14425,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14399,
											"end": 14425,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14471,
											"end": 14480,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14465,
											"end": 14469,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14461,
											"end": 14481,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14457,
											"end": 14458,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14446,
											"end": 14455,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14442,
											"end": 14459,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14435,
											"end": 14482,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14499,
											"end": 14630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "571"
										},
										{
											"begin": 14625,
											"end": 14629,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14499,
											"end": 14630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 14499,
											"end": 14630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14499,
											"end": 14630,
											"name": "tag",
											"source": 11,
											"value": "571"
										},
										{
											"begin": 14499,
											"end": 14630,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14491,
											"end": 14630,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14491,
											"end": 14630,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14218,
											"end": 14637,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14218,
											"end": 14637,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14218,
											"end": 14637,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14218,
											"end": 14637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14643,
											"end": 15085,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 14643,
											"end": 15085,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14792,
											"end": 14796,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14830,
											"end": 14832,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 14819,
											"end": 14828,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14815,
											"end": 14833,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14807,
											"end": 14833,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14807,
											"end": 14833,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14843,
											"end": 14914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "573"
										},
										{
											"begin": 14911,
											"end": 14912,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14900,
											"end": 14909,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14896,
											"end": 14913,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14887,
											"end": 14893,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 14843,
											"end": 14914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 14843,
											"end": 14914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14843,
											"end": 14914,
											"name": "tag",
											"source": 11,
											"value": "573"
										},
										{
											"begin": 14843,
											"end": 14914,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14924,
											"end": 14996,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "574"
										},
										{
											"begin": 14992,
											"end": 14994,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14981,
											"end": 14990,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14968,
											"end": 14974,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14924,
											"end": 14996,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 14924,
											"end": 14996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14924,
											"end": 14996,
											"name": "tag",
											"source": 11,
											"value": "574"
										},
										{
											"begin": 14924,
											"end": 14996,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15006,
											"end": 15078,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "575"
										},
										{
											"begin": 15074,
											"end": 15076,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15063,
											"end": 15072,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15059,
											"end": 15077,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15050,
											"end": 15056,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15006,
											"end": 15078,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 15006,
											"end": 15078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15006,
											"end": 15078,
											"name": "tag",
											"source": 11,
											"value": "575"
										},
										{
											"begin": 15006,
											"end": 15078,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14643,
											"end": 15085,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 14643,
											"end": 15085,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 14643,
											"end": 15085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14643,
											"end": 15085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14643,
											"end": 15085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14643,
											"end": 15085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14643,
											"end": 15085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15091,
											"end": 15259,
											"name": "tag",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 15091,
											"end": 15259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15231,
											"end": 15251,
											"name": "PUSH",
											"source": 11,
											"value": "4D617820737570706C7920726561636865640000000000000000000000000000"
										},
										{
											"begin": 15227,
											"end": 15228,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15219,
											"end": 15225,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15215,
											"end": 15229,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15208,
											"end": 15252,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15091,
											"end": 15259,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15091,
											"end": 15259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15265,
											"end": 15631,
											"name": "tag",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 15265,
											"end": 15631,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15407,
											"end": 15410,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15428,
											"end": 15495,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "578"
										},
										{
											"begin": 15492,
											"end": 15494,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 15487,
											"end": 15490,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15428,
											"end": 15495,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 15428,
											"end": 15495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15428,
											"end": 15495,
											"name": "tag",
											"source": 11,
											"value": "578"
										},
										{
											"begin": 15428,
											"end": 15495,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15421,
											"end": 15495,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15421,
											"end": 15495,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15504,
											"end": 15597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "579"
										},
										{
											"begin": 15593,
											"end": 15596,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15504,
											"end": 15597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 15504,
											"end": 15597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15504,
											"end": 15597,
											"name": "tag",
											"source": 11,
											"value": "579"
										},
										{
											"begin": 15504,
											"end": 15597,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15622,
											"end": 15624,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15617,
											"end": 15620,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15613,
											"end": 15625,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15606,
											"end": 15625,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15606,
											"end": 15625,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15265,
											"end": 15631,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15265,
											"end": 15631,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15265,
											"end": 15631,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15265,
											"end": 15631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15637,
											"end": 16056,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 15637,
											"end": 16056,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15803,
											"end": 15807,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15841,
											"end": 15843,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15830,
											"end": 15839,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15826,
											"end": 15844,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15818,
											"end": 15844,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15818,
											"end": 15844,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15890,
											"end": 15899,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15884,
											"end": 15888,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15880,
											"end": 15900,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15876,
											"end": 15877,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15865,
											"end": 15874,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15861,
											"end": 15878,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15854,
											"end": 15901,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15918,
											"end": 16049,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "581"
										},
										{
											"begin": 16044,
											"end": 16048,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15918,
											"end": 16049,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 15918,
											"end": 16049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15918,
											"end": 16049,
											"name": "tag",
											"source": 11,
											"value": "581"
										},
										{
											"begin": 15918,
											"end": 16049,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15910,
											"end": 16049,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15910,
											"end": 16049,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15637,
											"end": 16056,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15637,
											"end": 16056,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15637,
											"end": 16056,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15637,
											"end": 16056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16062,
											"end": 16256,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 16062,
											"end": 16256,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16102,
											"end": 16106,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16122,
											"end": 16142,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "583"
										},
										{
											"begin": 16140,
											"end": 16141,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16122,
											"end": 16142,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 16122,
											"end": 16142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16122,
											"end": 16142,
											"name": "tag",
											"source": 11,
											"value": "583"
										},
										{
											"begin": 16122,
											"end": 16142,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16117,
											"end": 16142,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16117,
											"end": 16142,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16156,
											"end": 16176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "584"
										},
										{
											"begin": 16174,
											"end": 16175,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16156,
											"end": 16176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 16156,
											"end": 16176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16156,
											"end": 16176,
											"name": "tag",
											"source": 11,
											"value": "584"
										},
										{
											"begin": 16156,
											"end": 16176,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16151,
											"end": 16176,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16151,
											"end": 16176,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16200,
											"end": 16201,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16197,
											"end": 16198,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16193,
											"end": 16202,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 16185,
											"end": 16202,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16185,
											"end": 16202,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16224,
											"end": 16225,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16218,
											"end": 16222,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16215,
											"end": 16226,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 16212,
											"end": 16249,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16212,
											"end": 16249,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "585"
										},
										{
											"begin": 16212,
											"end": 16249,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16229,
											"end": 16247,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "586"
										},
										{
											"begin": 16229,
											"end": 16247,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 16229,
											"end": 16247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16229,
											"end": 16247,
											"name": "tag",
											"source": 11,
											"value": "586"
										},
										{
											"begin": 16229,
											"end": 16247,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16212,
											"end": 16249,
											"name": "tag",
											"source": 11,
											"value": "585"
										},
										{
											"begin": 16212,
											"end": 16249,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16062,
											"end": 16256,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16062,
											"end": 16256,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16062,
											"end": 16256,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16062,
											"end": 16256,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16062,
											"end": 16256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16262,
											"end": 16438,
											"name": "tag",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 16262,
											"end": 16438,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16402,
											"end": 16430,
											"name": "PUSH",
											"source": 11,
											"value": "4461696C7920726577617264206C696D69742072656163686564000000000000"
										},
										{
											"begin": 16398,
											"end": 16399,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16390,
											"end": 16396,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16386,
											"end": 16400,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16379,
											"end": 16431,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16262,
											"end": 16438,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16262,
											"end": 16438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16444,
											"end": 16810,
											"name": "tag",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 16444,
											"end": 16810,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16586,
											"end": 16589,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16607,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "589"
										},
										{
											"begin": 16671,
											"end": 16673,
											"name": "PUSH",
											"source": 11,
											"value": "1A"
										},
										{
											"begin": 16666,
											"end": 16669,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16607,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 16607,
											"end": 16674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16607,
											"end": 16674,
											"name": "tag",
											"source": 11,
											"value": "589"
										},
										{
											"begin": 16607,
											"end": 16674,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16600,
											"end": 16674,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16600,
											"end": 16674,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16683,
											"end": 16776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "590"
										},
										{
											"begin": 16772,
											"end": 16775,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16683,
											"end": 16776,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 16683,
											"end": 16776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16683,
											"end": 16776,
											"name": "tag",
											"source": 11,
											"value": "590"
										},
										{
											"begin": 16683,
											"end": 16776,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16801,
											"end": 16803,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16796,
											"end": 16799,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16792,
											"end": 16804,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16785,
											"end": 16804,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16785,
											"end": 16804,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16444,
											"end": 16810,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16444,
											"end": 16810,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16444,
											"end": 16810,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16444,
											"end": 16810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16816,
											"end": 17235,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 16816,
											"end": 17235,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16982,
											"end": 16986,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17020,
											"end": 17022,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17009,
											"end": 17018,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17005,
											"end": 17023,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16997,
											"end": 17023,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16997,
											"end": 17023,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17069,
											"end": 17078,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17063,
											"end": 17067,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17059,
											"end": 17079,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 17055,
											"end": 17056,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17044,
											"end": 17053,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17040,
											"end": 17057,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17033,
											"end": 17080,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17097,
											"end": 17228,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "592"
										},
										{
											"begin": 17223,
											"end": 17227,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17097,
											"end": 17228,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 17097,
											"end": 17228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17097,
											"end": 17228,
											"name": "tag",
											"source": 11,
											"value": "592"
										},
										{
											"begin": 17097,
											"end": 17228,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17089,
											"end": 17228,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17089,
											"end": 17228,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16816,
											"end": 17235,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16816,
											"end": 17235,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16816,
											"end": 17235,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16816,
											"end": 17235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17241,
											"end": 17417,
											"name": "tag",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 17241,
											"end": 17417,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17381,
											"end": 17409,
											"name": "PUSH",
											"source": 11,
											"value": "5265776172642065786365656473206461696C79206C696D6974000000000000"
										},
										{
											"begin": 17377,
											"end": 17378,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17369,
											"end": 17375,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17365,
											"end": 17379,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17358,
											"end": 17410,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17241,
											"end": 17417,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17241,
											"end": 17417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17423,
											"end": 17789,
											"name": "tag",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 17423,
											"end": 17789,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17565,
											"end": 17568,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17586,
											"end": 17653,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "595"
										},
										{
											"begin": 17650,
											"end": 17652,
											"name": "PUSH",
											"source": 11,
											"value": "1A"
										},
										{
											"begin": 17645,
											"end": 17648,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17586,
											"end": 17653,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 17586,
											"end": 17653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17586,
											"end": 17653,
											"name": "tag",
											"source": 11,
											"value": "595"
										},
										{
											"begin": 17586,
											"end": 17653,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17579,
											"end": 17653,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17579,
											"end": 17653,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17662,
											"end": 17755,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "596"
										},
										{
											"begin": 17751,
											"end": 17754,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17662,
											"end": 17755,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 17662,
											"end": 17755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17662,
											"end": 17755,
											"name": "tag",
											"source": 11,
											"value": "596"
										},
										{
											"begin": 17662,
											"end": 17755,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17780,
											"end": 17782,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17775,
											"end": 17778,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17771,
											"end": 17783,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17764,
											"end": 17783,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17764,
											"end": 17783,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17423,
											"end": 17789,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17423,
											"end": 17789,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17423,
											"end": 17789,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17423,
											"end": 17789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17795,
											"end": 18214,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 17795,
											"end": 18214,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17961,
											"end": 17965,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17999,
											"end": 18001,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17988,
											"end": 17997,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17984,
											"end": 18002,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17976,
											"end": 18002,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17976,
											"end": 18002,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18048,
											"end": 18057,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18042,
											"end": 18046,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18038,
											"end": 18058,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 18034,
											"end": 18035,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18023,
											"end": 18032,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18019,
											"end": 18036,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18012,
											"end": 18059,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18076,
											"end": 18207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "598"
										},
										{
											"begin": 18202,
											"end": 18206,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18076,
											"end": 18207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 18076,
											"end": 18207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18076,
											"end": 18207,
											"name": "tag",
											"source": 11,
											"value": "598"
										},
										{
											"begin": 18076,
											"end": 18207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18068,
											"end": 18207,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18068,
											"end": 18207,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17795,
											"end": 18214,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17795,
											"end": 18214,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17795,
											"end": 18214,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17795,
											"end": 18214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@hyperlane-xyz/core/contracts/interfaces/IMessageRecipient.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"contracts/ERC20Reward.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DAILY_REWARD_LIMIT()": "bca12299",
							"MAX_SUPPLY()": "32cb6b0c",
							"addGameMaster(address)": "8b1c7b10",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"gameMasters(address)": "4080d640",
							"getTokenId()": "010a38f5",
							"handle(uint32,bytes32,bytes)": "56d5d475",
							"hyperlaneMailbox()": "1a6e4db4",
							"lastRewardTime(address)": "3b5d441e",
							"mintReward(address,uint256)": "9a49090e",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"removeGameMaster(address)": "dfca5ce3",
							"renounceOwnership()": "715018a6",
							"setMailbox(address)": "f3c61d6b",
							"setTrustedRemote(uint32,bytes32)": "2bda3e0b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"trustedRemotes(uint32)": "1d187c50",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hyperlaneMailbox\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"gameMaster\",\"type\":\"address\"}],\"name\":\"GameMasterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"gameMaster\",\"type\":\"address\"}],\"name\":\"GameMasterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DAILY_REWARD_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gameMaster\",\"type\":\"address\"}],\"name\":\"addGameMaster\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"gameMasters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_origin\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_body\",\"type\":\"bytes\"}],\"name\":\"handle\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hyperlaneMailbox\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastRewardTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gameMaster\",\"type\":\"address\"}],\"name\":\"removeGameMaster\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mailbox\",\"type\":\"address\"}],\"name\":\"setMailbox\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_domain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_trustedRemote\",\"type\":\"bytes32\"}],\"name\":\"setTrustedRemote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"trustedRemotes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20Reward.sol\":\"ERC20Reward\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@hyperlane-xyz/core/contracts/interfaces/IMessageRecipient.sol\":{\"keccak256\":\"0x145e8332a91295a710deb3cb1ab689144262ef6ec66d9570c600b778e9dd964d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://a22ad97b1d8d3a37e8b4ad1519b893ac7cdf718c3a340999ffef4fb04060f119\",\"dweb:/ipfs/QmXp3w8yPm1vHyNrrSLr4YtRMP44eLadHnXSAjSecqB7H6\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99\",\"dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"contracts/ERC20Reward.sol\":{\"keccak256\":\"0x95f116eabbb82cde66e48ca850d6b8dc1be4ff4bde3a4d0ed2d4faa19cf0b927\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d2624f695890883d79c6c7217bcb925d2d0ab18f0542bb393e3e1ed8f12d6a3\",\"dweb:/ipfs/QmcYfgTVAENHiFMyEAVwJVkncf5ExA9wYPTKJtLx4wpWjs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 319,
								"contract": "contracts/ERC20Reward.sol:ERC20Reward",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 325,
								"contract": "contracts/ERC20Reward.sol:ERC20Reward",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 327,
								"contract": "contracts/ERC20Reward.sol:ERC20Reward",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 329,
								"contract": "contracts/ERC20Reward.sol:ERC20Reward",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 331,
								"contract": "contracts/ERC20Reward.sol:ERC20Reward",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1034,
								"contract": "contracts/ERC20Reward.sol:ERC20Reward",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 20,
								"contract": "contracts/ERC20Reward.sol:ERC20Reward",
								"label": "_owner",
								"offset": 1,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1159,
								"contract": "contracts/ERC20Reward.sol:ERC20Reward",
								"label": "hyperlaneMailbox",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1163,
								"contract": "contracts/ERC20Reward.sol:ERC20Reward",
								"label": "trustedRemotes",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint32,t_bytes32)"
							},
							{
								"astId": 1181,
								"contract": "contracts/ERC20Reward.sol:ERC20Reward",
								"label": "gameMasters",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1185,
								"contract": "contracts/ERC20Reward.sol:ERC20Reward",
								"label": "lastRewardTime",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1187,
								"contract": "contracts/ERC20Reward.sol:ERC20Reward",
								"label": "_tokenIdCounter",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint32,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint32",
								"label": "mapping(uint32 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@hyperlane-xyz/core/contracts/interfaces/IMessageRecipient.sol": {
				"ast": {
					"absolutePath": "@hyperlane-xyz/core/contracts/interfaces/IMessageRecipient.sol",
					"exportedSymbols": {
						"IMessageRecipient": [
							11
						]
					},
					"id": 12,
					"license": "MIT OR Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "46:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMessageRecipient",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 11,
							"linearizedBaseContracts": [
								11
							],
							"name": "IMessageRecipient",
							"nameLocation": "83:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "56d5d475",
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "handle",
									"nameLocation": "116:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "_origin",
												"nameLocation": "139:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "132:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "132:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "164:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "156:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "156:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "_message",
												"nameLocation": "196:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "181:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 6,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "181:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "122:88:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "227:0:0"
									},
									"scope": 11,
									"src": "107:121:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 12,
							"src": "73:157:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:185:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1025
						],
						"Ownable": [
							159
						]
					},
					"id": 160,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 13,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 15,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 160,
							"sourceUnit": 1026,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 14,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1025,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 17,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1025,
										"src": "692:7:1"
									},
									"id": 18,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 16,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 159,
							"linearizedBaseContracts": [
								159,
								1025
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 20,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 159,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 19,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 25,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 30,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 36,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 42,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 43,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 56,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 55,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 51,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 50,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 49,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 52,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 48,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 54,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 58,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 57,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 62,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 159,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 65,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 68,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 70,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 76,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 20,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 75,
												"id": 77,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 159,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 83,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 85,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 94,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 93,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 89,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1007,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 90,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 88,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 92,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 159,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 103,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 102,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 100,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 99,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 70,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 159,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 118,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 119,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 132,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 131,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 127,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 125,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 124,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 130,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 134,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 133,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 116,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 115,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 70,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 159,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 144,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 147,
												"initialValue": {
													"id": 146,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 20,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 148,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 149,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 153,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 154,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 152,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 159,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 160,
							"src": "663:2438:1",
							"usedErrors": [
								25,
								30
							],
							"usedEvents": [
								36
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							296
						],
						"IERC20Errors": [
							201
						],
						"IERC721Errors": [
							249
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 161,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 162,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:2",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 201,
							"linearizedBaseContracts": [
								201
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 171,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "668:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "685:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:2"
									},
									"src": "621:80:2"
								},
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 176,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "889:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:2"
									},
									"src": "864:41:2"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 181,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1102:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:2"
									},
									"src": "1075:45:2"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 190,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1509:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1526:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1545:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:2"
									},
									"src": "1476:85:2"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 195,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "1773:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:2"
									},
									"src": "1746:45:2"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 200,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:2"
									},
									"src": "1997:43:2"
								}
							],
							"scope": 297,
							"src": "278:1764:2",
							"usedErrors": [
								171,
								176,
								181,
								190,
								195,
								200
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 202,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:2",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 249,
							"linearizedBaseContracts": [
								249
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 207,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "2465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:2"
									},
									"src": "2440:40:2"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 212,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2652:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:2"
									},
									"src": "2623:46:2"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 221,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2996:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "3012:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "3029:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:2"
									},
									"src": "2969:75:2"
								},
								{
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 226,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3233:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:2"
									},
									"src": "3207:42:2"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 231,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "3447:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:2"
									},
									"src": "3419:46:2"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 238,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "3756:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "3774:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:2"
									},
									"src": "3723:68:2"
								},
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 243,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "4004:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:2"
									},
									"src": "3976:46:2"
								},
								{
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 248,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "4258:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:2"
									},
									"src": "4230:46:2"
								}
							],
							"scope": 297,
							"src": "2186:2092:2",
							"usedErrors": [
								207,
								212,
								221,
								226,
								231,
								238,
								243,
								248
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 250,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:2",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 261,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "4854:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "4870:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "4887:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "4903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:2"
									},
									"src": "4821:99:2"
								},
								{
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 266,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5110:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:2"
									},
									"src": "5083:43:2"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 271,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5325:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:2"
									},
									"src": "5296:47:2"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 278,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "5645:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "5663:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:2"
									},
									"src": "5610:68:2"
								},
								{
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 283,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "5892:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:2"
									},
									"src": "5863:47:2"
								},
								{
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 288,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "6147:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:2"
									},
									"src": "6118:47:2"
								},
								{
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 295,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6488:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6507:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:2"
									},
									"src": "6456:73:2"
								}
							],
							"scope": 297,
							"src": "4424:2107:2",
							"usedErrors": [
								261,
								266,
								271,
								278,
								283,
								288,
								295
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1025
						],
						"ERC20": [
							811
						],
						"IERC20": [
							889
						],
						"IERC20Errors": [
							201
						],
						"IERC20Metadata": [
							995
						]
					},
					"id": 812,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 300,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 812,
							"sourceUnit": 890,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 299,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 889,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 302,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 812,
							"sourceUnit": 996,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 301,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 995,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 304,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 812,
							"sourceUnit": 1026,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 303,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1025,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 306,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 812,
							"sourceUnit": 297,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 305,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 201,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 308,
										"name": "Context",
										"nameLocations": [
											"1428:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1025,
										"src": "1428:7:3"
									},
									"id": 309,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:3"
								},
								{
									"baseName": {
										"id": 310,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 889,
										"src": "1437:6:3"
									},
									"id": 311,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:3"
								},
								{
									"baseName": {
										"id": 312,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 995,
										"src": "1445:14:3"
									},
									"id": 313,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:3"
								},
								{
									"baseName": {
										"id": 314,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 201,
										"src": "1461:12:3"
									},
									"id": 315,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 307,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 811,
							"linearizedBaseContracts": [
								811,
								201,
								995,
								889,
								1025
							],
							"name": "ERC20",
							"nameLocation": "1419:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 811,
									"src": "1480:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 318,
										"keyName": "account",
										"keyNameLocation": "1496:7:3",
										"keyType": {
											"id": 316,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 317,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 325,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 811,
									"src": "1540:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 324,
										"keyName": "account",
										"keyNameLocation": "1556:7:3",
										"keyType": {
											"id": 320,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 323,
											"keyName": "spender",
											"keyNameLocation": "1583:7:3",
											"keyType": {
												"id": 321,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 322,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 327,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 811,
									"src": "1630:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 326,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 329,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 811,
									"src": "1665:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 328,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 331,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 811,
									"src": "1691:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 330,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "1952:57:3",
										"statements": [
											{
												"expression": {
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 339,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "1962:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 340,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "1970:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 342,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:3"
											},
											{
												"expression": {
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 343,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "1985:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 344,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "1995:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:3"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 348,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "1908:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 333,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "1929:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 335,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:3"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:3"
									},
									"scope": 811,
									"src": "1896:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										982
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "2134:29:3",
										"statements": [
											{
												"expression": {
													"id": 354,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 329,
													"src": "2151:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 353,
												"id": 355,
												"nodeType": "Return",
												"src": "2144:12:3"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:3"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "2119:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 351,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:3"
									},
									"scope": 811,
									"src": "2074:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										988
									],
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "2338:31:3",
										"statements": [
											{
												"expression": {
													"id": 363,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 331,
													"src": "2355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 362,
												"id": 364,
												"nodeType": "Return",
												"src": "2348:14:3"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:3"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "2323:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 360,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:3"
									},
									"scope": 811,
									"src": "2276:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										994
									],
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "3058:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 371,
												"id": 373,
												"nodeType": "Return",
												"src": "3068:9:3"
											}
										]
									},
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:3"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "3051:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 369,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:3"
									},
									"scope": 811,
									"src": "3002:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										838
									],
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "3205:36:3",
										"statements": [
											{
												"expression": {
													"id": 381,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 327,
													"src": "3222:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 380,
												"id": 382,
												"nodeType": "Return",
												"src": "3215:19:3"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:3"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "3196:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:3"
									},
									"scope": 811,
									"src": "3144:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										846
									],
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "3373:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 392,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "3390:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 394,
													"indexExpression": {
														"id": 393,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "3400:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 391,
												"id": 395,
												"nodeType": "Return",
												"src": "3383:25:3"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3318:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:3"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3364:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:3"
									},
									"scope": 811,
									"src": "3299:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										856
									],
									"body": {
										"id": 420,
										"nodeType": "Block",
										"src": "3685:103:3",
										"statements": [
											{
												"assignments": [
													408
												],
												"declarations": [
													{
														"constant": false,
														"id": 408,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 420,
														"src": "3695:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 407,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 411,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 409,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "3711:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "3743:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 414,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "3750:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "3754:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 412,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "3733:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 406,
												"id": 419,
												"nodeType": "Return",
												"src": "3770:11:3"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "3628:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "3640:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:3"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "3679:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 404,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:3"
									},
									"scope": 811,
									"src": "3610:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										866
									],
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "3935:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 431,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "3952:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 433,
														"indexExpression": {
															"id": 432,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "3964:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 435,
													"indexExpression": {
														"id": 434,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "3971:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 430,
												"id": 436,
												"nodeType": "Return",
												"src": "3945:34:3"
											}
										]
									},
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3865:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3880:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:3"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:3"
									},
									"scope": 811,
									"src": "3846:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "4372:107:3",
										"statements": [
											{
												"assignments": [
													449
												],
												"declarations": [
													{
														"constant": false,
														"id": 449,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 461,
														"src": "4382:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 448,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 452,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 450,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "4398:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 454,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "4429:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 455,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "4436:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 456,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "4445:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 453,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															702,
															762
														],
														"referencedDeclaration": 702,
														"src": "4420:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 447,
												"id": 460,
												"nodeType": "Return",
												"src": "4461:11:3"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4310:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4327:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:3"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4366:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 445,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:3"
									},
									"scope": 811,
									"src": "4293:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										888
									],
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "5132:151:3",
										"statements": [
											{
												"assignments": [
													475
												],
												"declarations": [
													{
														"constant": false,
														"id": 475,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 493,
														"src": "5142:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 474,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 478,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 476,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "5160:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 480,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "5198:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 481,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "5204:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 482,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "5213:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 479,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "5182:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 486,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "5239:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "5245:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 488,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "5249:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 485,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "5229:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 473,
												"id": 492,
												"nodeType": "Return",
												"src": "5265:11:3"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "5061:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "5075:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "5087:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:3"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "5126:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 471,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:3"
									},
									"scope": 811,
									"src": "5039:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "5725:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 504,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "5739:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 505,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 518,
												"nodeType": "IfStatement",
												"src": "5735:86:3",
												"trueBody": {
													"id": 517,
													"nodeType": "Block",
													"src": "5759:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 513,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 512,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 511,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 510,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 176,
																	"src": "5780:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 516,
															"nodeType": "RevertStatement",
															"src": "5773:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 519,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "5834:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 520,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 533,
												"nodeType": "IfStatement",
												"src": "5830:86:3",
												"trueBody": {
													"id": 532,
													"nodeType": "Block",
													"src": "5852:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 528,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 526,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 525,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "5873:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 531,
															"nodeType": "RevertStatement",
															"src": "5866:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "5933:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "5939:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "5943:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 534,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "5925:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:3"
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "5675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "5689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "5701:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:3"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:3"
									},
									"scope": 811,
									"src": "5656:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 617,
										"nodeType": "Block",
										"src": "6346:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 551,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "6360:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 552,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 555,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 588,
													"nodeType": "Block",
													"src": "6534:362:3",
													"statements": [
														{
															"assignments": [
																563
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 563,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 588,
																	"src": "6548:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 562,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 567,
															"initialValue": {
																"baseExpression": {
																	"id": 564,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "6570:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 566,
																"indexExpression": {
																	"id": 565,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "6580:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 568,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "6603:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 569,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "6617:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 578,
															"nodeType": "IfStatement",
															"src": "6599:115:3",
															"trueBody": {
																"id": 577,
																"nodeType": "Block",
																"src": "6624:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 572,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 544,
																					"src": "6674:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 573,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 563,
																					"src": "6680:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 574,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 548,
																					"src": "6693:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 571,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 171,
																				"src": "6649:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 576,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:3"
																	}
																]
															}
														},
														{
															"id": 587,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 579,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 319,
																				"src": "6834:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 581,
																			"indexExpression": {
																				"id": 580,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 544,
																				"src": "6844:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 582,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 563,
																				"src": "6852:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 583,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 548,
																				"src": "6866:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 586,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:3"
																}
															]
														}
													]
												},
												"id": 589,
												"nodeType": "IfStatement",
												"src": "6356:540:3",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "6380:148:3",
													"statements": [
														{
															"expression": {
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 557,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "6496:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 558,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "6512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 560,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 590,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "6910:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 591,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 609,
													"nodeType": "Block",
													"src": "7125:206:3",
													"statements": [
														{
															"id": 608,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 602,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 319,
																				"src": "7284:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 604,
																			"indexExpression": {
																				"id": 603,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 546,
																				"src": "7294:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 605,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 548,
																			"src": "7301:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 607,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:3"
																}
															]
														}
													]
												},
												"id": 610,
												"nodeType": "IfStatement",
												"src": "6906:425:3",
												"trueBody": {
													"id": 601,
													"nodeType": "Block",
													"src": "6928:191:3",
													"statements": [
														{
															"id": 600,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 596,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 327,
																			"src": "7073:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 597,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 548,
																			"src": "7089:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 599,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 612,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "7355:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 613,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "7361:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 614,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "7365:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 611,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "7346:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 616,
												"nodeType": "EmitStatement",
												"src": "7341:30:3"
											}
										]
									},
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "6288:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "6302:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "6314:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:3"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:3"
									},
									"scope": 811,
									"src": "6271:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "7777:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 626,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "7791:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 627,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 630,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 640,
												"nodeType": "IfStatement",
												"src": "7787:91:3",
												"trueBody": {
													"id": 639,
													"nodeType": "Block",
													"src": "7814:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 633,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 632,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "7835:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 638,
															"nodeType": "RevertStatement",
															"src": "7828:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 642,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 646,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "7907:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 647,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "7916:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 641,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "7887:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:3"
											}
										]
									},
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7736:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7753:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:3"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:3"
									},
									"scope": 811,
									"src": "7721:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "8303:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 659,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "8317:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 660,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 663,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 673,
												"nodeType": "IfStatement",
												"src": "8313:89:3",
												"trueBody": {
													"id": 672,
													"nodeType": "Block",
													"src": "8340:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 668,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 667,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 666,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 665,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 176,
																	"src": "8361:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 671,
															"nodeType": "RevertStatement",
															"src": "8354:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 675,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "8419:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 676,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 680,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "8440:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 674,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "8411:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:3"
											}
										]
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "8262:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "8279:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:3"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:3"
									},
									"scope": 811,
									"src": "8247:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "9063:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 695,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "9082:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 696,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "9089:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 697,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "9098:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 694,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															702,
															762
														],
														"referencedDeclaration": 762,
														"src": "9073:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:3"
											}
										]
									},
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "9007:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "9022:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "9039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:3"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:3"
									},
									"scope": 811,
									"src": "8989:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "10047:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 714,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "10061:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 715,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 718,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 728,
												"nodeType": "IfStatement",
												"src": "10057:89:3",
												"trueBody": {
													"id": 727,
													"nodeType": "Block",
													"src": "10082:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 723,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 721,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 720,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "10103:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 726,
															"nodeType": "RevertStatement",
															"src": "10096:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 729,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "10159:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 730,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 743,
												"nodeType": "IfStatement",
												"src": "10155:90:3",
												"trueBody": {
													"id": 742,
													"nodeType": "Block",
													"src": "10182:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 738,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 736,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 735,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "10203:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 741,
															"nodeType": "RevertStatement",
															"src": "10196:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 744,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 325,
																"src": "10254:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 747,
															"indexExpression": {
																"id": 745,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 705,
																"src": "10266:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 748,
														"indexExpression": {
															"id": 746,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "10273:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 749,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "10284:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:3"
											},
											{
												"condition": {
													"id": 752,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 711,
													"src": "10303:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 760,
												"nodeType": "IfStatement",
												"src": "10299:76:3",
												"trueBody": {
													"id": 759,
													"nodeType": "Block",
													"src": "10314:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 754,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 705,
																		"src": "10342:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 755,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "10349:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 756,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 709,
																		"src": "10358:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 753,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "10333:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 758,
															"nodeType": "EmitStatement",
															"src": "10328:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "9967:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "9982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "9999:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "10014:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 710,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:3"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:3"
									},
									"scope": 811,
									"src": "9949:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "10752:388:3",
										"statements": [
											{
												"assignments": [
													773
												],
												"declarations": [
													{
														"constant": false,
														"id": 773,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 809,
														"src": "10762:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 772,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 778,
												"initialValue": {
													"arguments": [
														{
															"id": 775,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "10799:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 776,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "10806:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 774,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "10789:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 779,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "10828:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 781,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 780,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 784,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 808,
												"nodeType": "IfStatement",
												"src": "10824:310:3",
												"trueBody": {
													"id": 807,
													"nodeType": "Block",
													"src": "10867:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 786,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "10885:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 787,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "10904:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 796,
															"nodeType": "IfStatement",
															"src": "10881:130:3",
															"trueBody": {
																"id": 795,
																"nodeType": "Block",
																"src": "10911:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 790,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 767,
																					"src": "10963:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 791,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 773,
																					"src": "10972:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 792,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 769,
																					"src": "10990:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 789,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 190,
																				"src": "10936:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 794,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:3"
																	}
																]
															}
														},
														{
															"id": 806,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 798,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 765,
																				"src": "11061:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 799,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 767,
																				"src": "11068:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 802,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 800,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 773,
																					"src": "11077:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 801,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 769,
																					"src": "11096:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 803,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 797,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				702,
																				762
																			],
																			"referencedDeclaration": 762,
																			"src": "11052:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 805,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "10688:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "10703:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "10720:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:3"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:3"
									},
									"scope": 811,
									"src": "10663:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 812,
							"src": "1401:9741:3",
							"usedErrors": [
								171,
								176,
								181,
								190,
								195,
								200
							],
							"usedEvents": [
								823,
								832
							]
						}
					],
					"src": "105:11038:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							889
						]
					},
					"id": 890,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 813,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 814,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 889,
							"linearizedBaseContracts": [
								889
							],
							"name": "IERC20",
							"nameLocation": "213:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 823,
									"name": "Transfer",
									"nameLocation": "395:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "404:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "426:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:4"
									},
									"src": "389:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 832,
									"name": "Approval",
									"nameLocation": "626:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "635:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "658:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "683:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:4"
									},
									"src": "620:78:4"
								},
								{
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 838,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 889,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 846,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "930:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:4"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "970:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:4"
									},
									"scope": 889,
									"src": "911:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 856,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "1221:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "1233:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:4"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "1266:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 853,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:4"
									},
									"scope": 889,
									"src": "1203:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 866,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1566:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1581:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:4"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1621:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:4"
									},
									"scope": 889,
									"src": "1547:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2325:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:4"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 889,
									"src": "2308:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 888,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "2711:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "2725:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "2737:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:4"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "2770:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 885,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:4"
									},
									"scope": 889,
									"src": "2689:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 890,
							"src": "203:2575:4",
							"usedErrors": [],
							"usedEvents": [
								823,
								832
							]
						}
					],
					"src": "106:2673:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1025
						],
						"ERC20": [
							811
						],
						"ERC20Burnable": [
							935
						]
					},
					"id": 936,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 891,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 893,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 936,
							"sourceUnit": 812,
							"src": "150:35:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 892,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 811,
										"src": "158:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 895,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 936,
							"sourceUnit": 1026,
							"src": "186:51:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 894,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1025,
										"src": "194:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 897,
										"name": "Context",
										"nameLocations": [
											"483:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1025,
										"src": "483:7:5"
									},
									"id": 898,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:5"
								},
								{
									"baseName": {
										"id": 899,
										"name": "ERC20",
										"nameLocations": [
											"492:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 811,
										"src": "492:5:5"
									},
									"id": 900,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:5"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 896,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:5",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 935,
							"linearizedBaseContracts": [
								935,
								811,
								201,
								995,
								889,
								1025
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "662:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 907,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1007,
																"src": "678:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "692:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 906,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "672:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "672:26:5"
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:5",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "632:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:5"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:5"
									},
									"scope": 935,
									"src": "618:87:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 933,
										"nodeType": "Block",
										"src": "1086:93:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 922,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "1112:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 923,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1007,
																"src": "1121:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 925,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "1135:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 921,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "1096:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 929,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "1157:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 930,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "1166:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 928,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "1151:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 932,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:5"
											}
										]
									},
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:5",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1039:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1056:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:5"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:5"
									},
									"scope": 935,
									"src": "1021:158:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 936,
							"src": "448:733:5",
							"usedErrors": [
								171,
								176,
								181,
								190,
								195,
								200
							],
							"usedEvents": [
								823,
								832
							]
						}
					],
					"src": "124:1058:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
					"exportedSymbols": {
						"ERC20": [
							811
						],
						"ERC20Pausable": [
							969
						],
						"Pausable": [
							1142
						]
					},
					"id": 970,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 937,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 939,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 970,
							"sourceUnit": 812,
							"src": "150:35:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 938,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 811,
										"src": "158:5:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "../../../utils/Pausable.sol",
							"id": 941,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 970,
							"sourceUnit": 1143,
							"src": "186:53:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 940,
										"name": "Pausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1142,
										"src": "194:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 943,
										"name": "ERC20",
										"nameLocations": [
											"964:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 811,
										"src": "964:5:6"
									},
									"id": 944,
									"nodeType": "InheritanceSpecifier",
									"src": "964:5:6"
								},
								{
									"baseName": {
										"id": 945,
										"name": "Pausable",
										"nameLocations": [
											"971:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1142,
										"src": "971:8:6"
									},
									"id": 946,
									"nodeType": "InheritanceSpecifier",
									"src": "971:8:6"
								}
							],
							"canonicalName": "ERC20Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 942,
								"nodeType": "StructuredDocumentation",
								"src": "241:687:6",
								"text": " @dev ERC20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."
							},
							"fullyImplemented": true,
							"id": 969,
							"linearizedBaseContracts": [
								969,
								1142,
								811,
								201,
								995,
								889,
								1025
							],
							"name": "ERC20Pausable",
							"nameLocation": "947:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										618
									],
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "1210:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 962,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "1234:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 963,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "1240:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 964,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "1244:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 959,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1220:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Pausable_$969_$",
																"typeString": "type(contract super ERC20Pausable)"
															}
														},
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1226:7:6",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 618,
														"src": "1220:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1220:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "1220:30:6"
											}
										]
									},
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "986:121:6",
										"text": " @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."
									},
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 957,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 956,
												"name": "whenNotPaused",
												"nameLocations": [
													"1196:13:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1067,
												"src": "1196:13:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1196:13:6"
										}
									],
									"name": "_update",
									"nameLocation": "1121:7:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 955,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1187:8:6"
									},
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1137:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "1129:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1151:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "1143:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1163:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "1155:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:41:6"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1210:0:6"
									},
									"scope": 969,
									"src": "1112:145:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 970,
							"src": "929:330:6",
							"usedErrors": [
								171,
								176,
								181,
								190,
								195,
								200,
								1047,
								1050
							],
							"usedEvents": [
								823,
								832,
								1039,
								1044
							]
						}
					],
					"src": "124:1136:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							889
						],
						"IERC20Metadata": [
							995
						]
					},
					"id": 996,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 971,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 973,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 996,
							"sourceUnit": 890,
							"src": "151:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 972,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 889,
										"src": "159:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 975,
										"name": "IERC20",
										"nameLocations": [
											"305:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 889,
										"src": "305:6:7"
									},
									"id": 976,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:7"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 974,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:7",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 995,
							"linearizedBaseContracts": [
								995,
								889
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 982,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:7"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "416:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 979,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:7"
									},
									"scope": 995,
									"src": "377:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:7",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 988,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:7"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "539:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 985,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:7"
									},
									"scope": 995,
									"src": "498:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 989,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:7",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 994,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:7"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "673:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 991,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:7"
									},
									"scope": 995,
									"src": "630:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 996,
							"src": "277:405:7",
							"usedErrors": [],
							"usedEvents": [
								823,
								832
							]
						}
					],
					"src": "125:558:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1025
						]
					},
					"id": 1026,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 997,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 998,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1025,
							"linearizedBaseContracts": [
								1025
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1003,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1002,
												"id": 1005,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1025,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1012,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1011,
												"id": 1014,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1009,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1025,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1020,
												"id": 1022,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1025,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1026,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1025
						],
						"Pausable": [
							1142
						]
					},
					"id": 1143,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1027,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1029,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1143,
							"sourceUnit": 1026,
							"src": "128:45:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1028,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1025,
										"src": "136:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1031,
										"name": "Context",
										"nameLocations": [
											"645:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1025,
										"src": "645:7:9"
									},
									"id": 1032,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:9"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1030,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:9",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1142,
							"linearizedBaseContracts": [
								1142,
								1025
							],
							"name": "Pausable",
							"nameLocation": "633:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1034,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1142,
									"src": "659:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1033,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:9",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 1039,
									"name": "Paused",
									"nameLocation": "770:6:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "777:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:9"
									},
									"src": "764:30:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1040,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:9",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 1044,
									"name": "Unpaused",
									"nameLocation": "881:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "890:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:9"
									},
									"src": "875:32:9"
								},
								{
									"documentation": {
										"id": 1045,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:9",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 1047,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:9"
									},
									"src": "994:22:9"
								},
								{
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:9",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 1050,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:9"
									},
									"src": "1107:22:9"
								},
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "1221:32:9",
										"statements": [
											{
												"expression": {
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1054,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "1231:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1241:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1231:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "1231:15:9"
											}
										]
									},
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "1135:67:9",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 1059,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1218:2:9"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:9"
									},
									"scope": 1142,
									"src": "1207:46:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1066,
										"nodeType": "Block",
										"src": "1464:47:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1062,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "1474:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1474:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "1474:19:9"
											},
											{
												"id": 1065,
												"nodeType": "PlaceholderStatement",
												"src": "1503:1:9"
											}
										]
									},
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "1259:175:9",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1067,
									"name": "whenNotPaused",
									"nameLocation": "1448:13:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1461:2:9"
									},
									"src": "1439:72:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "1711:44:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1070,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "1721:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "1721:16:9"
											},
											{
												"id": 1073,
												"nodeType": "PlaceholderStatement",
												"src": "1747:1:9"
											}
										]
									},
									"documentation": {
										"id": 1068,
										"nodeType": "StructuredDocumentation",
										"src": "1517:167:9",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1075,
									"name": "whenPaused",
									"nameLocation": "1698:10:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:2:9"
									},
									"src": "1689:66:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "1903:31:9",
										"statements": [
											{
												"expression": {
													"id": 1081,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1034,
													"src": "1920:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1080,
												"id": 1082,
												"nodeType": "Return",
												"src": "1913:14:9"
											}
										]
									},
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "1761:84:9",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1859:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:2:9"
									},
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1897:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1078,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1897:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:6:9"
									},
									"scope": 1142,
									"src": "1850:84:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "2053:77:9",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1088,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "2067:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:8:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1094,
												"nodeType": "IfStatement",
												"src": "2063:61:9",
												"trueBody": {
													"id": 1093,
													"nodeType": "Block",
													"src": "2077:47:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1090,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1047,
																	"src": "2098:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2098:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1092,
															"nodeType": "RevertStatement",
															"src": "2091:22:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "1940:57:9",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2011:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:9"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:9"
									},
									"scope": 1142,
									"src": "2002:128:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1108,
										"nodeType": "Block",
										"src": "2250:78:9",
										"statements": [
											{
												"condition": {
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2264:9:9",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1100,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "2265:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2265:8:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1107,
												"nodeType": "IfStatement",
												"src": "2260:62:9",
												"trueBody": {
													"id": 1106,
													"nodeType": "Block",
													"src": "2275:47:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1103,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1050,
																	"src": "2296:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2296:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1105,
															"nodeType": "RevertStatement",
															"src": "2289:22:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "2136:61:9",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2211:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:9"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2250:0:9"
									},
									"scope": 1142,
									"src": "2202:126:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "2512:66:9",
										"statements": [
											{
												"expression": {
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1115,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "2522:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2532:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2522:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "2522:14:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1120,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1007,
																"src": "2558:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2558:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1119,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "2551:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1123,
												"nodeType": "EmitStatement",
												"src": "2546:25:9"
											}
										]
									},
									"documentation": {
										"id": 1110,
										"nodeType": "StructuredDocumentation",
										"src": "2334:124:9",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1125,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1113,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1112,
												"name": "whenNotPaused",
												"nameLocations": [
													"2498:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1067,
												"src": "2498:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2498:13:9"
										}
									],
									"name": "_pause",
									"nameLocation": "2472:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:2:9"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:9"
									},
									"scope": 1142,
									"src": "2463:115:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1140,
										"nodeType": "Block",
										"src": "2758:69:9",
										"statements": [
											{
												"expression": {
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1131,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "2768:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2778:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2768:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "2768:15:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1136,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1007,
																"src": "2807:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2807:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1135,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "2798:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1139,
												"nodeType": "EmitStatement",
												"src": "2793:27:9"
											}
										]
									},
									"documentation": {
										"id": 1126,
										"nodeType": "StructuredDocumentation",
										"src": "2584:121:9",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1141,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1129,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1128,
												"name": "whenPaused",
												"nameLocations": [
													"2747:10:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1075,
												"src": "2747:10:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2747:10:9"
										}
									],
									"name": "_unpause",
									"nameLocation": "2719:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:9"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:0:9"
									},
									"scope": 1142,
									"src": "2710:117:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1143,
							"src": "615:2214:9",
							"usedErrors": [
								1047,
								1050
							],
							"usedEvents": [
								1039,
								1044
							]
						}
					],
					"src": "102:2728:9"
				},
				"id": 9
			},
			"contracts/ERC20Reward.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20Reward.sol",
					"exportedSymbols": {
						"Context": [
							1025
						],
						"ERC20": [
							811
						],
						"ERC20Burnable": [
							935
						],
						"ERC20Pausable": [
							969
						],
						"ERC20Reward": [
							1474
						],
						"IERC20": [
							889
						],
						"IERC20Errors": [
							201
						],
						"IERC20Metadata": [
							995
						],
						"IMessageRecipient": [
							11
						],
						"Ownable": [
							159
						],
						"Pausable": [
							1142
						]
					},
					"id": 1475,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1144,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1145,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1475,
							"sourceUnit": 812,
							"src": "61:55:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@hyperlane-xyz/core/contracts/interfaces/IMessageRecipient.sol",
							"file": "@hyperlane-xyz/core/contracts/interfaces/IMessageRecipient.sol",
							"id": 1146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1475,
							"sourceUnit": 12,
							"src": "118:72:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1147,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1475,
							"sourceUnit": 160,
							"src": "192:52:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
							"id": 1148,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1475,
							"sourceUnit": 970,
							"src": "246:74:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1149,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1475,
							"sourceUnit": 936,
							"src": "322:74:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1150,
										"name": "ERC20Pausable",
										"nameLocations": [
											"424:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 969,
										"src": "424:13:10"
									},
									"id": 1151,
									"nodeType": "InheritanceSpecifier",
									"src": "424:13:10"
								},
								{
									"baseName": {
										"id": 1152,
										"name": "IMessageRecipient",
										"nameLocations": [
											"439:17:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "439:17:10"
									},
									"id": 1153,
									"nodeType": "InheritanceSpecifier",
									"src": "439:17:10"
								},
								{
									"baseName": {
										"id": 1154,
										"name": "Ownable",
										"nameLocations": [
											"458:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 159,
										"src": "458:7:10"
									},
									"id": 1155,
									"nodeType": "InheritanceSpecifier",
									"src": "458:7:10"
								},
								{
									"baseName": {
										"id": 1156,
										"name": "ERC20Burnable",
										"nameLocations": [
											"467:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 935,
										"src": "467:13:10"
									},
									"id": 1157,
									"nodeType": "InheritanceSpecifier",
									"src": "467:13:10"
								}
							],
							"canonicalName": "ERC20Reward",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1474,
							"linearizedBaseContracts": [
								1474,
								935,
								159,
								11,
								969,
								1142,
								811,
								201,
								995,
								889,
								1025
							],
							"name": "ERC20Reward",
							"nameLocation": "409:11:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "1a6e4db4",
									"id": 1159,
									"mutability": "mutable",
									"name": "hyperlaneMailbox",
									"nameLocation": "503:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 1474,
									"src": "488:31:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1158,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "488:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1d187c50",
									"id": 1163,
									"mutability": "mutable",
									"name": "trustedRemotes",
									"nameLocation": "560:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 1474,
									"src": "526:48:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint32_$_t_bytes32_$",
										"typeString": "mapping(uint32 => bytes32)"
									},
									"typeName": {
										"id": 1162,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1160,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "534:6:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										},
										"nodeType": "Mapping",
										"src": "526:26:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint32_$_t_bytes32_$",
											"typeString": "mapping(uint32 => bytes32)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1161,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "544:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "32cb6b0c",
									"id": 1170,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nameLocation": "607:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 1474,
									"src": "583:53:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1164,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "583:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										},
										"id": 1169,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030303030",
											"id": 1165,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "620:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"value": "1000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1168,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1166,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "630:2:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1167,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "634:2:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "630:6:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "620:16:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "bca12299",
									"id": 1177,
									"mutability": "constant",
									"name": "DAILY_REWARD_LIMIT",
									"nameLocation": "687:18:10",
									"nodeType": "VariableDeclaration",
									"scope": 1474,
									"src": "663:58:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1171,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "663:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000"
										},
										"id": 1176,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030",
											"id": 1172,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "708:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000_by_1",
												"typeString": "int_const 1000"
											},
											"value": "1000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1175,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1173,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "715:2:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1174,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "719:2:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "715:6:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "708:13:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4080d640",
									"id": 1181,
									"mutability": "mutable",
									"name": "gameMasters",
									"nameLocation": "777:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1474,
									"src": "745:43:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1180,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1178,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "753:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "745:24:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1179,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "764:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3b5d441e",
									"id": 1185,
									"mutability": "mutable",
									"name": "lastRewardTime",
									"nameLocation": "830:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 1474,
									"src": "795:49:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1184,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1182,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "803:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "795:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1183,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "814:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1187,
									"mutability": "mutable",
									"name": "_tokenIdCounter",
									"nameLocation": "867:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1474,
									"src": "851:31:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1186,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "851:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "e8ea3d4dd0a2eaaf3f7532ad391255544f8a4bcf78f850bbff61d5bac9f77552",
									"id": 1193,
									"name": "RewardMinted",
									"nameLocation": "897:12:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"indexed": true,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "926:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "910:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "942:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "934:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:40:10"
									},
									"src": "891:59:10"
								},
								{
									"anonymous": false,
									"eventSelector": "0090e5d96e2f61f1fa8b5c535ec11045a07288f1ee285325f85caf8379789e24",
									"id": 1197,
									"name": "GameMasterAdded",
									"nameLocation": "962:15:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"indexed": true,
												"mutability": "mutable",
												"name": "gameMaster",
												"nameLocation": "994:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "978:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "978:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "977:28:10"
									},
									"src": "956:50:10"
								},
								{
									"anonymous": false,
									"eventSelector": "22c7af3157a517d9d910083d0cd16646c9204f9d52824a23558c7d97d796d638",
									"id": 1201,
									"name": "GameMasterRemoved",
									"nameLocation": "1018:17:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"indexed": true,
												"mutability": "mutable",
												"name": "gameMaster",
												"nameLocation": "1052:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "1036:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1036:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1035:28:10"
									},
									"src": "1012:52:10"
								},
								{
									"body": {
										"id": 1225,
										"nodeType": "Block",
										"src": "1153:96:10",
										"statements": [
											{
												"expression": {
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1214,
														"name": "hyperlaneMailbox",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "1164:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1215,
														"name": "_hyperlaneMailbox",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1203,
														"src": "1183:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1164:36:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "1164:36:10"
											},
											{
												"expression": {
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1218,
															"name": "gameMasters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "1211:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1221,
														"indexExpression": {
															"expression": {
																"id": 1219,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1223:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1227:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1223:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1211:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1222,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1237:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1211:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1224,
												"nodeType": "ExpressionStatement",
												"src": "1211:30:10"
											}
										]
									},
									"id": 1226,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "42696c6973",
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1117:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8b4da25e01e3d9080a31f895d2867e55d3e9c03e03c706884a9850cf919d214a",
														"typeString": "literal_string \"Bilis\""
													},
													"value": "Bilis"
												},
												{
													"hexValue": "424c53",
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1126:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_03312e92b2e452b08a37e5bf00e2a142467e9503765bb15094075651f69079cd",
														"typeString": "literal_string \"BLS\""
													},
													"value": "BLS"
												}
											],
											"id": 1208,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1205,
												"name": "ERC20",
												"nameLocations": [
													"1111:5:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 811,
												"src": "1111:5:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1111:21:10"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1210,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1141:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1145:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1141:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1212,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1209,
												"name": "Ownable",
												"nameLocations": [
													"1133:7:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 159,
												"src": "1133:7:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1133:19:10"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "_hyperlaneMailbox",
												"nameLocation": "1092:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "1084:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1084:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1083:27:10"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1153:0:10"
									},
									"scope": 1474,
									"src": "1072:177:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1237,
										"nodeType": "Block",
										"src": "1283:94:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1229,
																"name": "gameMasters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1181,
																"src": "1302:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1232,
															"indexExpression": {
																"expression": {
																	"id": 1230,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1314:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1318:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1314:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1302:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420612067616d65206d6173746572",
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1327:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af9de9f3a8f4f335265b3452d42258fa87673e93a1bbcef78a6041ae4a3c581f",
																"typeString": "literal_string \"Caller is not a game master\""
															},
															"value": "Caller is not a game master"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af9de9f3a8f4f335265b3452d42258fa87673e93a1bbcef78a6041ae4a3c581f",
																"typeString": "literal_string \"Caller is not a game master\""
															}
														],
														"id": 1228,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1294:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1294:63:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "1294:63:10"
											},
											{
												"id": 1236,
												"nodeType": "PlaceholderStatement",
												"src": "1368:1:10"
											}
										]
									},
									"id": 1238,
									"name": "onlyGameMaster",
									"nameLocation": "1266:14:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1280:2:10"
									},
									"src": "1257:120:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										10
									],
									"body": {
										"id": 1286,
										"nodeType": "Block",
										"src": "1530:298:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1251,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1549:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1553:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1549:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1253,
																"name": "hyperlaneMailbox",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "1563:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1549:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206d75737420626520746865206d61696c626f78",
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1581:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d779633da7aa6afc4bf7e18b64398c6c4ebdad07e65217aa5101b9af110cfa9b",
																"typeString": "literal_string \"Caller must be the mailbox\""
															},
															"value": "Caller must be the mailbox"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d779633da7aa6afc4bf7e18b64398c6c4ebdad07e65217aa5101b9af110cfa9b",
																"typeString": "literal_string \"Caller must be the mailbox\""
															}
														],
														"id": 1250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1541:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1541:69:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "1541:69:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1259,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1242,
																"src": "1629:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"baseExpression": {
																	"id": 1260,
																	"name": "trustedRemotes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1163,
																	"src": "1640:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint32_$_t_bytes32_$",
																		"typeString": "mapping(uint32 => bytes32)"
																	}
																},
																"id": 1262,
																"indexExpression": {
																	"id": 1261,
																	"name": "_origin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1240,
																	"src": "1655:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1640:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "1629:34:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e646572206d75737420626520747275737465642072656d6f7465",
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1665:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2d3e2f33b7c9a9059be28c13248e4268f93c7a3fb0753c46110f33b87a85a64",
																"typeString": "literal_string \"Sender must be trusted remote\""
															},
															"value": "Sender must be trusted remote"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2d3e2f33b7c9a9059be28c13248e4268f93c7a3fb0753c46110f33b87a85a64",
																"typeString": "literal_string \"Sender must be trusted remote\""
															}
														],
														"id": 1258,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1621:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1621:76:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1266,
												"nodeType": "ExpressionStatement",
												"src": "1621:76:10"
											},
											{
												"assignments": [
													1268,
													1270
												],
												"declarations": [
													{
														"constant": false,
														"id": 1268,
														"mutability": "mutable",
														"name": "player",
														"nameLocation": "1719:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1286,
														"src": "1711:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1267,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1711:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1270,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "1735:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1286,
														"src": "1727:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1269,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1727:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1280,
												"initialValue": {
													"arguments": [
														{
															"id": 1273,
															"name": "_body",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "1756:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"components": [
																{
																	"id": 1275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1764:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1274,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1764:7:10",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 1277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1773:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1276,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1773:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 1278,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1763:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
																"typeString": "tuple(type(address),type(uint256))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
																"typeString": "tuple(type(address),type(uint256))"
															}
														],
														"expression": {
															"id": 1271,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "1745:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1749:6:10",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "1745:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1745:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_payable_$_t_uint256_$",
														"typeString": "tuple(address payable,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1710:72:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1282,
															"name": "player",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "1805:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1283,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "1813:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1281,
														"name": "_mintReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1422,
														"src": "1793:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1793:27:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1285,
												"nodeType": "ExpressionStatement",
												"src": "1793:27:10"
											}
										]
									},
									"functionSelector": "56d5d475",
									"id": 1287,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1248,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1247,
												"name": "whenNotPaused",
												"nameLocations": [
													"1516:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1067,
												"src": "1516:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1516:13:10"
										}
									],
									"name": "handle",
									"nameLocation": "1394:6:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1246,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1507:8:10"
									},
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "_origin",
												"nameLocation": "1418:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "1411:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1239,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1411:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "1444:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "1436:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1241,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1436:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "_body",
												"nameLocation": "1477:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "1462:20:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1243,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1462:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1400:89:10"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1530:0:10"
									},
									"scope": 1474,
									"src": "1385:443:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "1921:59:10",
										"statements": [
											{
												"expression": {
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1296,
															"name": "trustedRemotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "1932:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint32_$_t_bytes32_$",
																"typeString": "mapping(uint32 => bytes32)"
															}
														},
														"id": 1298,
														"indexExpression": {
															"id": 1297,
															"name": "_domain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "1947:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1932:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1299,
														"name": "_trustedRemote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "1958:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1932:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1301,
												"nodeType": "ExpressionStatement",
												"src": "1932:40:10"
											}
										]
									},
									"functionSelector": "2bda3e0b",
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1294,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1293,
												"name": "onlyOwner",
												"nameLocations": [
													"1911:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 70,
												"src": "1911:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1911:9:10"
										}
									],
									"name": "setTrustedRemote",
									"nameLocation": "1845:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "_domain",
												"nameLocation": "1869:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1862:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1288,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1862:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "_trustedRemote",
												"nameLocation": "1886:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1878:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1290,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1861:40:10"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1921:0:10"
									},
									"scope": 1474,
									"src": "1836:144:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "2045:46:10",
										"statements": [
											{
												"expression": {
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1310,
														"name": "hyperlaneMailbox",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "2056:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1311,
														"name": "_mailbox",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1305,
														"src": "2075:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2056:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1313,
												"nodeType": "ExpressionStatement",
												"src": "2056:27:10"
											}
										]
									},
									"functionSelector": "f3c61d6b",
									"id": 1315,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1308,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1307,
												"name": "onlyOwner",
												"nameLocations": [
													"2035:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 70,
												"src": "2035:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2035:9:10"
										}
									],
									"name": "setMailbox",
									"nameLocation": "1997:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "_mailbox",
												"nameLocation": "2016:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "2008:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2007:18:10"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2045:0:10"
									},
									"scope": 1474,
									"src": "1988:103:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1332,
										"nodeType": "Block",
										"src": "2162:94:10",
										"statements": [
											{
												"expression": {
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1322,
															"name": "gameMasters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "2173:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1324,
														"indexExpression": {
															"id": 1323,
															"name": "_gameMaster",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "2185:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2173:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1325,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2200:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2173:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1327,
												"nodeType": "ExpressionStatement",
												"src": "2173:31:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1329,
															"name": "_gameMaster",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "2236:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1328,
														"name": "GameMasterAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "2220:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2220:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1331,
												"nodeType": "EmitStatement",
												"src": "2215:33:10"
											}
										]
									},
									"functionSelector": "8b1c7b10",
									"id": 1333,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1320,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1319,
												"name": "onlyOwner",
												"nameLocations": [
													"2152:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 70,
												"src": "2152:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2152:9:10"
										}
									],
									"name": "addGameMaster",
									"nameLocation": "2108:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "_gameMaster",
												"nameLocation": "2130:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "2122:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2122:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2121:21:10"
									},
									"returnParameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2162:0:10"
									},
									"scope": 1474,
									"src": "2099:157:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1350,
										"nodeType": "Block",
										"src": "2330:97:10",
										"statements": [
											{
												"expression": {
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1340,
															"name": "gameMasters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "2341:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1342,
														"indexExpression": {
															"id": 1341,
															"name": "_gameMaster",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "2353:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2341:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2368:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2341:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1345,
												"nodeType": "ExpressionStatement",
												"src": "2341:32:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1347,
															"name": "_gameMaster",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "2407:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1346,
														"name": "GameMasterRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "2389:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2389:30:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1349,
												"nodeType": "EmitStatement",
												"src": "2384:35:10"
											}
										]
									},
									"functionSelector": "dfca5ce3",
									"id": 1351,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1338,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1337,
												"name": "onlyOwner",
												"nameLocations": [
													"2320:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 70,
												"src": "2320:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2320:9:10"
										}
									],
									"name": "removeGameMaster",
									"nameLocation": "2273:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "_gameMaster",
												"nameLocation": "2298:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2290:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:21:10"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2330:0:10"
									},
									"scope": 1474,
									"src": "2264:163:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1367,
										"nodeType": "Block",
										"src": "2527:48:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1363,
															"name": "_player",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "2550:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1364,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "2559:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1362,
														"name": "_mintReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1422,
														"src": "2538:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2538:29:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1366,
												"nodeType": "ExpressionStatement",
												"src": "2538:29:10"
											}
										]
									},
									"functionSelector": "9a49090e",
									"id": 1368,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1358,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1357,
												"name": "onlyGameMaster",
												"nameLocations": [
													"2498:14:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1238,
												"src": "2498:14:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2498:14:10"
										},
										{
											"id": 1360,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1359,
												"name": "whenNotPaused",
												"nameLocations": [
													"2513:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1067,
												"src": "2513:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2513:13:10"
										}
									],
									"name": "mintReward",
									"nameLocation": "2444:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "_player",
												"nameLocation": "2463:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "2455:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2455:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2480:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "2472:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2472:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2454:34:10"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2527:0:10"
									},
									"scope": 1474,
									"src": "2435:140:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1421,
										"nodeType": "Block",
										"src": "2647:401:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1376,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 384,
																		"src": "2666:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2666:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1378,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1372,
																	"src": "2682:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2666:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1380,
																"name": "MAX_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1170,
																"src": "2693:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2666:37:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d617820737570706c792072656163686564",
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2705:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7",
																"typeString": "literal_string \"Max supply reached\""
															},
															"value": "Max supply reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7",
																"typeString": "literal_string \"Max supply reached\""
															}
														],
														"id": 1375,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2658:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2658:68:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1384,
												"nodeType": "ExpressionStatement",
												"src": "2658:68:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1386,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2745:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2751:9:10",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2745:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1388,
																		"name": "lastRewardTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1185,
																		"src": "2763:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1390,
																	"indexExpression": {
																		"id": 1389,
																		"name": "_player",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1370,
																		"src": "2778:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2763:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2745:41:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31",
																"id": 1392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2790:6:10",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															},
															"src": "2745:51:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4461696c7920726577617264206c696d69742072656163686564",
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2798:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b162163e3887bdbccae301c2aa99edec2d2f38be162ca215e0a43764a9164483",
																"typeString": "literal_string \"Daily reward limit reached\""
															},
															"value": "Daily reward limit reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b162163e3887bdbccae301c2aa99edec2d2f38be162ca215e0a43764a9164483",
																"typeString": "literal_string \"Daily reward limit reached\""
															}
														],
														"id": 1385,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2737:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2737:90:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1396,
												"nodeType": "ExpressionStatement",
												"src": "2737:90:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1398,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1372,
																"src": "2846:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1399,
																"name": "DAILY_REWARD_LIMIT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "2857:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2846:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265776172642065786365656473206461696c79206c696d6974",
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2877:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3871822cd4b8083b4c0a5f06eed00eca61d1c23f87702b5ec1297ed417c8e2c3",
																"typeString": "literal_string \"Reward exceeds daily limit\""
															},
															"value": "Reward exceeds daily limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3871822cd4b8083b4c0a5f06eed00eca61d1c23f87702b5ec1297ed417c8e2c3",
																"typeString": "literal_string \"Reward exceeds daily limit\""
															}
														],
														"id": 1397,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2838:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2838:68:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1403,
												"nodeType": "ExpressionStatement",
												"src": "2838:68:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1405,
															"name": "_player",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "2925:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1406,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "2934:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1404,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "2919:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2919:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "2919:23:10"
											},
											{
												"expression": {
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1409,
															"name": "lastRewardTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "2953:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1411,
														"indexExpression": {
															"id": 1410,
															"name": "_player",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "2968:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2953:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1412,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2979:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2985:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2979:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2953:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1415,
												"nodeType": "ExpressionStatement",
												"src": "2953:41:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1417,
															"name": "_player",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "3023:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1418,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "3032:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1416,
														"name": "RewardMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "3010:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3010:30:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1420,
												"nodeType": "EmitStatement",
												"src": "3005:35:10"
											}
										]
									},
									"id": 1422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintReward",
									"nameLocation": "2592:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "_player",
												"nameLocation": "2612:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "2604:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2604:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2629:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "2621:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2621:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2603:34:10"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2647:0:10"
									},
									"scope": 1474,
									"src": "2583:465:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1433,
										"nodeType": "Block",
										"src": "3105:72:10",
										"statements": [
											{
												"expression": {
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1427,
														"name": "_tokenIdCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "3116:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1428,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3135:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3116:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1430,
												"nodeType": "ExpressionStatement",
												"src": "3116:20:10"
											},
											{
												"expression": {
													"id": 1431,
													"name": "_tokenIdCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1187,
													"src": "3154:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1426,
												"id": 1432,
												"nodeType": "Return",
												"src": "3147:22:10"
											}
										]
									},
									"functionSelector": "010a38f5",
									"id": 1434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenId",
									"nameLocation": "3065:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3075:2:10"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "3096:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3096:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3095:9:10"
									},
									"scope": 1474,
									"src": "3056:121:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										618,
										968
									],
									"body": {
										"id": 1454,
										"nodeType": "Block",
										"src": "3352:49:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1449,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "3377:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1450,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "3383:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1451,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "3387:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1446,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3363:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Reward_$1474_$",
																"typeString": "type(contract super ERC20Reward)"
															}
														},
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3369:7:10",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 968,
														"src": "3363:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3363:30:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "3363:30:10"
											}
										]
									},
									"id": 1455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "3255:7:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1444,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1442,
												"name": "ERC20",
												"nameLocations": [
													"3330:5:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 811,
												"src": "3330:5:10"
											},
											{
												"id": 1443,
												"name": "ERC20Pausable",
												"nameLocations": [
													"3337:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 969,
												"src": "3337:13:10"
											}
										],
										"src": "3321:30:10"
									},
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3271:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "3263:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3263:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3285:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "3277:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3277:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3297:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "3289:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3262:41:10"
									},
									"returnParameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3352:0:10"
									},
									"scope": 1474,
									"src": "3246:155:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1463,
										"nodeType": "Block",
										"src": "3479:27:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1460,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "3490:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3490:8:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1462,
												"nodeType": "ExpressionStatement",
												"src": "3490:8:10"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1464,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1458,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1457,
												"name": "onlyOwner",
												"nameLocations": [
													"3469:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 70,
												"src": "3469:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3469:9:10"
										}
									],
									"name": "pause",
									"nameLocation": "3454:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3459:2:10"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3479:0:10"
									},
									"scope": 1474,
									"src": "3445:61:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1472,
										"nodeType": "Block",
										"src": "3550:29:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1469,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "3561:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3561:10:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1471,
												"nodeType": "ExpressionStatement",
												"src": "3561:10:10"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1473,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1467,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1466,
												"name": "onlyOwner",
												"nameLocations": [
													"3540:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 70,
												"src": "3540:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3540:9:10"
										}
									],
									"name": "unpause",
									"nameLocation": "3523:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3530:2:10"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3550:0:10"
									},
									"scope": 1474,
									"src": "3514:65:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1475,
							"src": "400:3182:10",
							"usedErrors": [
								25,
								30,
								171,
								176,
								181,
								190,
								195,
								200,
								1047,
								1050
							],
							"usedEvents": [
								36,
								823,
								832,
								1039,
								1044,
								1193,
								1197,
								1201
							]
						}
					],
					"src": "33:3549:10"
				},
				"id": 10
			}
		}
	}
}